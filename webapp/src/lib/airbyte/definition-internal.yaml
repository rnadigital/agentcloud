openapi: 3.0.0
info:
  description: |
    Airbyte Configuration API
    [https://airbyte.io](https://airbyte.io).

    The Configuration API is an internal Airbyte API that is designed for communications between different Airbyte components.
    * It's main purpose is to enable the Airbyte Engineering team to configure the internal state of [Airbyte Cloud](https://airbyte.com/airbyte-cloud)
    * It is also sometimes used by OSS users to configure their own Self-Hosted Airbyte deployment (internal state, etc)

    WARNING
    * Airbyte does NOT have active commitments to support this API long-term.
    * OSS users can utilize the Configuration API, but at their own risk.
    * This API is utilized internally by the Airbyte Engineering team and may be modified in the future if the need arises.
    * Modifications by the Airbyte Engineering team could create breaking changes and OSS users would need to update their code to catch up to any backwards incompatible changes in the API.

    This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.

    Here are some conventions that this API follows:
    * All endpoints are http POST methods.
    * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.
    * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.
    * For all `update` methods, the whole object must be passed in, even the fields that did not change.

    Authentication (OSS):
    * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': "Basic YWlyYnl0ZTpwYXNzd29yZA=="`

  version: '1.0.0'
  title: Airbyte Configuration API
  contact:
    email: contact@airbyte.io
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
externalDocs:
  description: Find out more about Airbyte
  url: 'https://airbyte.io'
servers:
  - url: 'https://cloud.airbyte.com/api'
    description: Airbyte Cloud
  - url: 'http://localhost:8000/api'
    description: Local Development
tags:
  - name: workspace
    description: Workspace related resources.
  - name: source_definition
    description: SourceDefinition related resources.
  - name: source_definition_specification
    description: SourceDefinition specification related resources.
  - name: source
    description: Source related resources.
  - name: destination_definition
    description: DestinationDefinition related resources.
  - name: destination_definition_specification
    description: DestinationDefinitionSpecification related resources.
  - name: destination
    description: Destination related resources.
  - name: connection
    description: Connection between sources and destinations.
  - name: destination_oauth
    description: Source OAuth related resources to delegate access from user.
  - name: source_oauth
    description: Source OAuth related resources to delegate access from user.
  - name: web_backend
    description: |
      Endpoints for the Airbyte web application. Those APIs should not be called outside the web application implementation and are not
      guaranteeing any backwards compatibility.
  - name: health
    description: Healthchecks
  - name: deployment
    description: Export/Import Airbyte Configuration and Database resources.
  - name: attempt
    description: Interactions with attempt related resources.
  - name: state
    description: Interactions with state related resources.
  - name: actor_definition_version
    description: Interactions with actor definition version related resources.
  - name: user
    description: Interactions with user related resources.
  - name: permission
    description: Interactions with permission related resources.
  - name: organization
    description: Interactions with organizations.
  - name: deployment_metadata
    description: Metadata about the Airbyte deployment
  - name: applications
    description: Applications can be used to provide api access for Users
  - name: scoped_configuration
    description: Scoped configuration store specific configuration for a given entity. e.g. Overriding a workspaces connector version.
  - name: public
    description: Public resources that are considered stable and are intended to be consumed as API by end users.

paths:
  /v1/workspaces/create:
    post:
      tags:
        - workspace
      summary: Creates a workspace
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/create_if_not_exist:
    post:
      tags:
        - workspace
        - internal
      summary: Creates a workspace with an explicit workspace ID. This should be use in acceptance tests only.
      operationId: createWorkspaceIfNotExist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateWithId'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/delete:
    post:
      tags:
        - workspace
      summary: Deletes a workspace
      operationId: deleteWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/list:
    post:
      tags:
        - workspace
      summary: List all workspaces registered in the current Airbyte deployment
      operationId: listWorkspaces
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
  /v1/workspaces/list_all_paginated:
    post:
      tags:
        - workspace
      summary: List all workspaces registered in the current Airbyte deployment. This function also supports searching by keyword and pagination.
      operationId: listAllWorkspacesPaginated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesForWorkspacesRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
  /v1/workspaces/list_paginated:
    post:
      tags:
        - workspace
      summary: List workspaces by given workspace IDs registered in the current Airbyte deployment. This function also supports pagination.
      operationId: listWorkspacesPaginated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesForWorkspacesRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
  /v1/workspaces/list_by_organization_id:
    post:
      summary: List workspaces under the given org id. This function also supports searching by keyword and pagination.
      tags:
        - workspace
      operationId: listWorkspacesInOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkspacesInOrganizationRequestBody'
      responses:
        '200':
          description: Successfully retrieved workspaces under the given org id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/workspaces/list_by_user_id:
    post:
      summary: List workspaces by a given user id. The function also supports searching by keyword and pagination.
      tags:
        - workspace
      operationId: listWorkspacesByUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkspacesByUserRequestBody'
      responses:
        '200':
          description: Successfully retrieved workspaces by given user id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/workspaces/get:
    post:
      tags:
        - workspace
      summary: Find workspace by ID
      operationId: getWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/get_by_slug:
    post:
      tags:
        - workspace
      summary: Find workspace by slug
      operationId: getWorkspaceBySlug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlugRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/get_by_connection_id:
    post:
      tags:
        - workspace
      summary: Find workspace by connection id
      operationId: getWorkspaceByConnectionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/get_by_connection_id_with_tombstone:
    post:
      tags:
        - workspace
      summary: Find workspace by connection id including the tombstone ones
      operationId: getWorkspaceByConnectionIdWithTombstone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/get_organization_info:
    post:
      tags:
        - workspace
      summary: Retrieve a workspace's basic organization info that is accessible for all workspace members, regardless of organization membership.
      operationId: getOrganizationInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceOrganizationInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/update:
    post:
      tags:
        - workspace
      summary: Update workspace state
      operationId: updateWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/update_name:
    post:
      tags:
        - workspace
      summary: Update workspace name
      operationId: updateWorkspaceName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateName'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/update_organization:
    post:
      tags:
        - workspace
      summary: Update workspace organization
      operationId: updateWorkspaceOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateOrganization'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/workspaces/tag_feedback_status_as_done:
    post:
      tags:
        - workspace
      summary: Update workspace feedback state
      operationId: updateWorkspaceFeedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGiveFeedback'
        required: true
      responses:
        '204':
          description: The feedback state has been properly updated
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/notifications/try:
    post:
      tags:
        - notifications
      summary: Try sending a notifications; to be deprecated
      operationId: tryNotificationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/notifications/try_webhook:
    post:
      tags:
        - notifications
      summary: Try sending a notifications to webhook
      operationId: tryNotificationWebhookConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationWebhookConfigValidationRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/source_definitions/update:
    post:
      tags:
        - source_definition
      summary: Update a sourceDefinition
      operationId: updateSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionUpdate'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definitions/list:
    post:
      tags:
        - source_definition
      summary: List all the sourceDefinitions the current Airbyte deployment is configured to use
      operationId: listSourceDefinitions
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
  /v1/source_definitions/list_latest:
    post:
      tags:
        - source_definition
      summary: List the latest sourceDefinitions Airbyte supports
      description: Guaranteed to retrieve the latest information on supported sources.
      operationId: listLatestSourceDefinitions
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
  /v1/source_definitions/get:
    post:
      tags:
        - source_definition
      summary: Get source
      operationId: getSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definitions/delete:
    post:
      tags:
        - source_definition
      summary: Delete a source definition
      operationId: deleteSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definitions/list_private:
    post:
      tags:
        - source_definition
      summary:
        List all private, non-custom sourceDefinitions, and for each indicate whether the given workspace has a grant for using the definition. Used
        by admins to view and modify a given workspace's grants.
      operationId: listPrivateSourceDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateSourceDefinitionReadList'
  /v1/source_definitions/list_for_workspace:
    post:
      tags:
        - source_definition
      summary: List all the sourceDefinitions the given workspace is configured to use
      operationId: listSourceDefinitionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
  /v1/source_definitions/create_custom:
    post:
      tags:
        - source_definition
      summary: Creates a custom sourceDefinition for the given workspace or organization
      operationId: createCustomSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomSourceDefinitionCreate'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definitions/get_for_workspace:
    post:
      tags:
        - source_definition
      summary: Get a sourceDefinition that is configured for the given workspace
      operationId: getSourceDefinitionForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definitions/get_for_scope:
    post:
      tags:
        - source_definition
      summary: Get a sourceDefinition that is configured for the given workspace or organization
      operationId: getSourceDefinitionForScope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorDefinitionIdWithScope'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definitions/grant_definition:
    post:
      tags:
        - source_definition
      summary: grant a private, non-custom sourceDefinition to a given workspace or organization
      operationId: grantSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorDefinitionIdWithScope'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateSourceDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definitions/revoke_definition:
    post:
      tags:
        - source_definition
      summary: revoke a grant to a private, non-custom sourceDefinition from a given workspace or organization
      operationId: revokeSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorDefinitionIdWithScope'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/actor_definition_versions/get_for_source:
    post:
      tags:
        - actor_definition_version
      summary: Get actor definition version for a source.
      operationId: getActorDefinitionVersionForSourceId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorDefinitionVersionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/source_definition_specifications/get:
    post:
      tags:
        - source_definition_specification
      summary: Get specification for a SourceDefinition.
      operationId: getSourceDefinitionSpecification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionSpecificationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_definition_specifications/get_for_source:
    post:
      tags:
        - source_definition_specification
      summary: Get specification for a source.
      operationId: getSpecificationForSourceId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionSpecificationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/actor_definition_versions/resolve:
    post:
      tags:
        - actor_definition_version
      summary: Resolve an actor definition version by version tag.
      operationId: resolveActorDefinitionVersionByTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveActorDefinitionVersionRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveActorDefinitionVersionResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/declarative_source_definitions/create_manifest:
    post:
      tags:
        - declarative_source_definitions
      summary: Create a declarative manifest to be used by the specified source definition
      operationId: createDeclarativeSourceDefinitionManifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclarativeSourceDefinitionCreateManifestRequestBody'
        required: true
      responses:
        '201':
          description: Successful operation
        '400':
          description: Definition is not declarative source
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          description: Version already exists for definition id
  /v1/declarative_source_definitions/update_active_manifest:
    post:
      tags:
        - declarative_source_definitions
      summary: Update the declarative manifest version for a source
      operationId: updateDeclarativeManifestVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActiveManifestRequestBody'
        required: true
      responses:
        '204':
          description: Successful operation
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/declarative_source_definitions/list_manifests:
    post:
      tags:
        - declarative_source_definitions
      summary: List all available declarative manifest versions of a declarative source definition
      operationId: listDeclarativeManifests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeclarativeManifestsRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarativeManifestsReadList'
        '400':
          description: Definition is not declarative source
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/connector_builder_projects/create:
    post:
      tags:
        - connector_builder_project
      summary: Create new connector builder project
      operationId: createConnectorBuilderProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorBuilderProjectWithWorkspaceId'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorBuilderProjectIdWithWorkspaceId'
  /v1/connector_builder_projects/publish:
    post:
      tags:
        - connector_builder_project
      summary: Publish a connector to the workspace
      operationId: publishConnectorBuilderProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorBuilderPublishRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionIdBody'
  /v1/connector_builder_projects/get_base_image:
    post:
      tags:
        - connector_builder_project
      summary: Get the base image for the declarative manifest
      operationId: getDeclarativeManifestBaseImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclarativeManifestRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarativeManifestBaseImageRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/connector_builder_projects/update:
    post:
      tags:
        - connector_builder_project
      summary: Update connector builder project
      operationId: updateConnectorBuilderProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExistingConnectorBuilderProjectWithWorkspaceId'
        required: true
      responses:
        '204':
          description: Successful operation
  /v1/connector_builder_projects/delete:
    post:
      tags:
        - connector_builder_project
      summary: Deletes connector builder project
      operationId: deleteConnectorBuilderProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorBuilderProjectIdWithWorkspaceId'
        required: true
      responses:
        '204':
          description: Successful operation
  /v1/connector_builder_projects/list:
    post:
      tags:
        - connector_builder_project
      summary: List connector builder projects for workspace
      operationId: listConnectorBuilderProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorBuilderProjectReadList'
  /v1/connector_builder_projects/get_with_manifest:
    post:
      tags:
        - connector_builder_project
      summary: Get a connector builder project with draft manifest
      operationId: getConnectorBuilderProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorBuilderProjectIdWithWorkspaceId'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorBuilderProjectRead'
  /v1/connector_builder_projects/update_testing_values:
    post:
      tags:
        - connector_builder_project
      summary: Submit a set of testing values to persist for a connector builder project
      operationId: updateConnectorBuilderProjectTestingValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorBuilderProjectTestingValuesUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorBuilderProjectTestingValues'
  /v1/connector_builder_projects/read_stream:
    post:
      tags:
        - connector_builder_project
      summary: Reads the target stream of the connector builder project using the persisted testing values
      operationId: readConnectorBuilderProjectStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorBuilderProjectStreamReadRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorBuilderProjectStreamRead'
  /v1/connector_documentation/get:
    post:
      tags:
        - connector_documentation
      summary: Get the documentation for a connector
      operationId: getConnectorDocumentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorDocumentationRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDocumentationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/create:
    post:
      tags:
        - source
      summary: Create a source
      operationId: createSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/update:
    post:
      tags:
        - source
      summary: Update a source
      operationId: updateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/partial_update:
    post:
      tags:
        - source
      summary: Partially update a source
      operationId: partialUpdateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialSourceUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/upgrade_version:
    post:
      tags:
        - source
      summary: Upgrade a source to the latest version
      operationId: upgradeSourceVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        '204':
          description: Successful operation
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/sources/list:
    post:
      tags:
        - source
      summary: List sources for workspace
      description: List sources for workspace. Does not return deleted sources.
      operationId: listSourcesForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/list_paginated:
    post:
      tags:
        - source
      summary: List sources for workspace
      description: List sources for workspace. Does not return deleted sources. Paginated.
      operationId: listSourcesForWorkspacePaginated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesForWorkspacesRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/get:
    post:
      tags:
        - source
      summary: Get source
      operationId: getSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/most_recent_source_actor_catalog:
    post:
      tags:
        - source
      summary: Get most recent ActorCatalog for source
      operationId: getMostRecentSourceActorCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorCatalogWithUpdatedAt'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/search:
    post:
      tags:
        - source
      summary: Search sources
      operationId: searchSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceSearch'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/clone:
    post:
      tags:
        - source
      summary: Clone source
      operationId: cloneSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCloneRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/delete:
    post:
      tags:
        - source
      summary: Delete a source
      operationId: deleteSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/check_connection:
    post:
      tags:
        - source
      summary: Check connection to the source
      operationId: checkConnectionToSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/check_connection_for_update:
    post:
      tags:
        - source
      summary: Check connection for a proposed update to a source
      operationId: checkConnectionToSourceForUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/discover_schema:
    post:
      tags:
        - source
      summary: Discover the schema catalog of the source
      operationId: discoverSchemaForSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDiscoverSchemaRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/apply_schema_changes:
    post:
      tags:
        - source
      summary:
        Auto propagate the change on a catalog to a catalog saved in the DB. It will fetch all the connections linked to
        a source id and apply the provided diff to their catalog.
      operationId: applySchemaChangeForSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceAutoPropagateChange'
        required: true
      responses:
        '204':
          description: The schema was properly auto propagate
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/sources/write_discover_catalog_result:
    post:
      tags:
        - source
        - internal
      summary: Should only called from worker, to write result from discover activity back to DB.
      operationId: writeDiscoverCatalogResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDiscoverSchemaWriteRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverCatalogResult'
  /v1/destination_definitions/update:
    post:
      tags:
        - destination_definition
      summary: Update destinationDefinition
      operationId: updateDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definitions/list:
    post:
      tags:
        - destination_definition
      summary: List all the destinationDefinitions the current Airbyte deployment is configured to use
      operationId: listDestinationDefinitions
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
  /v1/destination_definitions/list_latest:
    post:
      tags:
        - destination_definition
      summary: List the latest destinationDefinitions Airbyte supports
      description: Guaranteed to retrieve the latest information on supported destinations.
      operationId: listLatestDestinationDefinitions
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
  /v1/destination_definitions/get:
    post:
      tags:
        - destination_definition
      summary: Get destinationDefinition
      operationId: getDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definitions/delete:
    post:
      tags:
        - destination_definition
      summary: Delete a destination definition
      operationId: deleteDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definitions/list_private:
    post:
      tags:
        - destination_definition
      summary:
        List all private, non-custom destinationDefinitions, and for each indicate whether the given workspace has a grant for using the
        definition. Used by admins to view and modify a given workspace's grants.
      operationId: listPrivateDestinationDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDestinationDefinitionReadList'
  /v1/destination_definitions/list_for_workspace:
    post:
      tags:
        - destination_definition
      summary: List all the destinationDefinitions the given workspace is configured to use
      operationId: listDestinationDefinitionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
  /v1/destination_definitions/create_custom:
    post:
      tags:
        - destination_definition
      summary: Creates a custom destinationDefinition for the given workspace
      operationId: createCustomDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDestinationDefinitionCreate'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definitions/get_for_workspace:
    post:
      tags:
        - destination_definition
      summary: Get a destinationDefinition that is configured for the given workspace
      operationId: getDestinationDefinitionForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definitions/get_for_scope:
    post:
      tags:
        - destination_definition
      summary: Get a destinationDefinition that is configured for the given scope
      operationId: getDestinationDefinitionForScope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorDefinitionIdWithScope'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definitions/grant_definition:
    post:
      tags:
        - destination_definition
      summary: grant a private, non-custom destinationDefinition to a given workspace or organization
      operationId: grantDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorDefinitionIdWithScope'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDestinationDefinitionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definitions/revoke_definition:
    post:
      tags:
        - destination_definition
      summary: revoke a grant to a private, non-custom destinationDefinition from a given workspace or organization
      operationId: revokeDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorDefinitionIdWithScope'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/actor_definition_versions/get_for_destination:
    post:
      tags:
        - actor_definition_version
      summary: Get actor definition version for a destination.
      operationId: getActorDefinitionVersionForDestinationId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorDefinitionVersionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/destination_definition_specifications/get:
    post:
      tags:
        - destination_definition_specification
      summary: Get specification for a destinationDefinition
      operationId: getDestinationDefinitionSpecification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionSpecificationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_definition_specifications/get_for_destination:
    post:
      tags:
        - destination_definition_specification
      summary: Get specification for a destination
      operationId: getSpecificationForDestinationId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionSpecificationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  # DESTINATIONS
  /v1/destinations/create:
    post:
      tags:
        - destination
      summary: Create a destination
      operationId: createDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/update:
    post:
      tags:
        - destination
      summary: Update a destination
      operationId: updateDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/partial_update:
    post:
      tags:
        - destination
      summary: Update a destination partially
      operationId: partialUpdateDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialDestinationUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/upgrade_version:
    post:
      tags:
        - destination
      summary: Upgrade a destination to the latest version
      operationId: upgradeDestinationVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        '204':
          description: Successful operation
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/destinations/list:
    post:
      tags:
        - destination
      summary: List configured destinations for a workspace
      operationId: listDestinationsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/list_paginated:
    post:
      tags:
        - destination
      summary: List configured destinations for a workspace. Pginated
      operationId: listDestinationsForWorkspacesPaginated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesForWorkspacesRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/get:
    post:
      tags:
        - destination
      summary: Get configured destination
      operationId: getDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/search:
    post:
      tags:
        - destination
      summary: Search destinations
      operationId: searchDestinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationSearch'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/check_connection:
    post:
      tags:
        - destination
      summary: Check connection to the destination
      operationId: checkConnectionToDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/check_connection_for_update:
    post:
      tags:
        - destination
      summary: Check connection for a proposed update to a destination
      operationId: checkConnectionToDestinationForUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/delete:
    post:
      tags:
        - destination
      summary: Delete the destination
      operationId: deleteDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destinations/clone:
    post:
      tags:
        - destination
      summary: Clone destination
      operationId: cloneDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCloneRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/create:
    post:
      tags:
        - connection
      summary: Create a connection between a source and a destination
      operationId: createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/update:
    post:
      tags:
        - connection
      summary: Update a connection
      description: |
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Note that if a catalog is present in the request body, the connection's entire catalog will be replaced
        with the catalog from the request. This means that to modify a single stream, the entire new catalog
        containing the updated stream needs to be sent.
      operationId: updateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/list:
    post:
      tags:
        - connection
      summary: Returns all connections for a workspace.
      description: List connections for workspace. Does not return deleted connections.
      operationId: listConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/list_paginated:
    post:
      tags:
        - connection
      summary: Returns all connections for a workspace. Paginated.
      description: List connections for workspace. Does not return deleted connections. Paginated.
      operationId: listConnectionsForWorkspacesPaginated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConnectionsForWorkspacesRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/list_all:
    post:
      tags:
        - connection
      summary: Returns all connections for a workspace, including deleted connections.
      description: List connections for workspace, including deleted connections.
      operationId: listAllConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/status:
    post:
      tags:
        - connection
      summary: Get the status of multiple connections
      operationId: getConnectionStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStatusesRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStatusesRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/sync_progress:
    post:
      tags:
        - connection
      summary: Get progress information of the current sync of a connection
      operationId: getConnectionSyncProgress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSyncProgressRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/history/uptime:
    post:
      tags:
        - connection
      summary: Get the uptime history of a connection
      operationId: getConnectionUptimeHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionUptimeHistoryRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionUptimeHistoryRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/history/data:
    post:
      tags:
        - connection
      summary: Get the data history of a connection
      operationId: getConnectionDataHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDataHistoryRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionUptimeHistoryRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/stream_history:
    post:
      tags:
        - connection
      summary: Get the history of a connection
      operationId: getConnectionStreamHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStreamHistoryRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStreamHistoryRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/events/get:
    post:
      tags:
        - connection
      summary: Get a single event (including details) in a connection by given event ID
      operationId: getConnectionEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEventIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEventWithDetails'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/events/list:
    post:
      tags:
        - connection
      summary: List most recent events in a connection (optional filters may apply)
      operationId: listConnectionEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEventsRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEventList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/last_job_per_stream:
    post:
      tags:
        - connection
      summary: Get a summary of the last completed job for each indicated stream in the connection.
      operationId: getConnectionLastJobPerStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionLastJobPerStreamRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionLastJobPerStreamRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/get:
    post:
      tags:
        - connection
      summary: Get a connection
      operationId: getConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/getForJob:
    post:
      tags:
        - connection
      summary: Get a connection for a given jobId
      operationId: getConnectionForJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAndJobIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/list_by_actor_definition:
    post:
      tags:
        - connection
      summary: List all connections that use the provided actor definition
      operationId: listConnectionsByActorDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorDefinitionRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/apply_schema_changes:
    post:
      tags:
        - connection
      summary: Auto propagate the change on a catalog to a catalog saved in the DB for the given connection.
      operationId: applySchemaChangeForConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAutoPropagateSchemaChange'
        required: true
      responses:
        '204':
          description: The schema was properly auto propagated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionAutoPropagateResult'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/postprocess_discovered_catalog:
    post:
      tags:
        - connection
      summary: Generate the diff between stored catalog for the connection and catalog provided and postprocess as necessary
      operationId: postprocessDiscoveredCatalogForConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostprocessDiscoveredCatalogRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostprocessDiscoveredCatalogResult'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/state/get:
    post:
      tags:
        - state
      summary: Fetch the current state for a connection.
      operationId: getState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/state/create_or_update:
    post:
      tags:
        - state
        - internal
      summary: Create or update the state for a connection.
      operationId: createOrUpdateState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStateCreateOrUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/state/create_or_update_safe:
    post:
      tags:
        - state
      summary: Create or update the state for a connection. Throws error if a sync is currently running when this is called.
      operationId: createOrUpdateStateSafe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStateCreateOrUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
        '423':
          $ref: '#/components/responses/ExceptionResponse'
  /v1/connections/search:
    post:
      tags:
        - connection
      summary: Search connections
      operationId: searchConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSearch'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/delete:
    post:
      tags:
        - connection
      summary: Delete a connection
      operationId: deleteConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/sync:
    post:
      tags:
        - connection
      summary: Trigger a manual sync of the connection
      operationId: syncConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/reset:
    post:
      tags:
        - connection
      summary: Reset the data for the connection. Deletes data generated by the connection in the destination. Resets any cursors back to initial state.
      operationId: resetConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/clear:
    post:
      tags:
        - connection
      summary: Clear the data for the connection. Deletes data generated by the connection in the destination. Clear any cursors back to initial state.
      operationId: clearConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/auto_disable:
    post:
      tags:
        - connection
        - internal
      summary: >
        Sets connection to inactive if it has met any of the auto-disable conditions (i.e. it hits the max number of consecutive job failures
        or if it hits the max number of days with only failed jobs). Additionally, notifications will be sent if a connection is disabled or
        warned if it has reached halfway to disable limits. This endpoint is only able to inactivate connections with more than one non-cancelled job.
      operationId: autoDisableConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/connections/clear/stream:
    post:
      tags:
        - connection
      summary: Clear the data for a specific stream in the connection. Deletes data generated by the stream in the destination. Clear any cursors back to initial state.
      operationId: clearConnectionStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStreamRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/reset/stream:
    post:
      tags:
        - connection
      summary: Reset the data for a specific stream in the connection. Deletes data generated by the stream in the destination. Resets any cursors back to initial state.
      operationId: resetConnectionStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStreamRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/refresh:
    post:
      tags:
        - connection
      summary: refresh the data for specific streams in the connection. If no stream is specify or the list of stream is empy, all the streams will be refreshed. Resets any cursors back to initial state.
      operationId: refreshConnectionStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStreamRefreshRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/connections/get_task_queue_name:
    post:
      tags:
        - connection
        - internal
      summary: Gets the string task queue name for a connection and job type.
      operationId: getTaskQueueName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - connectionId
                - temporalJobType
              properties:
                connectionId:
                  $ref: '#/components/schemas/ConnectionId'
                temporalJobType:
                  description: Raw stringified name of the TemporalJobType.
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueueNameRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/operations/check:
    post:
      tags:
        - operation
      summary: Check if an operation to be created is valid
      operationId: checkOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorConfiguration'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckOperationRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/operations/create:
    post:
      tags:
        - operation
      summary: Create an operation to be applied as part of a connection pipeline
      operationId: createOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/operations/update:
    post:
      tags:
        - operation
      summary: Update an operation
      operationId: updateOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/operations/list:
    post:
      tags:
        - operation
      summary: Returns all operations for a connection.
      description: List operations for connection.
      operationId: listOperationsForConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/operations/get:
    post:
      tags:
        - operation
      summary: Returns an operation
      operationId: getOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/operations/delete:
    post:
      tags:
        - operation
      summary: Delete an operation
      operationId: deleteOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/scheduler/sources/check_connection:
    post:
      tags:
        - scheduler
      summary: Run check connection for a given source configuration
      operationId: executeSourceCheckConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/scheduler/sources/discover_schema:
    post:
      tags:
        - scheduler
      summary: Run discover schema for a given source a source configuration
      operationId: executeSourceDiscoverSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/scheduler/destinations/check_connection:
    post:
      tags:
        - scheduler
      summary: Run check connection for a given destination configuration
      operationId: executeDestinationCheckConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCoreConfig'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_oauths/oauth_params/create:
    post:
      tags:
        - source_oauth
      summary: >
        Sets instancewide variables to be used for the oauth flow when creating this source. When set, these variables will be injected
        into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with
        consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know
        about these variables.
      operationId: setInstancewideSourceOauthParams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideSourceOauthParamsRequestBody'
        required: true
      responses:
        '200':
          description: Successful
        '400':
          $ref: '#/components/responses/ExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/source_oauths/get_consent_url:
    post:
      tags:
        - source_oauth
      summary: Given a source connector definition ID, return the URL to the consent screen where to redirect the user to.
      operationId: getSourceOAuthConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceOauthConsentRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_oauths/complete_oauth:
    post:
      tags:
        - source_oauth
      summary: Given a source def ID generate an access/refresh token etc.
      operationId: completeSourceOAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteSourceOauthRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/source_oauths/revoke:
    post:
      tags:
        - source_oauth
      summary: Given a source definition ID and workspace ID revoke access/refresh token etc.
      operationId: revokeSourceOAuthTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSourceOauthTokensRequest'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/ExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/destination_oauths/get_consent_url:
    post:
      tags:
        - destination_oauth
      summary: Given a destination connector definition ID, return the URL to the consent screen where to redirect the user to.
      operationId: getDestinationOAuthConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationOauthConsentRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_oauths/complete_oauth:
    post:
      tags:
        - destination_oauth
      summary: Given a destination def ID generate an access/refresh token etc.
      operationId: completeDestinationOAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteDestinationOAuthRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/destination_oauths/oauth_params/create:
    post:
      tags:
        - destination_oauth
      summary: >
        Sets instancewide variables to be used for the oauth flow when creating this destination. When set, these variables will be injected
        into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with
        consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know
        about these variables.
      operationId: setInstancewideDestinationOauthParams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideDestinationOauthParamsRequestBody'
        required: true
      responses:
        '200':
          description: Successful
        '400':
          $ref: '#/components/responses/ExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/web_backend/check_updates:
    post:
      tags:
        - web_backend
      summary: Returns a summary of source and destination definitions that could be updated.
      operationId: webBackendCheckUpdates
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendCheckUpdatesRead'
  /v1/web_backend/connections/list:
    post:
      tags:
        - web_backend
      summary: Returns all non-deleted connections for a workspace.
      operationId: webBackendListConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionListRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/web_backend/connections/get:
    post:
      tags:
        - web_backend
      summary: Get a connection
      operationId: webBackendGetConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/web_backend/connections/create:
    post:
      tags:
        - web_backend
      summary: Create a connection
      operationId: webBackendCreateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/web_backend/connections/update:
    post:
      tags:
        - web_backend
      summary: Update a connection
      description: |
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Any operations that lack an ID will be created. Then, the newly created operationId will be applied to the
        connection along with the rest of the operationIds in the request body.
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Note that if a catalog is present in the request body, the connection's entire catalog will be replaced
        with the catalog from the request. This means that to modify a single stream, the entire new catalog
        containing the updated stream needs to be sent.
      operationId: webBackendUpdateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/web_backend/state/get_type:
    post:
      tags:
        - web_backend
      summary: Fetch the current state type for a connection.
      operationId: getStateType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStateType'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/web_backend/workspace/state:
    post:
      tags:
        - web_backend
      summary: Returns the current state of a workspace
      operationId: webBackendGetWorkspaceState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendWorkspaceState'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendWorkspaceStateResult'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/web_backend/geographies/list:
    post:
      tags:
        - web_backend
      description: Returns all available geographies in which a data sync can run.
      summary: |
        Returns available geographies can be selected to run data syncs in a particular geography.
        The 'auto' entry indicates that the sync will be automatically assigned to a geography according
        to the platform default behavior. Entries other than 'auto' are two-letter country codes that
        follow the ISO 3166-1 alpha-2 standard.
      operationId: webBackendListGeographies
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendGeographiesListResult'
  /v1/jobs/create:
    post:
      tags:
        - jobs
        - internal
      summary:
        Creates a new job for a given connection. If a job is already running for the connection, it will be
        stopped and a new job will be created.
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/job_success_with_attempt_number:
    post:
      tags:
        - jobs
        - attempt
        - internal
      summary: For worker to mark an attempt as successful.
      operationId: jobSuccessWithAttemptNumber
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
                - attemptNumber
                - connectionId
                - standardSyncOutput
              properties:
                jobId:
                  $ref: '#/components/schemas/JobId'
                attemptNumber:
                  $ref: '#/components/schemas/AttemptNumber'
                connectionId:
                  $ref: '#/components/schemas/ConnectionId'
                standardSyncOutput:
                  type: object
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
  /v1/jobs/list:
    post:
      tags:
        - jobs
      summary: Returns recent jobs for a connection. Jobs are returned in descending order by createdAt.
      operationId: listJobsFor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobListRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/list_for_workspaces:
    post:
      tags:
        - jobs
      summary: Returns recent jobs for a connection. Jobs are returned in descending order by createdAt.
      operationId: listJobsForWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobListForWorkspacesRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/get:
    post:
      tags:
        - jobs
      summary: Get information about a job
      operationId: getJobInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/get_last_replication_job:
    post:
      tags:
        - jobs
      operationId: getLastReplicationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOptionalRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/get_without_logs:
    post:
      tags:
        - jobs
      summary: Get information about a job excluding logs
      operationId: getJobInfoWithoutLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/get_light:
    post:
      tags:
        - jobs
      summary: Get information about a job excluding attempt info and logs
      operationId: getJobInfoLight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoLightRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/cancel:
    post:
      tags:
        - jobs
      summary: Cancels a job
      operationId: cancelJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/get_debug_info:
    post:
      tags:
        - jobs
      summary: Gets all information needed to debug this job
      operationId: getJobDebugInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDebugInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/jobs/get_input:
    post:
      tags:
        - jobs
        - internal
      summary: Get the job input in order to be able to start a synchronization.
      operationId: getJobInput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncInput'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJobInputRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/jobs/get_check_input:
    post:
      tags:
        - jobs
        - internal
      summary: Get the check job input
      operationId: getCheckInput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckInput'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJobInputRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/jobs/fail_non_terminal:
    post:
      tags:
        - jobs
        - internal
      summary: Fails all non-terminal jobs for a connection
      operationId: failNonTerminalJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        '204':
          description: Successful operation
  /v1/jobs/reportJobStart:
    post:
      tags:
        - jobs
        - internal
      summary: For worker to report when a job starts.
      operationId: reportJobStart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
                - connectionId
              properties:
                jobId:
                  $ref: '#/components/schemas/JobId'
                connectionId:
                  $ref: '#/components/schemas/ConnectionId'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
  /v1/jobs/job_failure:
    post:
      tags:
        - jobs
        - internal
      summary: Marks a job as failed
      operationId: jobFailure
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
                - attemptNumber
                - connectionId
                - reason
              properties:
                jobId:
                  $ref: '#/components/schemas/JobId'
                attemptNumber:
                  $ref: '#/components/schemas/AttemptNumber'
                connectionId:
                  $ref: '#/components/schemas/ConnectionId'
                reason:
                  type: string
                  description: Reason of the failure
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
  /v1/jobs/delete_stream_reset_records:
    post:
      tags:
        - jobs
        - internal
      summary: Deletes all stream reset records for the specified job
      operationId: deleteStreamResetRecordsForJob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - connectionId
                - jobId
              properties:
                connectionId:
                  $ref: '#/components/schemas/ConnectionId'
                jobId:
                  $ref: '#/components/schemas/JobId'
        required: true
      responses:
        '204':
          description: Successfully delete stream reset records for job

  # USERS
  /v1/users/get:
    post:
      tags:
        - user
      summary: Find Airbyte user by internal user ID
      operationId: getUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/users/get_by_auth_id:
    post:
      tags:
        - user
      summary: Find Airbyte user by auth id
      operationId: getUserByAuthId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/users/get_by_email:
    post:
      tags:
        - user
      summary: Find Airbyte user by email
      operationId: getUserByEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/users/get_or_create_by_auth_id:
    post:
      tags:
        - user
      summary: Find Airbyte user by auth id. If not existed, will create a user.
      operationId: getOrCreateUserByAuthId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetOrCreateByAuthIdResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/users/update:
    post:
      tags:
        - user
      summary: Update user state
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/users/delete:
    post:
      tags:
        - user
      summary: Deletes a user
      operationId: deleteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/users/list_by_workspace_id:
    post:
      tags:
        - user
      summary: List all users in a workspace
      operationId: listUsersInWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUserReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/users/list_access_info_by_workspace_id:
    post:
      tags:
        - user
      summary: List user access info for a particular workspace.
      operationId: listAccessInfoByWorkspaceId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUserAccessInfoReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/users/list_by_organization_id:
    post:
      summary: List all users with permissions of the given org
      tags:
        - user
      operationId: listUsersInOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIdRequestBody'
      responses:
        '200':
          description: Successfully retrieved users under the given org id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

  /v1/users/list_instance_admin:
    post:
      summary: List all users with instance admin permissions. Only instance admin has permission to call this.
      tags:
        - user
      operationId: listInstanceAdminUsers
      responses:
        '200':
          description: List all instance admin users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithPermissionInfoReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

  # PERMISSIONS
  /v1/permissions/create:
    post:
      tags:
        - permission
      summary: Creates a permission resource
      operationId: createPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionRead'
        '422':
          $ref: '#/components/responses/ExceptionResponse'
  /v1/permissions/get:
    post:
      tags:
        - permission
      summary: Find a permission by ID
      operationId: getPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/permissions/check:
    post:
      tags:
        - permission
      summary: Check permissions for user
      operationId: checkPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionCheckRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionCheckRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/permissions/check_multiple_workspaces:
    post:
      tags:
        - permission
      summary: Check permissions for user across workspaces
      operationId: checkPermissionsAcrossMultipleWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsCheckMultipleWorkspacesRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionCheckRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/permissions/update:
    post:
      tags:
        - permission
      summary: Updates a permission resource
      operationId: updatePermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionUpdate'
        required: true
      responses:
        '204':
          description: Successful operation
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/secrets_persistence_config/get:
    post:
      tags:
        - secrets_persistence_config
      summary: Get secrets persistence config
      operationId: getSecretsPersistenceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretPersistenceConfigGetRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretPersistenceConfig'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/secrets_persistence_config/create_or_update:
    post:
      tags:
        - secrets_persistence_config
      summary: Create or update secrets persistence config
      operationId: createOrUpdateSecretsPersistenceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateSecretsPersistenceConfigRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/permissions/delete:
    post:
      tags:
        - permission
      summary: Deletes a permission resource
      operationId: deletePermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionIdRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/permissions/delete_user_from_workspace:
    post:
      tags:
        - permission
      summary: Deletes all workspace-level permissions for a particular user and workspace
      operationId: deleteUserFromWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionDeleteUserFromWorkspaceRequestBody'
        required: true
      responses:
        '204':
          description: The resource was deleted successfully.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
  /v1/permissions/list_by_user:
    post:
      tags:
        - permission
      summary: List permissions a user has access to
      operationId: listPermissionsByUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionReadList'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

  /v1/health:
    get:
      tags:
        - health
      summary: Health Check
      operationId: getHealthCheck
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckRead'
      # This route is unsecured for external monitoring.
      security: []
  /v1/openapi:
    get:
      tags:
        - openapi
      summary: Returns the openapi specification
      operationId: getOpenApiSpec
      responses:
        '200':
          description: Returns the openapi specification file
          content:
            text/plain:
              schema:
                type: string
                format: binary
  /v1/attempt/create_new_attempt_number:
    post:
      tags:
        - attempt
        - internal
      summary: For worker to create a new attempt number.
      operationId: createNewAttemptNumber
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
              properties:
                jobId:
                  $ref: '#/components/schemas/JobId'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                title: CreateNewAttemptNumberResponse
                type: object
                required:
                  - attemptNumber
                properties:
                  attemptNumber:
                    $ref: '#/components/schemas/AttemptNumber'
  /v1/attempt/set_workflow_in_attempt:
    post:
      tags:
        - attempt
        - internal
      summary: For worker to register the workflow id in attempt.
      operationId: setWorkflowInAttempt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWorkflowInAttemptRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
  /v1/attempt/save_stream_metadata:
    post:
      tags:
        - attempt
        - internal
      summary: Save stream level attempt information
      operationId: saveStreamMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveStreamAttemptMetadataRequestBody'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
  /v1/attempt/save_stats:
    post:
      tags:
        - attempt
        - internal
      summary: For worker to set sync stats of a running attempt.
      operationId: saveStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveStatsRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
  /v1/attempt/save_sync_config:
    post:
      tags:
        - attempt
        - internal
      summary: For worker to save the AttemptSyncConfig for an attempt.
      operationId: saveSyncConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAttemptSyncConfigRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
  /v1/attempt/fail:
    post:
      tags:
        - attempt
        - internal
      summary: Fails an attempt with a failure summary and if provided a sync output.
      operationId: failAttempt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
                - attemptNumber
              properties:
                jobId:
                  $ref: '#/components/schemas/JobId'
                attemptNumber:
                  $ref: '#/components/schemas/AttemptNumber'
                failureSummary:
                  description: Attempt failure summary serialized as a raw object
                  type: object
                standardSyncOutput:
                  description: Sync output serialized as a raw object
                  type: object
        required: true
      responses:
        '204':
          description: Successfully failed attempt
  /v1/attempt/get_combined_stats:
    post:
      tags:
        - attempt
        - internal
      summary: For retrieving combined stats for a single attempt
      operationId: getAttemptCombinedStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAttemptStatsRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptStats'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/attempt/get_for_job:
    post:
      tags:
        - attempt
        - internal
      summary: Retrieves an attempt with logs for a job and attempt number.
      operationId: getAttemptForJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAttemptStatsRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptInfoRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/stream_statuses/list:
    post:
      summary: Gets a list of stream statuses filtered by parameters (with AND semantics).
      tags:
        - stream_statuses
        - streams
      operationId: getStreamStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamStatusListRequestBody'
      responses:
        '200':
          description: Successfully queried stream statuses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamStatusReadList'
  /v1/stream_statuses/latest_per_run_state:
    post:
      summary: Gets a list of the latest stream status for each stream and run state for a connection.
      tags:
        - stream_statuses
        - streams
      operationId: getStreamStatusesByRunState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
      responses:
        '200':
          description: Successfully queried stream statuses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamStatusReadList'
  /v1/stream_statuses/create:
    post:
      summary: Creates a stream status.
      tags:
        - stream_statuses
        - streams
      operationId: createStreamStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamStatusCreateRequestBody'
      responses:
        '201':
          description: Successfully created stream status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamStatusRead'
  /v1/stream_statuses/update:
    post:
      summary: Updates a stream status.
      tags:
        - stream_statuses
        - streams
      operationId: updateStreamStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamStatusUpdateRequestBody'
      responses:
        '201':
          description: Successfully created stream status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamStatusRead'
        '200':
          description: Successfully updated stream status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamStatusRead'
  # Instance Configuration
  /v1/instance_configuration:
    get:
      tags:
        - instance_configuration
      summary: Get instance configuration
      operationId: getInstanceConfiguration
      responses:
        '200':
          description: Successfully returned instance configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceConfigurationResponse'
        '401':
          description: Fetching instance configuration failed.
  /v1/instance_configuration/setup:
    post:
      summary: Setup an instance with user and organization information.
      tags:
        - instance_configuration
      operationId: setupInstanceConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceConfigurationSetupRequestBody'
      responses:
        '200':
          description: Successfully setup instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceConfigurationResponse'
        '401':
          description: Instance setup failed.

  /v1/jobs/retry_states/create_or_update:
    post:
      summary: Creates or updates a retry state for a job.
      tags:
        - job_retry_states
      operationId: createOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRetryStateRequestBody'
      responses:
        '204':
          description: Successfully put retry state.
  /v1/jobs/retry_states/get:
    post:
      summary: Gets a retry state.
      tags:
        - job_retry_states
      operationId: get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
      responses:
        '200':
          description: Successfully retrieved retry state for a job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryStateRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/jobs/did_previous_job_succeed:
    post:
      tags:
        - jobs
        - internal
      summary: Returns whether the job preceding the specified job succeeded
      operationId: didPreviousJobSucceed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionJobRequestBody'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanRead'
  /v1/jobs/persist_cancellation:
    post:
      summary: Persists the cancellation of a job and kicks off any post processing (e.g notifications).
      tags:
        - jobs
        - internal
      operationId: persistJobCancellation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersistCancelJobRequestBody'
      responses:
        '204':
          description: Successfully persisted the job cancellation.
  /v1/organizations/get:
    post:
      summary: Get an organization info
      tags:
        - organization
      operationId: getOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIdRequestBody'
      responses:
        '200':
          description: Successfully retrieved organization info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/organizations/create:
    post:
      summary: Create an organization
      tags:
        - organization
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequestBody'
      responses:
        '201':
          description: Successfully created organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
  /v1/organizations/update:
    post:
      summary: Update an organization info
      tags:
        - organization
      operationId: updateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateRequestBody'
      responses:
        '200':
          description: Successfully updated organization info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/organizations/delete:
    post:
      summary: Delete an organization
      tags:
        - organization
      operationId: deleteOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIdRequestBody'
      responses:
        '204':
          description: Successfully deleted organization.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/organizations/list_by_user_id:
    post:
      summary: List organizations by a given user id. The function also supports searching by keyword and pagination.
      tags:
        - organization
      operationId: listOrganizationsByUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrganizationsByUserRequestBody'
      responses:
        '200':
          description: Successfully retrieved organizations by given user id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/deployment/metadata:
    post:
      summary: Provides the Airbyte deployment metadata.
      tags:
        - deployment_metadata
      operationId: getDeploymentMetadata
      responses:
        '200':
          description: The Airbyte deployment metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentMetadataRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/applications/list:
    post:
      tags:
        - applications
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationReadList'
          description: Successful operation
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: listApplications
      summary: Returns all Applications for a User.
      description: List Applications for a User.
  /v1/applications/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationIdRequestBody'
        required: true
      tags:
        - applications
      responses:
        '200':
          description: Successful operation
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: deleteApplication
      summary: Deletes an Application.
      description: Deletes an Application.
  /v1/applications/create:
    post:
      tags:
        - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRead'
          description: Successful operation
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: createApplication
      summary: Creates a new Application.
      description: Creates a new Application.
  /v1/applications/token:
    post:
      tags:
        - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Successful operation
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: applicationTokenRequest
      summary: Grant an Access Token for an Application.
      description: Takes the client_id and client_secret for an application and returns an Access Token.
  # Scoped Configuration
  /v1/scoped_configuration/list:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationListRequestBody'

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationListResponse'
          description: An array of scoped configurations
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

      operationId: getScopedConfigurationsList
      summary: Get all scoped configurations with a given key
      tags:
        - scoped_configuration

  /v1/scoped_configuration/get_context:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationContextRequestBody'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationContextResponse'
          description: An array of scoped configurations
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

      operationId: getScopedConfigurationContext
      summary: Get related configurations for a given scope
      tags:
        - scoped_configuration

  /v1/scoped_configuration/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationCreateRequestBody'
      responses:
        '200':
          description: Newly created scoped configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationCreateResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: createScopedConfiguration
      summary: Create a new scoped configuration
      tags:
        - scoped_configuration

  /v1/scoped_configuration/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationReadRequestBody'

      responses:
        '200':
          description: A Scoped configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationReadResponse'

        '422':
          $ref: '#/components/responses/InvalidInputResponse'

      summary: Get a scoped configuration by ID
      operationId: getScopedConfigurationById
      tags:
        - scoped_configuration

  /v1/scoped_configuration/update:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationUpdateRequestBody'
      responses:
        '200':
          description: Updated scoped configuration object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationUpdateResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      summary: Update a scoped configuration by ID
      operationId: updateScopedConfiguration
      tags:
        - scoped_configuration

  /v1/scoped_configuration/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationDeleteRequestBody'
      responses:
        '200':
          description: Deleted scoped configuration object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationDeleteResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'

      summary: Delete a scoped configuration by ID
      operationId: deleteScopedConfiguration
      tags:
        - scoped_configuration

  # User Invitations
  /v1/user_invitations/create:
    post:
      summary: Create a user invitation
      tags:
        - user_invitation
      operationId: createUserInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitationCreateRequestBody'
      responses:
        '201':
          description: Successfully processed user invitation create request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationCreateResponse'

  /v1/user_invitations/by_code/{inviteCode}:
    get:
      summary: Get a user invitation by its unique code (not primary key ID)
      tags:
        - user_invitation
      operationId: getUserInvitation
      parameters:
        - name: inviteCode
          in: path
          description: The invite code of the user invitation to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved user invitation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

  /v1/user_invitations/list_pending:
    post:
      summary: List pending invitations
      tags:
        - user_invitation
      operationId: listPendingInvitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitationListRequestBody'
      responses:
        '200':
          description: A list of pending user invitations, or an empty list if no invitations are found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInvitationRead'

  /v1/user_invitations/accept:
    post:
      summary: Accept a user invitation
      tags:
        - user_invitation
      operationId: acceptUserInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteCodeRequestBody'
      responses:
        '201':
          description: Successfully accepted user invitation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationRead'

  /v1/user_invitations/decline:
    post:
      summary: Decline a user invitation
      tags:
        - user_invitation
      operationId: declineUserInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteCodeRequestBody'
      responses:
        '201':
          description: Successfully declined user invitation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationRead'

  /v1/user_invitations/cancel:
    post:
      summary: Cancel a user invitation
      tags:
        - user_invitation
      operationId: cancelUserInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteCodeRequestBody'
      responses:
        '201':
          description: Successfully cancelled user invitation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationRead'

  # Airbyte API
  /public:
    get:
      tags:
        - public_root
        - public
      responses:
        '200':
          content:
            text/html: {}
          description: Redirects to documentation
      operationId: getDocumentation
      x-sdk-alias: getDocumentation
      summary: 'Root path, currently returns a redirect to the documentation'
      # This redirect route is unsecured since it points to our documentation.
      security: []
  /public/v1/health:
    get:
      tags:
        - public_health
        - public
      responses:
        '200':
          description: Successful operation
      operationId: publicGetHealthCheck
      summary: Health Check
      # This route is unsecured for external monitoring.
      security: []
      x-sdk-alias: getHealthCheck
      x-sdk-group: Health
  /public/v1/applications:
    get:
      tags:
        - public_applications
        - public
        - Applications
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationReadList'
              examples:
                Application List Response Example:
                  value:
                    applications:
                      [
                        {
                          id: 780d5bd9-a8a0-43cf-8b35-cc2061ad8319,
                          name: test application,
                          clientId: b6b159ce-07f4-4699-94b3-3e85b318852e,
                          clientSecret: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gU2VkIGNvbmRpbWVudHVtIG5lYyBsaWJlcm8gc2VkIGxvYm9ydGlzLg==,
                          createdAt: 2024-06-09T21:50:30Z
                        }
                      ]
          description: List all Applications a User has permission to view.
        '403':
          description: Not allowed
      operationId: publicListApplications
      summary: List Applications
      x-sdk-alias: listApplications
      x-sdk-group: Applications
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
            examples:
              Application Creation Request Example:
                value:
                  name: test application
        required: true
      tags:
        - public_applications
        - public
        - Applications
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRead'
              examples:
                Application Creation Response Example:
                  value:
                    id: 780d5bd9-a8a0-43cf-8b35-cc2061ad8319
                    name: test application
                    clientId: b6b159ce-07f4-4699-94b3-3e85b318852e
                    clientSecret: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gU2VkIGNvbmRpbWVudHVtIG5lYyBsaWJlcm8gc2VkIGxvYm9ydGlzLg==
                    createdAt: 2024-06-09T21:50:30Z
          description: 'Creates a new Application.'
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicCreateApplication
      summary: Create an Application
      x-sdk-alias: createApplication
      x-sdk-group: Applications
  /public/v1/applications/{applicationId}:
    get:
      tags:
        - public_applications
        - public
        - Applications
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRead'
              examples:
                Application Get Response Example:
                  value:
                    id: 780d5bd9-a8a0-43cf-8b35-cc2061ad8319
                    name: test application
                    clientId: b6b159ce-07f4-4699-94b3-3e85b318852e
                    clientSecret: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gU2VkIGNvbmRpbWVudHVtIG5lYyBsaWJlcm8gc2VkIGxvYm9ydGlzLg==
                    createdAt: 2024-06-09T21:50:30Z
          description: Get an Application by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicGetApplication
      x-sdk-alias: getApplication
      x-sdk-group: Applications
      summary: Get an Application detail
    delete:
      tags:
        - public_applications
        - public
        - Applications
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRead'
              examples:
                Application Delete Response Example:
                  value:
                    id: 780d5bd9-a8a0-43cf-8b35-cc2061ad8319
                    name: test application
                    clientId: b6b159ce-07f4-4699-94b3-3e85b318852e
                    clientSecret: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gU2VkIGNvbmRpbWVudHVtIG5lYyBsaWJlcm8gc2VkIGxvYm9ydGlzLg==
                    createdAt: 2024-06-09T21:50:30Z
          description: Delete an Application.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicDeleteApplication
      x-sdk-alias: deleteApplication
      x-sdk-group: Applications
      summary: Deletes an Application
    parameters:
      - name: applicationId
        schema:
          type: string
        in: path
        required: true
  /public/v1/applications/token:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTokenRequestWithGrant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationTokenRequestWithGrant'
            examples:
              Application Token Request Example:
                value:
                  clientId: 0da998a2-0d7b-49c7-bb6e-9f7eb9cc68a0
                  clientSecret: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gU2VkIGNvbmRpbWVudHVtIG5lYyBsaWJlcm8gc2VkIGxvYm9ydGlzLg==
        required: true
      tags:
        - public_applications
        - public
        - Applications
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAccessTokenResponse'
              examples:
                Application Creation Response Example:
                  value:
                    access_token: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gU2VkIGNvbmRpbWVudHVtIG5lYyBsaWJlcm8gc2VkIGxvYm9ydGlzLg==
          description: 'Creates an Access Token.'
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicGetAccessToken
      summary: Get an Access Token
      x-sdk-alias: createAccessToken
      x-sdk-group: Applications
      security: []
  /public/v1/jobs:
    get:
      tags:
        - public_jobs
        - public
        - Jobs
      parameters:
        - name: connectionId
          description: Filter the Jobs by connectionId.
          schema:
            format: UUID
            type: string
          in: query
          required: false
        - name: limit
          description: Set the limit on the number of Jobs returned. The default is 20 Jobs.
          schema:
            format: int32
            default: 20
            maximum: 100
            minimum: 1
            type: integer
          in: query
        - name: offset
          description: Set the offset to start at when returning Jobs. The default is 0.
          schema:
            format: int32
            default: 0
            minimum: 0
            type: integer
          in: query
        - name: jobType
          description: Filter the Jobs by jobType.
          schema:
            $ref: '#/components/schemas/JobTypeEnum'
          in: query
        - name: workspaceIds
          description: The UUIDs of the workspaces you wish to list jobs for. Empty list will retrieve all allowed workspaces.
          schema:
            type: array
            items:
              format: uuid
              type: string
          in: query
          required: false
        - name: status
          description: The Job status you want to filter by
          schema:
            $ref: '#/components/schemas/JobStatusEnum'
          in: query
          required: false
        - name: createdAtStart
          description: The start date to filter by
          schema:
            type: string
            format: date-time
          in: query
          required: false
          example: 2023-06-22T16:15:00Z
        - name: createdAtEnd
          description: The end date to filter by
          schema:
            type: string
            format: date-time
          in: query
          required: false
          example: 2023-06-22T16:15:00Z
        - name: updatedAtStart
          description: The start date to filter by
          schema:
            type: string
            format: date-time
          example: 2023-06-22T16:15:00Z
          in: query
          required: false
        - name: updatedAtEnd
          description: The end date to filter by
          schema:
            type: string
            format: date-time
          in: query
          required: false
          example: 2023-06-22T16:15:00Z
        - name: orderBy
          description: The field and method to use for ordering
          schema:
            type: string
            pattern: \w+|(ASC|DESC)
          in: query
          required: false
          example: updatedAt|DESC
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsResponse'
              examples:
                Job List Response Example:
                  value:
                    next: https://api.airbyte.com/v1/jobs?limit=5&offset=10
                    previous: https://api.airbyte.com/v1/jobs?limit=5&offset=0
                    data:
                      - id: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                        status: running
                        jobType: sync
          description: List all the Jobs by connectionId.
        '403':
          description: Not allowed
      operationId: listJobs
      summary: List Jobs by sync type
      x-sdk-alias: listJobs
      x-sdk-group: Jobs
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCreateRequest'
            examples:
              Job Creation Request Example:
                value:
                  connectionId: e735894a-e773-4938-969f-45f53957b75b
                  jobType: sync
        required: true
      tags:
        - public_jobs
        - public
        - Jobs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
              examples:
                Job Creation Response Example:
                  value:
                    jobId: 1234
                    status: running
                    jobType: sync
          description: 'Kicks off a new Job based on the JobType. The connectionId is the resource that Job will be run for.'
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicCreateJob
      summary: Trigger a sync or reset job of a connection
      x-sdk-alias: createJob
      x-sdk-group: Jobs
  /public/v1/jobs/{jobId}:
    get:
      tags:
        - public_jobs
        - public
        - Jobs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
              examples:
                Job Get Response Example:
                  value:
                    id: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    status: running
                    jobType: sync
          description: Get a Job by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: getJob
      x-sdk-alias: getJob
      x-sdk-group: Jobs
      summary: Get Job status and details
    delete:
      tags:
        - public_jobs
        - public
        - Jobs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
          description: Cancel a Job.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicCancelJob
      x-sdk-alias: cancelJob
      x-sdk-group: Jobs
      summary: Cancel a running Job
    parameters:
      - name: jobId
        schema:
          format: int64
          type: integer
        in: path
        required: true
  /public/v1/sources:
    get:
      tags:
        - public_sources
        - public
        - Sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcesResponse'
          description: Successful operation
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: listSources
      x-sdk-alias: listSources
      x-sdk-group: Sources
      summary: List sources
      parameters:
        - name: workspaceIds
          description: The UUIDs of the workspaces you wish to list sources for. Empty list will retrieve all allowed workspaces.
          schema:
            type: array
            items:
              format: uuid
              type: string
          example: df08f6b0-b364-4cc1-9b3f-96f5d2fccfb2,b0796797-de23-4fc7-a5e2-7e131314718c
          in: query
          required: false
        - name: includeDeleted
          description: Include deleted sources in the returned results.
          schema:
            default: false
            type: boolean
          in: query
          required: false
        - name: limit
          description: Set the limit on the number of sources returned. The default is 20.
          schema:
            format: int32
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          in: query
        - name: offset
          description: Set the offset to start at when returning sources. The default is 0
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
          in: query
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreateRequest'
            examples:
              Source Creation Request Example:
                value:
                  configuration:
                    airbyte_source_name: google-ads
                    conversion_window_days: 14
                    customer_id: '1234567890'
                    start_date: 2023-01-01
                    end_date: 2024-01-01
                  name: My Source
                  workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
      tags:
        - public_sources
        - public
        - Sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResponse'
              examples:
                Source Creation Response Example:
                  value:
                    sourceId: 0c31738c-0b2d-4887-b506-e2cd1c39cc35
          description: Successful operation
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicCreateSource
      x-sdk-alias: createSource
      x-sdk-group: Sources
      summary: Create a source
      description: 'Creates a source given a name, workspace id, and a json blob containing the configuration for the source.'
  /public/v1/sources/{sourceId}:
    get:
      tags:
        - public_sources
        - public
        - Sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResponse'
              examples:
                Source Get Response Example:
                  value:
                    sourceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: running
                    sourceType: postgres
                    workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
          description: Get a Source by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicGetSource
      x-sdk-alias: getSource
      x-sdk-group: Sources
      summary: Get Source details
    patch:
      tags:
        - public_sources
        - public
        - Sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourcePatchRequest'
            examples:
              Source Update Request Example:
                value:
                  configuration:
                    airbyte_source_name: google-ads
                    conversion_window_days: 14
                    customer_id: '1234567890'
                    start_date: 2023-01-01
                    end_date: 2024-01-01
                  name: My Source
                  workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResponse'
              examples:
                Source Update Response Example:
                  value:
                    sourceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: running
                    sourceType: postgres
                    workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
          description: Update a Source
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: patchSource
      x-sdk-alias: patchSource
      x-sdk-group: Sources
      summary: Update a Source
    put:
      tags:
        - public_sources
        - public
        - Sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourcePutRequest'
            examples:
              Source Update Request Example:
                value:
                  configuration:
                    airbyte_source_name: google-ads
                    conversion_window_days: 14
                    customer_id: '1234567890'
                    start_date: 2023-01-01
                    end_date: 2024-01-01
                  name: My Source
                  workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResponse'
              examples:
                Source Update Response Example:
                  value:
                    sourceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: running
                    sourceType: postgres
                    workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
          description: Update a source and fully overwrite it
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: putSource
      x-sdk-alias: putSource
      x-sdk-group: Sources
      summary: Update a Source and fully overwrite it
      x-sdk-entity-operation: Source#update
    delete:
      tags:
        - public_sources
        - public
        - Sources
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicDeleteSource
      x-sdk-alias: deleteSource
      x-sdk-group: Sources
      summary: Delete a Source
    parameters:
      - name: sourceId
        schema:
          format: UUID
          type: string
        in: path
        required: true
  /public/v1/destinations:
    get:
      tags:
        - public_destinations
        - public
        - Destinations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationsResponse'
          description: Successful operation
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: listDestinations
      x-sdk-alias: listDestinations
      x-sdk-group: Destinations
      summary: List destinations
      parameters:
        - name: workspaceIds
          description: The UUIDs of the workspaces you wish to list destinations for. Empty list will retrieve all allowed workspaces.
          schema:
            type: array
            items:
              format: uuid
              type: string
          in: query
          required: false
        - name: includeDeleted
          description: Include deleted destinations in the returned results.
          schema:
            default: false
            type: boolean
          in: query
          required: false
        - name: limit
          description: Set the limit on the number of destinations returned. The default is 20.
          schema:
            format: int32
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          in: query
        - name: offset
          description: Set the offset to start at when returning destinations. The default is 0
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
          in: query
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCreateRequest'
            examples:
              Destination Creation Request Example:
                value:
                  name: Postgres
                  workspaceId: 2155ae5a-de39-4808-af6a-16fe7b8b4ed2
                  configuration:
                    airbyte_destination_name: postgres
                    port: 5432
                    schema: public
                    ssl_mode:
                      mode: prefer
                    tunnel_method:
                      tunnel_method: NO_TUNNEL
                    host: localhost
                    database: postgres
                    username: postgres
                    password: test
      tags:
        - public_destinations
        - public
        - Destinations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
              examples:
                Destination Creation Response Example:
                  value:
                    destinationId: af0c3c67-aa61-419f-8922-95b0bf840e86
          description: Successful operation
        '400':
          description: Invalid data
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicCreateDestination
      x-sdk-alias: createDestination
      x-sdk-group: Destinations
      summary: Create a destination
      description: 'Creates a destination given a name, workspace id, and a json blob containing the configuration for the source.'
  /public/v1/destinations/{destinationId}:
    get:
      tags:
        - public_destinations
        - public
        - Destinations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
              examples:
                Destination Get Response Example:
                  value:
                    destinationId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: My Destination
                    sourceType: postgres
                    workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
                    configuration:
                      conversion_window_days: 14
                      customer_id: '1234567890'
                      start_date: 2023-01-01
                      end_date: 2024-01-01
          description: Get a Destination by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicGetDestination
      x-sdk-alias: getDestination
      x-sdk-group: Destinations
      summary: Get Destination details
    delete:
      tags:
        - public_destinations
        - public
        - Destinations
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicDeleteDestination
      x-sdk-alias: deleteDestination
      x-sdk-group: Destinations
      summary: Delete a Destination
    patch:
      tags:
        - public_destinations
        - public
        - Destinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationPatchRequest'
            examples:
              Destination Update Request Example:
                value:
                  configuration:
                    conversion_window_days: 14
                    customer_id: '1234567890'
                    start_date: 2023-01-01
                    end_date: 2024-01-01
                  name: My Destination
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
              examples:
                Destination Update Response Example:
                  value:
                    destinationId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: running
                    sourceType: postgres
                    workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
                    configuration:
                      conversion_window_days: 14
                      customer_id: '1234567890'
                      start_date: 2023-01-01
                      end_date: 2024-01-01
          description: Update a Destination
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: patchDestination
      x-sdk-alias: patchDestination
      x-sdk-group: Destinations
      summary: Update a Destination
    put:
      tags:
        - public_destinations
        - public
        - Destinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationPutRequest'
            examples:
              Destination Update Request Example:
                value:
                  configuration:
                    conversion_window_days: 14
                    customer_id: '1234567890'
                    start_date: 2023-01-01
                    end_date: 2024-01-01
                  name: My Destination
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
              examples:
                Destination Update Response Example:
                  value:
                    destinationId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: running
                    sourceType: postgres
                    workspaceId: 744cc0ed-7f05-4949-9e60-2a814f90c035
                    configuration:
                      conversion_window_days: 14
                      customer_id: '1234567890'
                      start_date: 2023-01-01
                      end_date: 2024-01-01
          description: Update a Destination and fully overwrite it
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: putDestination
      x-sdk-alias: putDestination
      x-sdk-group: Destinations
      summary: Update a Destination and fully overwrite it
      x-sdk-entity-operation: Destination#update
    parameters:
      - name: destinationId
        schema:
          format: UUID
          type: string
        in: path
        required: true
  /public/v1/oauth/callback:
    get:
      tags:
        - public_oauth
        - public
        - OAuth
      parameters:
        - name: queryParams
          description: Query parameters. Should contain state and code.
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
          in: query
      responses:
        '302':
          description: Redirect to the URL requested in the initiate call with the created secret ID.
      operationId: oauthCallback
      x-sdk-alias: oauthCallback
      x-sdk-group: OAuth
      summary: Receive OAuth callbacks
      description: Redirected to by identity providers after authentication.
      # This route is unsecured because it's an OAuth callback.
      security: []
  /public/v1/sources/initiateOAuth:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateOauthRequest'
        required: true
      tags:
        - public_sources
        - public
        - Sources
      responses:
        '200':
          $ref: '#/components/responses/InitiateOauthResponse'
        '400':
          description: A field in the body has not been set appropriately.
        '403':
          description: API key is invalid.
      operationId: initiateOAuth
      x-sdk-alias: initiateOAuth
      x-sdk-group: Sources
      summary: Initiate OAuth for a source
      description: >-
        Given a source ID, workspace ID, and redirect URL, initiates OAuth for the source.


        This returns a fully formed URL for performing user authentication against the relevant source
        identity provider (IdP). Once authentication has been completed, the IdP will redirect to an
        Airbyte endpoint which will save the access and refresh tokens off as a secret and return the
        secret ID to the redirect URL specified in the `secret_id` query string parameter.


        That secret ID can be used to create a source with credentials in place of actual tokens.
  /public/v1/connections:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionCreateRequest'
            examples:
              Connection Creation Request Example:
                value:
                  sourceId: 95e66a59-8045-4307-9678-63bc3c9b8c93
                  destinationId: e478de0d-a3a0-475c-b019-25f7dd29e281
                  name: Postgres-to-Bigquery
        required: true
      tags:
        - public_connections
        - public
        - Connections
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
              examples:
                Connection Creation Response Example:
                  value:
                    connectionId: 9924bcd0-99be-453d-ba47-c2c9766f7da5
          description: Successful operation
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicCreateConnection
      x-sdk-alias: createConnection
      x-sdk-group: Connections
      summary: Create a connection
      x-sdk-entity-operation: Connection#create
    get:
      tags:
        - public_connections
        - public
        - Connections
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsResponse'
          description: Successful operation
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: listConnections
      x-sdk-alias: listConnections
      x-sdk-group: Connections
      summary: List connections
      x-sdk-entity-operation: Connection#list
      parameters:
        - name: workspaceIds
          description: The UUIDs of the workspaces you wish to list connections for. Empty list will retrieve all allowed workspaces.
          schema:
            type: array
            items:
              format: uuid
              type: string
          in: query
          required: false
        - name: includeDeleted
          description: Include deleted connections in the returned results.
          schema:
            default: false
            type: boolean
          in: query
          required: false
        - name: limit
          description: Set the limit on the number of Connections returned. The default is 20.
          schema:
            format: int32
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          in: query
        - name: offset
          description: Set the offset to start at when returning Connections. The default is 0
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
          in: query
  /public/v1/connections/{connectionId}:
    get:
      tags:
        - public_connections
        - public
        - Connections
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
              examples:
                Connection Get Response Example:
                  value:
                    workspaceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: Postgres To Snowflake
                    sourceId: 9924bcd0-99be-453d-ba47-c2c9766f7da5
                    destinationId: 744cc0ed-7f05-4949-9e60-2a814f90c035
          description: Get a Connection by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicGetConnection
      x-sdk-alias: getConnection
      x-sdk-group: Connections
      summary: Get Connection details
      x-sdk-entity-operation: Connection#read
    patch:
      tags:
        - public_connections
        - public
        - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionPatchRequest'
            examples:
              Connection Update Request Example:
                value:
                  sourceId: 95e66a59-8045-4307-9678-63bc3c9b8c93
                  destinationId: e478de0d-a3a0-475c-b019-25f7dd29e281
                  name: Postgres-to-Bigquery
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
              examples:
                Connection Get Response Example:
                  value:
                    workspaceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: Postgres To Snowflake
                    sourceId: 9924bcd0-99be-453d-ba47-c2c9766f7da5
                    destinationId: 744cc0ed-7f05-4949-9e60-2a814f90c035
          description: Update a Connection by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: patchConnection
      x-sdk-alias: patchConnection
      x-sdk-group: Connections
      summary: Update Connection details
      x-sdk-entity-operation: Connection#update
    delete:
      tags:
        - public_connections
        - public
        - Connections
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicDeleteConnection
      x-sdk-alias: deleteConnection
      x-sdk-group: Connections
      summary: Delete a Connection
      x-sdk-entity-operation: Connection#delete
    parameters:
      - name: connectionId
        schema:
          format: UUID
          type: string
        in: path
        required: true
  /public/v1/streams:
    get:
      tags:
        - public_streams
        - public
        - Streams
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamPropertiesResponse'
          description: Get the available streams properties for a source/destination pair.
        '400':
          description: Required parameters are missing
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: getStreamProperties
      x-sdk-alias: getStreamProperties
      x-sdk-group: Streams
      summary: Get stream properties
      parameters:
        - name: 'sourceId'
          description: 'ID of the source'
          schema:
            format: UUID
            type: string
          in: 'query'
          required: true
        - name: 'destinationId'
          description: 'ID of the destination'
          schema:
            format: UUID
            type: string
          in: 'query'
          required: false
        - name: 'ignoreCache'
          description: 'If true pull the latest schema from the source, else pull from cache (default false)'
          schema:
            type: boolean
            default: false
          in: 'query'
          required: false
  /public/v1/workspaces:
    get:
      tags:
        - public_workspaces
        - public
        - Workspaces
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesResponse'
          description: Successful operation
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicListWorkspaces
      x-sdk-alias: listWorkspaces
      x-sdk-group: Workspaces
      summary: List workspaces
      x-sdk-entity-operation: Workspace#list
      parameters:
        - name: workspaceIds
          description: The UUIDs of the workspaces you wish to fetch. Empty list will retrieve all allowed workspaces.
          schema:
            type: array
            items:
              format: uuid
              type: string
          in: query
          required: false
        - name: includeDeleted
          description: Include deleted workspaces in the returned results.
          schema:
            default: false
            type: boolean
          in: query
          required: false
        - name: limit
          description: Set the limit on the number of workspaces returned. The default is 20.
          schema:
            format: int32
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          in: query
        - name: offset
          description: Set the offset to start at when returning workspaces. The default is 0
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
          in: query
    post:
      tags:
        - public_workspaces
        - public
        - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateRequest'
            examples:
              Workspace Creation Request Example:
                value:
                  name: Company Workspace Name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
              examples:
                Workspace Creation Response Example:
                  value:
                    workspaceId: 9924bcd0-99be-453d-ba47-c2c9766f7da5
          description: Successful operation
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicCreateWorkspace
      x-sdk-alias: createWorkspace
      x-sdk-group: Workspaces
      summary: Create a workspace
      x-sdk-entity-operation: Workspace#create
  /public/v1/workspaces/{workspaceId}:
    parameters:
      - name: workspaceId
        schema:
          format: UUID
          type: string
        in: path
        required: true
    get:
      tags:
        - public_workspaces
        - public
        - Workspaces
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
              examples:
                Workspace Get Response Example:
                  value:
                    workspaceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
                    name: Acme Company
                    dataResidency: auto
          description: Get a Workspace by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicGetWorkspace
      x-sdk-alias: getWorkspace
      x-sdk-group: Workspaces
      summary: Get Workspace details
      x-sdk-entity-operation: Workspace#read
    patch:
      tags:
        - public_workspaces
        - public
        - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateRequest'
            examples:
              Workspace Update Request Example:
                value:
                  name: Company Workspace Name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
              examples:
                Workspace Update Response Example:
                  value:
                    workspaceId: 9924bcd0-99be-453d-ba47-c2c9766f7da5
          description: Successful operation
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicUpdateWorkspace
      x-sdk-alias: updateWorkspace
      x-sdk-group: Workspaces
      summary: Update a workspace
      x-sdk-entity-operation: Workspace#update
    delete:
      tags:
        - public_workspaces
        - public
        - Workspaces
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicDeleteWorkspace
      x-sdk-alias: deleteWorkspace
      x-sdk-group: Workspaces
      summary: Delete a Workspace
      x-sdk-entity-operation: Workspace#delete
  /public/v1/workspaces/{workspaceId}/oauthCredentials:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceOAuthCredentialsRequest'
        required: true
      tags:
        - public_workspaces
        - public
        - Workspaces
      responses:
        '200':
          description: OAuth credential override was successful.
        '400':
          description: A field in the body has not been set appropriately.
        '403':
          description: API key is invalid.
      operationId: createOrUpdateWorkspaceOAuthCredentials
      x-sdk-alias: createOrUpdateWorkspaceOAuthCredentials
      x-sdk-group: Workspaces
      summary: Create OAuth override credentials for a workspace and source type.
      description: >-
        Create/update a set of OAuth credentials to override the Airbyte-provided OAuth credentials used for source/destination OAuth.

        In order to determine what the credential configuration needs to be, please see the connector specification of the relevant
        source/destination.
    parameters:
      - name: workspaceId
        schema:
          format: UUID
          type: string
        in: path
        required: true

  # Public APIs - Permissions
  /public/v1/permissions/{permissionId}:
    parameters:
      - name: permissionId
        schema:
          format: UUID
          type: string
        in: path
        required: true
    get:
      tags:
        - public_permissions
        - public
        - Permissions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: Get a Permission by the id in the path.
        '403':
          description: Not allowed
        '404':
          description: Not found
        '422':
          description: Data issue
      operationId: publicGetPermission
      summary: Get Permission details
      x-sdk-alias: getPermission
      x-sdk-group: Permissions
      x-sdk-entity-operation: Permission#read
    patch:
      tags:
        - public_permissions
        - public
        - Permissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: Successful updated
        '400':
          description: Invalid data
        '403':
          description: Not allowed
        '404':
          description: Not found
        '422':
          description: Data issue
      operationId: publicUpdatePermission
      summary: Update a permission
      x-sdk-alias: updatePermission
      x-sdk-group: Permissions
      x-sdk-entity-operation: Permission#update
    delete:
      tags:
        - public_permissions
        - public
        - Permissions
      responses:
        '204':
          description: The resource was deleted successfully
        '403':
          description: Not allowed
        '404':
          description: Not found
        '422':
          description: Data issue
      operationId: publicDeletePermission
      x-sdk-alias: deletePermission
      x-sdk-group: Permissions
      summary: Delete a Permission
      x-sdk-entity-operation: Permission#delete
  /public/v1/permissions:
    get:
      tags:
        - public_permissions
        - public
        - Permissions
      parameters:
        - name: userId
          description: User Id in permission.
          schema:
            format: UUID
            type: string
          in: query
          required: false # if not provided in the request, userId will be the current user's ID by default
        - name: organizationId
          description: This is required if you want to read someone else's permissions, and you should have organization admin or a higher role.
          schema:
            format: UUID
            type: string
          in: query
          required: false # if the request is to get self permissions, this input can be ignored
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: List Permissions.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicListPermissionsByUserId
      x-sdk-alias: listPermissions
      x-sdk-group: Permissions
      summary: List Permissions by user id
    post:
      tags:
        - public_permissions
        - public
        - Permissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionCreateRequest'
            examples:
              Permission Creation Request Example:
                value:
                  permissionType: workspace_admin
                  userId: 7d08fd6c-531e-4a00-937e-3d355f253e63
                  workspaceId: 9924bcd0-99be-453d-ba47-c2c9766f7da5
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
              examples:
                Permission Creation Response Example:
                  value:
                    permissionId: 9924bcd0-99be-453d-ba47-c2c9766f7da5
                    permissionType: workspace_admin
                    userId: 7d08fd6c-531e-4a00-937e-3d355f253e63
          description: Successful operation
        '400':
          description: Invalid data
        '403':
          description: Not allowed
      operationId: publicCreatePermission
      x-sdk-alias: createPermission
      x-sdk-group: Permissions
      summary: Create a permission
      x-sdk-entity-operation: Permission#create

  # Public APIs - Organizations
  /public/v1/organizations:
    get:
      tags:
        - public_organizations
        - public
        - Organizations
      summary: List all organizations for a user
      description: Lists users organizations.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponse'
          description: List user's organizations.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicListOrganizationsForUser
      x-sdk-alias: listOrganizationsForUser
      x-sdk-group: Organizations

  # Public APIs - Users
  /public/v1/users:
    get:
      tags:
        - public_users
        - public
        - Users
      summary: List all users within an organization
      description: Organization Admin user can list all users within the same organization.
        Also provide filtering on a list of user IDs or/and a list of user emails.
      parameters:
        - in: query
          name: organizationId
          schema:
            type: string
            format: UUID
          required: true
        - in: query
          name: ids
          schema:
            type: array
            items:
              type: string
              format: UUID
          description: List of user IDs to filter by
        - in: query
          name: emails
          schema:
            type: array
            items:
              type: string
              format: email
          description: List of user emails to filter by
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: List Users.
        '403':
          description: Not allowed
        '404':
          description: Not found
      operationId: publicListUsersWithinAnOrganization
      x-sdk-alias: listUsersWithinAnOrganization
      x-sdk-group: Users

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    # Scoped Configuration
    ScopedConfigurationRead:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
        value_name:
          type: string
        description:
          type: string
        reference_url:
          type: string
        config_key:
          type: string
        resource_id:
          type: string
        resource_name:
          type: string
        resource_type:
          type: string
        scope_id:
          type: string
        scope_type:
          type: string
        scope_name:
          type: string
        origin:
          type: string
        origin_type:
          type: string
        origin_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date
          x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonFormat(pattern="yyyy-MM-dd")'

    ScopedConfigurationListRequestBody:
      type: object
      properties:
        config_key:
          type: string
          description: Key of the configuration to filter by

    ScopedConfigurationListResponse:
      type: object
      properties:
        scopedConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ScopedConfigurationRead'

    ScopedConfigurationCreateRequestBody:
      type: object
      required:
        - value
        - config_key
        - resource_id
        - resource_type
        - scope_id
        - scope_type
        - origin
        - origin_type
      properties:
        value:
          type: string
        description:
          type: string
        reference_url:
          type: string
        config_key:
          type: string
        resource_id:
          type: string
        resource_type:
          type: string
        scope_id:
          type: string
        scope_type:
          type: string
        origin:
          type: string
        origin_type:
          type: string
        expires_at:
          type: string
          format: date
          x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonFormat(pattern="yyyy-MM-dd")'

    ScopedConfigurationCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScopedConfigurationRead'

    ScopedConfigurationContextRequestBody:
      type: object
      required:
        - config_key
        - resource_id
        - resource_type
        - scope_id
        - scope_type
      properties:
        config_key:
          type: string
        resource_id:
          type: string
          format: UUID
        resource_type:
          type: string
        scope_id:
          type: string
          format: UUID
        scope_type:
          type: string

    ScopedConfigurationContextResponse:
      type: object
      properties:
        # The configuration that is currently active for the scope being configured.
        activeConfiguration:
          $ref: '#/components/schemas/ScopedConfigurationRead'
        ancestorConfigurations:
          description: List of configurations that have been created that will get overridden by the scope currently being configured.
          type: array
          items:
            $ref: '#/components/schemas/ScopedConfigurationRead'
        descendantConfigurations:
          description: List of configurations that have been created that will override the scope currently being configured.
          type: array
          items:
            $ref: '#/components/schemas/ScopedConfigurationRead'

    ScopedConfigurationReadRequestBody:
      type: object
      properties:
        scopedConfigurationId:
          type: string
          format: uuid
      required:
        - scopedConfigurationId

    ScopedConfigurationReadResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScopedConfigurationRead'

    ScopedConfigurationUpdateRequestBody:
      type: object
      required:
        - scopedConfigurationId
        - data
      properties:
        scopedConfigurationId:
          type: string
          format: uuid
        data:
          $ref: '#/components/schemas/ScopedConfigurationCreateRequestBody'

    ScopedConfigurationUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScopedConfigurationRead'

    ScopedConfigurationDeleteRequestBody:
      type: object
      properties:
        scopedConfigurationId:
          type: string
          format: uuid
      required:
        - scopedConfigurationId

    ScopedConfigurationDeleteResponse:
      type: object
      properties:
        scopedConfigurationId:
          type: string
          format: uuid

    # WORKSPACE
    WorkspaceId:
      type: string
      format: uuid
      x-sdk-component: true
    CustomerId:
      type: string
      format: uuid
    WorkspaceCreate:
      type: object
      required:
        - name
        - organizationId
      properties:
        email:
          type: string
          format: email
        anonymousDataCollection:
          type: boolean
        name:
          type: string
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
        displaySetupWizard:
          type: boolean
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        webhookConfigs:
          type: array
          items:
            $ref: '#/components/schemas/WebhookConfigWrite'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
    WorkspaceCreateWithId:
      type: object
      required:
        - id
        - name
        - organizationId
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        anonymousDataCollection:
          type: boolean
        name:
          type: string
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
        displaySetupWizard:
          type: boolean
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        webhookConfigs:
          type: array
          items:
            $ref: '#/components/schemas/WebhookConfigWrite'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
    WebhookConfigWrite:
      type: object
      properties:
        name:
          type: string
          description: human readable name for this webhook e.g. for UI display.
        authToken:
          type: string
          description: an auth token, to be passed as the value for an HTTP Authorization header.
        validationUrl:
          type: string
          description: if supplied, the webhook config will be validated by checking that this URL returns a 2xx response.
        customDbtHost:
          type: string
          description: if the webhook is of type DBT_CLOUD, this value will be used to construct the execution URL # todo: better explanation, link to docs
    NotificationItem:
      type: object
      properties:
        notificationType:
          type: array
          items:
            $ref: '#/components/schemas/NotificationType'
        slackConfiguration:
          $ref: '#/components/schemas/SlackNotificationConfiguration'
        customerioConfiguration:
          $ref: '#/components/schemas/CustomerioNotificationConfiguration'

    NotificationSettings:
      type: object
      properties:
        sendOnSuccess:
          $ref: '#/components/schemas/NotificationItem'
        sendOnFailure:
          $ref: '#/components/schemas/NotificationItem'
        sendOnSyncDisabled:
          $ref: '#/components/schemas/NotificationItem'
        sendOnSyncDisabledWarning:
          $ref: '#/components/schemas/NotificationItem'
        sendOnConnectionUpdate:
          $ref: '#/components/schemas/NotificationItem'
        sendOnConnectionUpdateActionRequired:
          $ref: '#/components/schemas/NotificationItem'
        sendOnBreakingChangeWarning:
          $ref: '#/components/schemas/NotificationItem'
        sendOnBreakingChangeSyncsDisabled:
          $ref: '#/components/schemas/NotificationItem'

    Notification:
      type: object
      required:
        - notificationType
        - sendOnSuccess
        - sendOnFailure
      properties:
        # Instead of this type field, we would prefer a json schema "oneOf" but unfortunately,
        # the jsonschema2pojo does not seem to support it yet: https://github.com/joelittlejohn/jsonschema2pojo/issues/392
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        sendOnSuccess:
          type: boolean
          default: false
        sendOnFailure:
          type: boolean
          default: true
        slackConfiguration:
          $ref: '#/components/schemas/SlackNotificationConfiguration'
        customerioConfiguration:
          $ref: '#/components/schemas/CustomerioNotificationConfiguration'
    SlackNotificationConfiguration:
      type: object
      required:
        - webhook
      properties:
        webhook:
          type: string
    CustomerioNotificationConfiguration:
      type: object
    NotificationType:
      type: string
      enum:
        - slack
        - customerio
        # - webhook
    NotificationTrigger:
      type: string
      enum:
        - sync_success
        - sync_failure
        - sync_disabled
        - sync_disabled_warning
        - connection_update
        - connection_update_action_required
        - breaking_change_warning
        - breaking_change_syncs_disabled
    NotificationRead:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - succeeded
            - failed
        message:
          type: string
    WorkspaceIdRequestBody:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        includeTombstone:
          type: boolean
    ListConnectionsForWorkspacesRequestBody:
      type: object
      required:
        - workspaceIds
        - userId
      properties:
        workspaceIds:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceId'
        userId:
          type: string
          format: uuid
        pagination:
          $ref: '#/components/schemas/Pagination'
        includeDeleted:
          type: boolean
          default: false
    ListResourcesForWorkspacesRequestBody:
      type: object
      required:
        - workspaceIds
        - pagination
      properties:
        workspaceIds:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceId'
        includeDeleted:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        nameContains:
          type: string
    WorkspaceReadList:
      type: object
      required:
        - workspaces
      properties:
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceRead'
    WorkspaceRead:
      type: object
      required:
        - workspaceId
        - organizationId
        - customerId
        - name
        - slug
        - initialSetupComplete
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        email:
          type: string
          format: email
        name:
          type: string
        slug:
          type: string
        initialSetupComplete:
          type: boolean
        displaySetupWizard:
          type: boolean
        anonymousDataCollection:
          type: boolean
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
        firstCompletedSync:
          type: boolean
        feedbackDone:
          type: boolean
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        webhookConfigs:
          type: array
          items:
            # Note: this omits any sensitive info e.g. auth token
            $ref: '#/components/schemas/WebhookConfigRead'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
        tombstone:
          type: boolean
    WorkspaceOrganizationInfoRead:
      type: object
      description: Limited info about a workspace's organization that is safe to expose to workspace readers who are not members of the org.
      required:
        - organizationId
        - organizationName
        - pba
        - sso
      properties:
        organizationId:
          type: string
          format: uuid
        organizationName:
          type: string
        pba:
          type: boolean
        sso:
          type: boolean
    WebhookConfigRead:
      type: object
      description: the readable info for a webhook config; omits sensitive info e.g. auth token
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: human-readable name e.g. for display in UI
        customDbtHost:
          type: string
          description: If this is a dbt Cloud webhook, this is the custom host
    WorkspaceUpdateName:
      type: object
      required:
        - workspaceId
        - name
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        name:
          type: string
    WorkspaceUpdateOrganization:
      type: object
      required:
        - workspaceId
        - organizationId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
    WorkspaceUpdate:
      type: object
      description: Used to apply a patch-style update to a workspace, which means that null properties remain unchanged
      required:
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        email:
          type: string
          format: email
        initialSetupComplete:
          type: boolean
        displaySetupWizard:
          type: boolean
        anonymousDataCollection:
          type: boolean
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        webhookConfigs:
          type: array
          items:
            $ref: '#/components/schemas/WebhookConfigWrite'
    WorkspaceGiveFeedback:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    WebBackendWorkspaceState:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    WebBackendWorkspaceStateResult:
      type: object
      required:
        - hasConnections
        - hasSources
        - hasDestinations
      properties:
        hasConnections:
          type: boolean
        hasSources:
          type: boolean
        hasDestinations:
          type: boolean
    WebBackendGeographiesListResult:
      type: object
      required:
        - geographies
      properties:
        geographies:
          type: array
          items:
            $ref: '#/components/schemas/Geography'
    # SLUG
    SlugRequestBody:
      type: object
      required:
        - slug
      properties:
        slug:
          type: string
    # Geography
    Geography:
      type: string
      enum:
        - auto
        - us
        - eu
    # BuilderProject
    ConnectorBuilderProjectId:
      type: string
      format: uuid
    DeclarativeManifest:
      description: Low code CDK manifest JSON object
      type: object
    DeclarativeManifestBaseImageRead:
      description: Base image associated with a declarative manifest
      type: object
      properties:
        baseImage:
          type: string
    DeclarativeManifestRead:
      type: object
      properties:
        manifest:
          $ref: '#/components/schemas/DeclarativeManifest'
        isDraft:
          type: boolean
        version:
          $ref: '#/components/schemas/ManifestVersion'
        description:
          type: string
    DeclarativeManifestRequestBody:
      type: object
      required:
        - manifest
      properties:
        manifest:
          $ref: '#/components/schemas/DeclarativeManifest'
    ConnectorBuilderProjectDetails:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        draftManifest:
          $ref: '#/components/schemas/DeclarativeManifest'
        yamlManifest:
          type: string
    ConnectorBuilderProjectDetailsRead:
      type: object
      required:
        - name
        - builderProjectId
        - hasDraft
      properties:
        name:
          type: string
        builderProjectId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        activeDeclarativeManifestVersion:
          $ref: '#/components/schemas/ManifestVersion'
        hasDraft:
          type: boolean
    ConnectorBuilderProjectIdWithWorkspaceId:
      type: object
      required:
        - workspaceId
        - builderProjectId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        builderProjectId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        version:
          $ref: '#/components/schemas/ManifestVersion'
    ExistingConnectorBuilderProjectWithWorkspaceId:
      type: object
      required:
        - workspaceId
        - builderProjectId
        - builderProject
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        builderProjectId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        builderProject:
          $ref: '#/components/schemas/ConnectorBuilderProjectDetails'
    ConnectorBuilderProjectWithWorkspaceId:
      type: object
      required:
        - workspaceId
        - builderProject
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        builderProject:
          $ref: '#/components/schemas/ConnectorBuilderProjectDetails'
    ConnectorBuilderProjectRead:
      type: object
      required:
        - builderProject
      properties:
        builderProject:
          $ref: '#/components/schemas/ConnectorBuilderProjectDetailsRead'
        declarativeManifest:
          $ref: '#/components/schemas/DeclarativeManifestRead'
        testingValues:
          $ref: '#/components/schemas/ConnectorBuilderProjectTestingValues'
    ConnectorBuilderProjectTestingValues:
      type: object
      description: The config blob containing the user inputs for testing
    ConnectorBuilderProjectReadList:
      type: object
      required:
        - projects
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorBuilderProjectDetailsRead'
    ConnectorBuilderPublishRequestBody:
      type: object
      required:
        - workspaceId
        - builderProjectId
        - name
        - initialDeclarativeManifest
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        builderProjectId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        name:
          type: string
        initialDeclarativeManifest:
          $ref: '#/components/schemas/DeclarativeSourceManifest'
    ConnectorBuilderProjectTestingValuesUpdate:
      type: object
      required:
        - workspaceId
        - builderProjectId
        - spec
        - testingValues
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        builderProjectId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        spec:
          $ref: '#/components/schemas/SourceDefinitionSpecification'
        testingValues:
          $ref: '#/components/schemas/ConnectorBuilderProjectTestingValues'
    ConnectorBuilderProjectStreamReadRequestBody:
      type: object
      required:
        - workspaceId
        - builderProjectId
        - manifest
        - streamName
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        builderProjectId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        manifest:
          $ref: '#/components/schemas/DeclarativeManifest'
        streamName:
          type: string
          description: Name of the stream to read
        formGeneratedManifest:
          type: boolean
          description: Indicates if the manifest was auto-generated from the form-based Connector Builder UI
          default: false
        recordLimit:
          type: integer
          default: 1000
          minimum: 1
          maximum: 10000
          description: Maximum number of records that will be returned to the client from connector builder test reads
        pageLimit:
          type: integer
          default: 5
          minimum: 1
          maximum: 20
          description: Maximum number of pages that will be returned to the client from connector builder test reads
        sliceLimit:
          type: integer
          default: 5
          minimum: 1
          maximum: 20
          description: Maximum number of slices that will be returned to the client from connector builder test reads
        state:
          type: array
          items:
            type: object
            description: The AirbyteStateMessage object to use as the starting state for this read
    ConnectorBuilderProjectStreamRead:
      type: object
      required:
        - logs
        - slices
        - test_read_limit_reached
      properties:
        logs:
          type: array
          description: The LOG AirbyteMessages that were emitted during the read of this slice
          items:
            type: object
        slices:
          type: array
          description: The stream slices returned from the read command. If no stream slicer is configured, this should contain a single item containing all of the results.
          items:
            type: object
            required:
              - pages
            properties:
              pages:
                type: array
                description: The pages returned from the read command. If no pagination is configured, this should contain a single item containing all of the results.
                items:
                  type: object
                  required:
                    - records
                  properties:
                    records:
                      type: array
                      description: The RECORD AirbyteMessages coming from the read operation for this page
                      items:
                        type: object
                    request:
                      $ref: '#/components/schemas/ConnectorBuilderHttpRequest'
                    response:
                      $ref: '#/components/schemas/ConnectorBuilderHttpResponse'
              slice_descriptor:
                type: object
                description: 'An object describing the current slice. This can be omitted if a stream slicer is not configured.'
              state:
                type: array
                items:
                  type: object
                  description: The STATE AirbyteMessage emitted at the end of this slice. This can be omitted if a stream slicer is not configured.
        test_read_limit_reached:
          type: boolean
          description: Whether the maximum number of request per slice or the maximum number of slices queried has been reached
        auxiliary_requests:
          type: array
          items:
            type: object
            required:
              - description
              - request
              - response
              - title
            properties:
              description:
                type: string
              request:
                $ref: '#/components/schemas/ConnectorBuilderHttpRequest'
              response:
                $ref: '#/components/schemas/ConnectorBuilderHttpResponse'
              title:
                type: string
        inferred_schema:
          type: object
          description: The narrowest JSON Schema against which every AirbyteRecord in the slices can validate successfully. This is inferred from reading every record in the output slices.
        inferred_datetime_formats:
          type: object
          description: Fields that match the given datetime format in every encountered record. The property names are the fields, the property values are the datetime formats.
        latest_config_update:
          description: The latest configuration emitted by the platform. The connector builder uses this to update its state when a new configuration is generated, to ensure that the user always work with the latest configuration.
          $ref: '#/components/schemas/ConnectorBuilderProjectTestingValues'
    ConnectorBuilderHttpRequest:
      type: object
      required:
        - url
        - http_method
      properties:
        url:
          type: string
          description: URL that the request was sent to
        parameters:
          type: object
          description: The request parameters that were set on the HTTP request, if any
        body:
          type: string
          description: The body of the HTTP request, if present
        headers:
          type: object
          description: The headers of the HTTP request, if any
        http_method:
          type: string
          enum: ['GET', 'POST', 'PUT', 'PATCH']
          description: The http method of the request ("GET", "POST", "PUT", or "PATCH")
    ConnectorBuilderHttpResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: integer
          description: The status of the response
        body:
          type: string
          description: The body of the HTTP response, if present
        headers:
          type: object
          description: The headers of the HTTP response, if any
    ManifestVersion:
      type: integer
      format: int64
    DeclarativeSourceManifest:
      type: object
      required:
        - description
        - manifest
        - spec
        - version
      properties:
        description:
          type: string
        manifest:
          $ref: '#/components/schemas/DeclarativeManifest'
        spec:
          $ref: '#/components/schemas/SourceDefinitionSpecification'
        version:
          $ref: '#/components/schemas/ManifestVersion'
    SourceDefinitionIdBody:
      type: object
      required:
        - sourceDefinitionId
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
    # Connector Documentation
    ConnectorDocumentationRequestBody:
      type: object
      required:
        - actorType
        - actorDefinitionId
        - workspaceId
      properties:
        actorType:
          $ref: '#/components/schemas/ActorType'
        actorDefinitionId:
          $ref: '#/components/schemas/ActorDefinitionId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        actorId:
          $ref: '#/components/schemas/ActorId'
    ConnectorDocumentationRead:
      type: object
      required:
        - doc
      properties:
        doc:
          type: string
    # SourceDefinition
    SourceDefinitionId:
      type: string
      format: uuid
    SourceDefinitionIdRequestBody:
      type: object
      required:
        - sourceDefinitionId
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
    SourceDefinitionCreate:
      type: object
      required:
        - name
        - dockerRepository
        - dockerImageTag
        - documentationUrl
      properties:
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          type: string
          format: uri
        icon:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
    SourceDefinitionUpdate:
      type: object
      description: Update the SourceDefinition. Currently, the only allowed attribute to update is the default docker image version.
      required:
        - sourceDefinitionId
        - dockerImageTag
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        dockerImageTag:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
    SourceDefinitionRead:
      type: object
      required:
        - sourceDefinitionId
        - name
        - dockerRepository
        - dockerImageTag
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          type: string
          format: uri
        icon:
          type: string
        protocolVersion:
          description: The Airbyte Protocol version supported by the connector
          type: string
        custom:
          description: Whether the connector is custom or not
          type: boolean
          default: false
        supportLevel:
          $ref: '#/components/schemas/SupportLevel'
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        releaseDate:
          description: The date when this connector was first released, in yyyy-mm-dd format.
          type: string
          format: date
          x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonFormat(pattern="yyyy-MM-dd")'
        sourceType:
          type: string
          enum:
            - api
            - file
            - database
            - custom
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
        maxSecondsBetweenMessages:
          description: Number of seconds allowed between 2 airbyte protocol messages. The source will timeout if this delay is reach
          type: integer
          format: int64
        lastPublished:
          description: The time the connector was modified in the codebase.
          $ref: '#/components/schemas/ISO8601DateTime'
        cdkVersion:
          description: 'The version of the CDK that the connector was built with. e.g. python:0.1.0, java:0.1.0'
          type: string
        metrics:
          description: Public metrics for the connector
          type: object
    SourceDefinitionReadList:
      type: object
      required:
        - sourceDefinitions
      properties:
        sourceDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/SourceDefinitionRead'
    ScopeId:
      type: string
      format: uuid
    ScopeType:
      type: string
      enum:
        - workspace
        - organization
    CustomSourceDefinitionCreate:
      type: object
      required:
        - sourceDefinition
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        scopeId:
          $ref: '#/components/schemas/ScopeId'
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionCreate'
    SourceDefinitionIdWithWorkspaceId:
      type: object
      required:
        - sourceDefinitionId
        - workspaceId
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    ActorDefinitionIdWithScope:
      type: object
      required:
        - actorDefinitionId
        - scopeId
        - scopeType
      properties:
        actorDefinitionId:
          $ref: '#/components/schemas/ActorDefinitionId'
        scopeId:
          $ref: '#/components/schemas/ScopeId'
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    ResolveActorDefinitionVersionRequestBody:
      type: object
      required:
        - actorDefinitionId
        - actorType
        - dockerImageTag
      properties:
        actorDefinitionId:
          $ref: '#/components/schemas/ActorDefinitionId'
        actorType:
          $ref: '#/components/schemas/ActorType'
        dockerImageTag:
          type: string
    ListDeclarativeManifestsRequestBody:
      type: object
      required:
        - workspaceId
        - sourceDefinitionId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
    DeclarativeManifestsReadList:
      type: object
      required:
        - manifestVersions
      properties:
        manifestVersions:
          type: array
          items:
            $ref: '#/components/schemas/DeclarativeManifestVersionRead'
    DeclarativeManifestVersionRead:
      type: object
      required:
        - version
        - isActive
        - description
      properties:
        version:
          type: integer
          format: int64
        isActive:
          type: boolean
        description:
          type: string
    DeclarativeSourceDefinitionCreateManifestRequestBody:
      type: object
      required:
        - workspaceId
        - sourceDefinitionId
        - setAsActiveManifest
        - declarativeManifest
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        sourceDefinitionId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        setAsActiveManifest:
          type: boolean
        declarativeManifest:
          $ref: '#/components/schemas/DeclarativeSourceManifest'
    UpdateActiveManifestRequestBody:
      type: object
      required:
        - workspaceId
        - sourceDefinitionId
        - version
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        sourceDefinitionId:
          $ref: '#/components/schemas/ConnectorBuilderProjectId'
        version:
          $ref: '#/components/schemas/ManifestVersion'
    PrivateSourceDefinitionRead:
      type: object
      required:
        - sourceDefinition
        - granted
      properties:
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionRead'
        granted:
          type: boolean
    PrivateSourceDefinitionReadList:
      type: object
      required:
        - sourceDefinitions
      properties:
        sourceDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/PrivateSourceDefinitionRead'
    # SOURCE SPECIFICATION
    SourceDefinitionSpecification:
      description: The specification for what values are required to configure the sourceDefinition.
      type: object
      example: { user: { type: string } }
    SourceDefinitionSpecificationRead:
      type: object
      required:
        - sourceDefinitionId
        - jobInfo
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        documentationUrl:
          type: string
        connectionSpecification:
          $ref: '#/components/schemas/SourceDefinitionSpecification'
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
    # SOURCE
    SourceId:
      type: string
      format: uuid
    SourceIdRequestBody:
      type: object
      required:
        - sourceId
      properties:
        sourceId:
          $ref: '#/components/schemas/SourceId'
    SourceCloneRequestBody:
      description: The values required to configure the source. The schema for this should have an id of the existing source along with the configuration you want to change in case.
      type: object
      required:
        - sourceCloneId
      properties:
        sourceCloneId:
          $ref: '#/components/schemas/SourceId'
        sourceConfiguration:
          $ref: '#/components/schemas/SourceCloneConfiguration'
    SourceCloneConfiguration:
      type: object
      properties:
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
    SourceConfiguration:
      description: The values required to configure the source. The schema for this must match the schema return by source_definition_specifications/get for the source.
      example: { user: 'charles' }
      x-sdk-component: true
    SourceCoreConfig:
      type: object
      required:
        - sourceDefinitionId
        - connectionConfiguration
        - workspaceId
      properties:
        sourceId:
          $ref: '#/components/schemas/SourceId'
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    SourceCreate:
      type: object
      required:
        - workspaceId
        - name
        - sourceDefinitionId
        - connectionConfiguration
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        name:
          type: string
        secretId:
          example: 'airbyte_oauth_workspace_0509f049-d671-48cb-8105-0a23d47e6db6_secret_e0d38206-034e-4d75-9d21-da5a99b02826_v1'
          type: string
    SourceDiscoverSchemaRequestBody:
      type: object
      required:
        - sourceId
      properties:
        sourceId:
          $ref: '#/components/schemas/SourceId'
        connectionId:
          type: string
          format: uuid
        disable_cache:
          type: boolean
        notifySchemaChange:
          type: boolean
        priority:
          $ref: '#/components/schemas/WorkloadPriority'
    PostprocessDiscoveredCatalogRequestBody:
      type: object
      required:
        - catalogId
        - connectionId
      properties:
        catalogId:
          type: string
          format: uuid
        connectionId:
          type: string
          format: uuid
    PostprocessDiscoveredCatalogResult:
      type: object
      properties:
        appliedDiff:
          $ref: '#/components/schemas/CatalogDiff'
    WorkloadPriority:
      type: string
      enum:
        - high
        - default
    PartialSourceUpdate:
      type: object
      required:
        - sourceId
      properties:
        sourceId:
          $ref: '#/components/schemas/SourceId'
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
        secretId:
          example: 'airbyte_oauth_workspace_0509f049-d671-48cb-8105-0a23d47e6db6_secret_e0d38206-034e-4d75-9d21-da5a99b02826_v1'
          type: string
    SourceUpdate:
      type: object
      required:
        - sourceId
        - connectionConfiguration
        - name
      properties:
        sourceId:
          $ref: '#/components/schemas/SourceId'
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
        secretId:
          example: 'airbyte_oauth_workspace_0509f049-d671-48cb-8105-0a23d47e6db6_secret_e0d38206-034e-4d75-9d21-da5a99b02826_v1'
          type: string
    SourceRead:
      type: object
      required:
        - sourceDefinitionId
        - sourceId
        - workspaceId
        - connectionConfiguration
        - name
        - sourceName
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        sourceId:
          $ref: '#/components/schemas/SourceId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
        sourceName:
          type: string
        icon:
          type: string
        isVersionOverrideApplied:
          type: boolean
        breakingChanges:
          $ref: '#/components/schemas/ActorDefinitionVersionBreakingChanges'
        supportState:
          $ref: '#/components/schemas/SupportState'
        status: # This is an optional field that could be used in the UI to either show status or filter actors by status.
          $ref: '#/components/schemas/ActorStatus'
    ActorStatus:
      description: An actor(source/destination) is active if it has at least one active or manual connection.
      type: string
      enum:
        - active
        - inactive
    SourceSnippetRead:
      type: object
      required:
        - sourceId
        - name
        - sourceDefinitionId
        - sourceName
      properties:
        sourceId:
          $ref: '#/components/schemas/SourceId'
        name:
          type: string
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        sourceName:
          type: string
        icon:
          type: string
    SourceReadList:
      type: object
      required:
        - sources
      properties:
        sources:
          type: array
          items:
            $ref: '#/components/schemas/SourceRead'
    SourceDiscoverSchemaWriteRequestBody:
      description: to write this requested object to database.
      type: object
      required:
        - catalog
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        sourceId:
          $ref: '#/components/schemas/SourceId'
        connectorVersion:
          type: string
        configurationHash:
          type: string

    SourceDiscoverSchemaRead:
      description: Returns the results of a discover catalog job. If the job was not successful, the catalog field will not be present. jobInfo will aways be present and its status be used to determine if the job was successful or not.
      type: object
      required:
        - jobInfo
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        catalogId:
          type: string
          format: uuid
        catalogDiff:
          $ref: '#/components/schemas/CatalogDiff'
        breakingChange:
          type: boolean
        connectionStatus:
          $ref: '#/components/schemas/ConnectionStatus'
    SourceAutoPropagateChange:
      description:
        Input of the source propagation, it contains the discovered catalog and a list of diff that need to be applied
        to the existing catalog.
      type: object
      required:
        - catalog
        - catalogId
        - sourceId
        - workspaceId
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        catalogId:
          type: string
          format: uuid
        sourceId:
          type: string
          format: uuid
        workspaceId:
          type: string
          format: uuid
    SourceSearch:
      type: object
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        sourceId:
          $ref: '#/components/schemas/SourceId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
        sourceName:
          type: string
    # DESTINATION DEFINITION
    DestinationDefinitionId:
      type: string
      format: uuid
    DestinationDefinitionIdRequestBody:
      type: object
      required:
        - destinationDefinitionId
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
    DestinationDefinitionCreate:
      type: object
      required:
        - name
        - dockerRepository
        - dockerImageTag
        - documentationUrl
      properties:
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          type: string
          format: uri
        icon:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
    DestinationDefinitionUpdate:
      type: object
      required:
        - destinationDefinitionId
        - dockerImageag
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        dockerImageTag:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
    DestinationDefinitionRead:
      type: object
      required:
        - destinationDefinitionId
        - name
        - dockerRepository
        - dockerImageTag
        - documentationUrl
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          type: string
          format: uri
        icon:
          type: string
        protocolVersion:
          description: The Airbyte Protocol version supported by the connector
          type: string
        custom:
          description: Whether the connector is custom or not
          type: boolean
          default: false
        supportLevel:
          $ref: '#/components/schemas/SupportLevel'
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        releaseDate:
          description: The date when this connector was first released, in yyyy-mm-dd format.
          type: string
          format: date
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
        lastPublished:
          description: The time the connector was modified in the codebase.
          $ref: '#/components/schemas/ISO8601DateTime'
        cdkVersion:
          description: 'The version of the CDK that the connector was built with. e.g. python:0.1.0, java:0.1.0'
          type: string
        metrics:
          description: Public metrics for the connector
          type: object
    DestinationDefinitionReadList:
      type: object
      required:
        - destinationDefinitions
      properties:
        destinationDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/DestinationDefinitionRead'
    CustomDestinationDefinitionCreate:
      type: object
      required:
        - destinationDefinition
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionCreate'
        scopeId:
          $ref: '#/components/schemas/ScopeId'
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    DestinationDefinitionIdWithWorkspaceId:
      type: object
      required:
        - destinationDefinitionId
        - workspaceId
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    PrivateDestinationDefinitionRead:
      type: object
      required:
        - destinationDefinition
        - granted
      properties:
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionRead'
        granted:
          type: boolean
    PrivateDestinationDefinitionReadList:
      type: object
      required:
        - destinationDefinitions
      properties:
        destinationDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/PrivateDestinationDefinitionRead'
    # DESTINATION DEFINITION SPECIFICATION
    DestinationDefinitionSpecification:
      description: The specification for what values are required to configure the destinationDefinition.
      type: object
      example: { user: { type: string } }
    DestinationDefinitionSpecificationRead:
      type: object
      required:
        - destinationDefinitionId
        - jobInfo
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        documentationUrl:
          type: string
        connectionSpecification:
          $ref: '#/components/schemas/DestinationDefinitionSpecification'
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        supportedDestinationSyncModes:
          type: array
          items:
            $ref: '#/components/schemas/DestinationSyncMode'
    # DESTINATION
    DestinationId:
      type: string
      format: uuid
    DestinationIdRequestBody:
      type: object
      required:
        - destinationId
      properties:
        destinationId:
          $ref: '#/components/schemas/DestinationId'
    DestinationConfiguration:
      description: The values required to configure the destination. The schema for this must match the schema return by destination_definition_specifications/get for the destinationDefinition.
      example: { user: 'charles' }
      x-sdk-component: true
    DestinationCoreConfig:
      type: object
      required:
        - workspaceId
        - destinationDefinitionId
        - connectionConfiguration
      properties:
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    DestinationCreate:
      type: object
      required:
        - name
        - workspaceId
        - destinationDefinitionId
        - connectionConfiguration
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        name:
          type: string
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
    DestinationUpdate:
      type: object
      required:
        - destinationId
        - connectionConfiguration
        - name
      properties:
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
    PartialDestinationUpdate:
      type: object
      properties:
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
    DestinationCloneRequestBody:
      description: The values required to configure the destination. The schema for this should have an id of the existing destination along with the configuration you want to change in case.
      type: object
      required:
        - destinationCloneId
      properties:
        destinationCloneId:
          $ref: '#/components/schemas/DestinationId'
        destinationConfiguration:
          $ref: '#/components/schemas/DestinationCloneConfiguration'
    DestinationCloneConfiguration:
      type: object
      properties:
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
    DestinationRead:
      type: object
      required:
        - destinationDefinitionId
        - destinationId
        - workspaceId
        - connectionConfiguration
        - name
        - destinationName
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
        destinationName:
          type: string
        icon:
          type: string
        isVersionOverrideApplied:
          type: boolean
        breakingChanges:
          $ref: '#/components/schemas/ActorDefinitionVersionBreakingChanges'
        supportState:
          $ref: '#/components/schemas/SupportState'
        status: # This is an optional field that could be used (e.g. "listing destinations" endpoint) to support FE UI showing/filtering the destinations with status.
          $ref: '#/components/schemas/ActorStatus'
    DestinationSnippetRead:
      type: object
      required:
        - destinationId
        - name
        - destinationDefinitionId
        - destinationName
      properties:
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        name:
          type: string
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        destinationName:
          type: string
        icon:
          type: string
    DestinationReadList:
      type: object
      required:
        - destinations
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/DestinationRead'
    DestinationSearch:
      type: object
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
        destinationName:
          type: string
    # ACTOR DEFINITION VERSION
    ActorDefinitionVersionId:
      type: string
      format: uuid
    ActorDefinitionVersionRead:
      type: object
      required:
        - dockerRepository
        - dockerImageTag
        - supportsRefreshes
        - supportState
        - isVersionOverrideApplied
      properties:
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        supportsRefreshes:
          type: boolean
        isVersionOverrideApplied:
          type: boolean
        supportLevel:
          $ref: '#/components/schemas/SupportLevel'
        supportState:
          $ref: '#/components/schemas/SupportState'
        breakingChanges:
          $ref: '#/components/schemas/ActorDefinitionVersionBreakingChanges'
        lastPublished:
          description: The time the connector was modified in the codebase.
          $ref: '#/components/schemas/ISO8601DateTime'
        cdkVersion:
          description: 'The version of the CDK that the connector was built with. e.g. python:0.1.0, java:0.1.0'
          type: string
    ResolveActorDefinitionVersionResponse:
      type: object
      required:
        - versionId
        - dockerRepository
        - dockerImageTag
        - supportRefreshes
      properties:
        versionId:
          $ref: '#/components/schemas/ActorDefinitionVersionId'
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        supportRefreshes:
          type: boolean
    ActorDefinitionBreakingChange:
      type: object
      required:
        - version
        - upgradeDeadline
        - message
        - migrationDocumentationUrl
      properties:
        version:
          type: string
        message:
          type: string
        upgradeDeadline:
          type: string
          format: date
          x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonFormat(pattern="yyyy-MM-dd")'
        migrationDocumentationUrl:
          type: string
    ActorDefinitionVersionBreakingChanges:
      type: object
      required:
        - upcomingBreakingChanges
        - minUpgradeDeadline
      properties:
        upcomingBreakingChanges:
          type: array
          items:
            $ref: '#/components/schemas/ActorDefinitionBreakingChange'
        minUpgradeDeadline:
          type: string
          format: date
          x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonFormat(pattern="yyyy-MM-dd")'
    SupportState:
      type: string
      enum:
        - supported
        - unsupported
        - deprecated
    ReleaseStage:
      type: string
      enum:
        - alpha
        - beta
        - generally_available
        - custom
    SupportLevel:
      type: string
      enum:
        - community
        - certified
        - archived
        - none
    # CONNECTION
    ConnectionId:
      type: string
      format: uuid
    ConnectionIdRequestBody:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
    ConnectionAndJobIdRequestBody:
      type: object
      required:
        - connectionId
        - jobId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        jobId:
          $ref: '#/components/schemas/JobId'
    ConnectionUptimeHistoryRequestBody:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        numberOfJobs:
          type: integer
    ConnectionDataHistoryRequestBody:
      type: object
      required:
        - connectionId
        - numberOfJobs
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        numberOfJobs:
          type: integer
    ConnectionStreamHistoryRequestBody:
      type: object
      required:
        - connectionId
        - timezone
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        timezone:
          type: string
    ConnectionLastJobPerStreamRequestBody:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
    ConnectionStream:
      type: object
      required:
        - streamName
      properties:
        streamName:
          type: string
        streamNamespace:
          type: string
    ConnectionStreamRequestBody:
      type: object
      required:
        - connectionId
        - streams
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        streams:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionStream'
    ConnectionStreamRefreshRequestBody:
      type: object
      required:
        - connectionId
        - refreshMode
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        refreshMode:
          $ref: '#/components/schemas/RefreshMode'
        streams:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionStream'
    RefreshMode:
      enum:
        - Truncate
        - Merge
      type: string
    DbMigrationRequestBody:
      type: object
      required:
        - database
      properties:
        database:
          type: string
    WebBackendConnectionRequestBody:
      type: object
      required:
        - connectionId
      properties:
        withRefreshedCatalog:
          type: boolean
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
    ConnectionCreate:
      type: object
      required:
        - sourceId
        - destinationId
        - status
      properties:
        name:
          type: string
          description: Optional name of the connection
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination.
        sourceId:
          $ref: '#/components/schemas/SourceId'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        operationIds:
          type: array
          items:
            $ref: '#/components/schemas/OperationId'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        sourceCatalogId:
          type: string
          format: uuid
        geography:
          $ref: '#/components/schemas/Geography'
        notifySchemaChanges:
          type: boolean
        notifySchemaChangesByEmail:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        backfillPreference:
          $ref: '#/components/schemas/SchemaChangeBackfillPreference'
    WebBackendConnectionCreate:
      type: object
      required:
        - sourceId
        - destinationId
        - status
      properties:
        name:
          type: string
          description: Optional name of the connection
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination.
        sourceId:
          $ref: '#/components/schemas/SourceId'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        operationIds:
          type: array
          items:
            $ref: '#/components/schemas/OperationId'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OperationCreate'
        sourceCatalogId:
          type: string
          format: uuid
        geography:
          $ref: '#/components/schemas/Geography'
        notifySchemaChanges:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        backfillPreference:
          $ref: '#/components/schemas/SchemaChangeBackfillPreference'
    ConnectionStateCreateOrUpdate:
      type: object
      required:
        - connectionId
        - connectionState
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        connectionState:
          $ref: '#/components/schemas/ConnectionState'
    ConnectionUpdate:
      type: object
      description: Used to apply a patch-style update to a connection, which means that null properties remain unchanged
      required:
        - connectionId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        name:
          type: string
          description: Name that will be set to this connection
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination.
        operationIds:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OperationId'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        sourceCatalogId:
          type: string
          format: uuid
        geography:
          $ref: '#/components/schemas/Geography'
        notifySchemaChanges:
          type: boolean
        notifySchemaChangesByEmail:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        backfillPreference:
          $ref: '#/components/schemas/SchemaChangeBackfillPreference'
        breakingChange:
          type: boolean
    WebBackendConnectionUpdate:
      type: object
      description: Used to apply a patch-style update to a connection, which means that null properties remain unchanged
      required:
        - connectionId
      properties:
        name:
          type: string
          description: Name that will be set to the connection
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination.
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        skipReset:
          type: boolean
        operations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WebBackendOperationCreateOrUpdate'
        sourceCatalogId:
          type: string
          format: uuid
        geography:
          $ref: '#/components/schemas/Geography'
        notifySchemaChanges:
          type: boolean
        notifySchemaChangesByEmail:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        backfillPreference:
          $ref: '#/components/schemas/SchemaChangeBackfillPreference'
    ConnectionRead:
      type: object
      required:
        - connectionId
        - name
        - sourceId
        - destinationId
        - syncCatalog
        - status
        - breakingChange
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination.
        sourceId:
          $ref: '#/components/schemas/SourceId'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        operationIds:
          type: array
          items:
            $ref: '#/components/schemas/OperationId'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        sourceCatalogId:
          type: string
          format: uuid
        geography:
          $ref: '#/components/schemas/Geography'
        breakingChange:
          type: boolean
        notifySchemaChanges:
          type: boolean
        notifySchemaChangesByEmail:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        created_at:
          type: integer
          format: int64
        backfillPreference:
          $ref: '#/components/schemas/SchemaChangeBackfillPreference'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    ConnectionStatusesRequestBody:
      type: object
      required:
        - connectionIds
      properties:
        connectionIds:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionId'
    ConnectionStatusesRead:
      type: array
      items:
        $ref: '#/components/schemas/ConnectionStatusRead'
    ConnectionStatusRead:
      type: object
      required:
        - connectionId
        - lastSyncJobStatus
        - lastSuccessfulSync
        - nextSync
        - isRunning
        - isLastCompletedJobReset
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        lastSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        lastSuccessfulSync:
          type: integer
          format: int64
        lastSyncJobId:
          $ref: '#/components/schemas/JobId'
        lastSyncAttemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        nextSync:
          type: integer
          format: int64
        isRunning:
          type: boolean
        isLastCompletedJobReset:
          type: boolean
        failureReason:
          $ref: '#/components/schemas/FailureReason'
    ConnectionSyncProgressRead:
      type: object
      required:
        - connectionId
        - streams
        - configType
      properties:
        connectionId:
          type: string
          format: uuid
        jobId:
          type: integer
          format: int64
        streams:
          type: array
          items:
            $ref: '#/components/schemas/StreamSyncProgressReadItem'
        recordsEmitted:
          type: integer
          format: int64
        recordsCommitted:
          type: integer
          format: int64
        bytesEmitted:
          type: integer
          format: int64
        bytesCommitted:
          type: integer
          format: int64
        syncStartedAt:
          type: integer
          format: int64
        configType:
          $ref: '#/components/schemas/JobConfigType'
    StreamSyncProgressReadItem:
      type: object
      required:
        - streamName
        - configType
      properties:
        streamName:
          type: string
        streamNamespace:
          type: string
        recordsEmitted:
          type: integer
          format: int64
        bytesEmitted:
          type: integer
          format: int64
        recordsCommitted:
          type: integer
          format: int64
        bytesCommitted:
          type: integer
          format: int64
        configType:
          $ref: '#/components/schemas/JobConfigType'
    ConnectionUptimeHistoryRead:
      type: array
      items:
        $ref: '#/components/schemas/JobSyncResultRead'
    JobSyncResultRead:
      type: object
      required:
        - jobId
        - jobCreatedAt
        - jobUpdatedAt
        - streamStatuses
        - configType
        - recordsEmitted
        - recordsCommitted
        - bytesEmitted
        - bytesCommitted
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        jobCreatedAt:
          type: integer
          format: int64
        jobUpdatedAt:
          type: integer
          format: int64
        streamStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionSyncResultRead'
        configType:
          $ref: '#/components/schemas/JobConfigType'
        recordsEmitted:
          type: integer
          format: int64
        recordsCommitted:
          type: integer
          format: int64
        bytesEmitted:
          type: integer
          format: int64
        bytesCommitted:
          type: integer
          format: int64
    ConnectionSyncResultRead:
      type: object
      required:
        - status
        - streamName
        - streamNamespace
      properties:
        status:
          $ref: '#/components/schemas/JobStatus'
        streamName:
          type: string
        streamNamespace:
          type: string
    ConnectionDataHistoryRead:
      type: array
      items:
        $ref: '#/components/schemas/ConnectionDataHistoryReadItem'
    ConnectionDataHistoryReadItem:
      type: object
      required:
        - timestamp
        - recordsCommitted
      properties:
        timestamp:
          type: integer
          format: int
        recordsCommitted:
          type: integer
          format: int64
        recordsEmitted:
          type: integer
          format: int64
        jobId:
          type: integer
          format: int64
    ConnectionStreamHistoryRead:
      type: array
      items:
        $ref: '#/components/schemas/ConnectionStreamHistoryReadItem'
    ConnectionStreamHistoryReadItem:
      type: object
      required:
        - timestamp
        - streamName
        - streamNamespace
        - recordsCommitted
      properties:
        timestamp:
          type: integer
          format: int
        streamName:
          type: string
        streamNamespace:
          type: string
        recordsCommitted:
          type: integer
          format: int64
    ConnectionEventId:
      type: string
      format: UUID
    ConnectionEventIdRequestBody:
      type: object
      required:
        - connectionEventId
        - connectionId
      properties:
        connectionEventId:
          $ref: '#/components/schemas/ConnectionEventId'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
    ConnectionEventType:
      type: string
      enum:
        - SYNC_STARTED # only for manual sync jobs
        - SYNC_SUCCEEDED
        - SYNC_INCOMPLETE
        - SYNC_FAILED
        - SYNC_CANCELLED
        - REFRESH_STARTED
        - REFRESH_SUCCEEDED
        - REFRESH_INCOMPLETE
        - REFRESH_FAILED
        - REFRESH_CANCELLED
        - CLEAR_STARTED
        - CLEAR_SUCCEEDED
        - CLEAR_INCOMPLETE
        - CLEAR_FAILED
        - CLEAR_CANCELLED
        - CONNECTION_SETTINGS_UPDATE
        - CONNECTION_ENABLED
        - CONNECTION_DISABLED
        - SCHEMA_UPDATE
        - CONNECTOR_UPDATE
        - UNKNOWN
    UserReadInConnectionEvent:
      type: object
      required:
        - isDeleted
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        isDeleted:
          type: boolean
          default: false
    ConnectionEvent:
      type: object
      required:
        - id
        - connectionId
        - eventType
        - summary
        - created_at
      properties:
        id:
          $ref: '#/components/schemas/ConnectionEventId'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        eventType:
          $ref: '#/components/schemas/ConnectionEventType'
        summary:
          description: JSON object without event details
          type: object
        createdAt:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/UserReadInConnectionEvent'
    ConnectionEventWithDetails:
      type: object
      required:
        - id
        - connectionId
        - eventType
        - summary
        - details
        - created_at
      properties:
        id:
          $ref: '#/components/schemas/ConnectionEventId'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        eventType:
          $ref: '#/components/schemas/ConnectionEventType'
        summary:
          description: JSON object without event details
          type: object
        details:
          description: JSON object with event details
          type: object
        createdAt:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/UserReadInConnectionEvent'

    ConnectionEventList:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionEvent'
    ConnectionEventsRequestBody:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        eventTypes:
          description: filter events by event types (optional)
          type: array
          items:
            $ref: '#/components/schemas/ConnectionEventType'
        pagination:
          $ref: '#/components/schemas/Pagination'
        createdAtStart:
          description: The start datetime of a time range to filter by
          type: string
          format: date-time
        createdAtEnd:
          description: The end datetime of a time range to filter by
          type: string
          format: date-time

    ConnectionLastJobPerStreamRead:
      type: array
      items:
        $ref: '#/components/schemas/ConnectionLastJobPerStreamReadItem'
    ConnectionLastJobPerStreamReadItem:
      type: object
      required:
        - streamName
        - streamNamespace
        - jobId
        - configType
        - jobStatus
        - recordsCommitted
        - bytesCommitted
        - startedAt
        - endedAt
      properties:
        streamName:
          type: string
        streamNamespace:
          type: string
        jobId:
          $ref: '#/components/schemas/JobId'
        configType:
          $ref: '#/components/schemas/JobConfigType'
        jobStatus:
          $ref: '#/components/schemas/JobStatus'
        recordsCommitted:
          type: integer
          format: int64
        bytesCommitted:
          type: integer
          format: int64
        startedAt:
          type: integer
          format: int64
        endedAt:
          type: integer
          format: int64
    SchemaChange:
      enum:
        - no_change
        - non_breaking
        - breaking
      type: string
    ConnectionSearch:
      type: object
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination.
        sourceId:
          $ref: '#/components/schemas/SourceId'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        source:
          $ref: '#/components/schemas/SourceSearch'
        destination:
          $ref: '#/components/schemas/DestinationSearch'
    ConnectionReadList:
      type: object
      required:
        - connections
      properties:
        connections:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionRead'
    ConnectionStatus:
      type: string
      description: Active means that data is flowing through the connection. Inactive means it is not. Deprecated means the connection is off and cannot be re-activated. the schema field describes the elements of the schema that will be synced.
      enum:
        - active
        - inactive
        - deprecated
    # TODO(https://github.com/airbytehq/airbyte/issues/11432): remove.
    # Prefer the ConnectionScheduleType and ConnectionScheduleData properties.
    ConnectionSchedule:
      description: if null, then no schedule is set.
      type: object
      required:
        - units
        - timeUnit
      properties:
        units:
          type: integer
          format: int64
        timeUnit:
          type: string
          enum:
            - minutes
            - hours
            - days
            - weeks
            - months
    ConnectionScheduleType:
      description: determine how the schedule data should be interpreted
      type: string
      enum:
        - manual
        - basic
        - cron
    ConnectionScheduleData:
      description: schedule for when the the connection should run, per the schedule type
      type: object
      properties:
        # This should be populated when schedule type is basic.
        basicSchedule:
          type: object
          required:
            - timeUnit
            - units
          properties:
            timeUnit:
              type: string
              enum:
                - minutes
                - hours
                - days
                - weeks
                - months
            units:
              type: integer
              format: int64
        # This should be populated when schedule type is cron.
        cron:
          type: object
          required:
            - cronExpression
            - cronTimeZone
          properties:
            cronExpression:
              type: string
            cronTimeZone:
              type: string
    NamespaceDefinitionType:
      type: string
      description: Method used for computing final namespace in destination
      enum:
        - source
        - destination
        - customformat
    ConnectionAutoPropagateSchemaChange:
      description: Input of the schema propagation, with the catalog to be propagated and the connection to propagate to
      type: object
      required:
        - catalog
        - catalogId
        - connectionId
        - workspaceId
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        catalogId:
          type: string
          format: uuid
        connectionId:
          type: string
          format: uuid
        workspaceId:
          type: string
          format: uuid
    ConnectionAutoPropagateResult:
      description: The result of schema propagation for a given connection, with the diff that was applied via auto-propagation.
      type: object
      properties:
        propagatedDiff:
          $ref: '#/components/schemas/CatalogDiff'
    # Operations
    OperationId:
      type: string
      format: uuid
    OperationIdRequestBody:
      type: object
      required:
        - operationId
      properties:
        operationId:
          $ref: '#/components/schemas/OperationId'
    OperationCreate:
      type: object
      required:
        - name
        - operatorConfiguration
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
    OperationUpdate:
      type: object
      required:
        - operationId
        - name
        - operatorConfiguration
      properties:
        operationId:
          $ref: '#/components/schemas/OperationId'
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
    WebBackendOperationCreateOrUpdate:
      type: object
      required:
        - name
        - operatorConfiguration
        - workspaceId
      properties:
        operationId:
          $ref: '#/components/schemas/OperationId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
    OperationRead:
      type: object
      required:
        - operationId
        - name
        - operatorConfiguration
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        operationId:
          $ref: '#/components/schemas/OperationId'
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
    OperationReadList:
      type: object
      required:
        - operations
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OperationRead'
    OperatorConfiguration:
      type: object
      required:
        - operatorType
      properties:
        # Instead of this type field, we would prefer a json schema "oneOf" but unfortunately,
        # the jsonschema2pojo does not seem to support it yet: https://github.com/joelittlejohn/jsonschema2pojo/issues/392
        operatorType:
          $ref: '#/components/schemas/OperatorType'
        webhook:
          $ref: '#/components/schemas/OperatorWebhook'
    OperatorType:
      type: string
      enum:
        - normalization
        - dbt
        - webhook
    OperatorWebhook:
      type: object
      properties:
        webhookConfigId:
          type: string
          format: uuid
          description: The id of the webhook configs to use from the workspace.
        webhookType:
          type: string
          enum:
            - dbtCloud
        dbtCloud:
          type: object
          required:
            - accountId
            - jobId
          properties:
            accountId:
              type: integer
              format: int64
              description: The account id associated with the job
            jobId:
              type: integer
              format: int64
              description: The job id associated with the job
        executionUrl:
          type: string
          description: DEPRECATED. Populate dbtCloud instead.
          deprecated: true
        executionBody:
          type: string
          description: DEPRECATED. Populate dbtCloud instead.
          deprecated: true
    CheckOperationRead:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - succeeded
            - failed
        message:
          type: string

    # ORGANIZATIONS
    OrganizationId:
      type: string
      format: uuid
      x-sdk-component: true
    OrganizationIdRequestBody:
      type: object
      required:
        - organizationId
      properties:
        organizationId:
          type: string
          format: uuid
    OrganizationUpdateRequestBody:
      type: object
      required:
        - organizationId
      properties:
        organizationId:
          type: string
          format: uuid
        organizationName:
          type: string
        pba:
          type: boolean
        orgLevelBilling:
          type: boolean
        email:
          type: string
    OrganizationCreateRequestBody:
      type: object
      required:
        - userId
        - organizationName
      properties:
        userId:
          type: string
          format: uuid
        organizationName:
          type: string
        email:
          type: string
        pba:
          type: boolean
        orgLevelBilling:
          type: boolean
    OrganizationRead:
      type: object
      required:
        - organizationId
        - organizationName
        - email
        - pba
        - orgLevelBilling
      properties:
        organizationId:
          type: string
          format: uuid
        organizationName:
          type: string
        email:
          type: string
        pba:
          type: boolean
        orgLevelBilling:
          type: boolean
        ssoRealm:
          type: string
    OrganizationReadList:
      type: object
      required:
        - organizations
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationRead'
    ListOrganizationsByUserRequestBody:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          format: uuid
        pagination:
          $ref: '#/components/schemas/Pagination'
        nameContains:
          type: string
    OrganizationUserReadList:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUserRead'
    OrganizationUserRead:
      type: object
      required:
        - userId
        - email
        - permissionId
        - permissionType
        - organizationId
      properties:
        name:
          description: Caption name for the user
          type: string
        userId:
          $ref: '#/components/schemas/UserId'
        email:
          type: string
          format: email
        permissionId:
          type: string
          format: uuid
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'

    # PERMISSIONS
    PermissionIdRequestBody:
      type: object
      required:
        - permissionId
      properties:
        permissionId:
          type: string
          format: uuid
    PermissionCreate:
      type: object
      required:
        - permissionType
        - userId
      properties:
        permissionId:
          type: string
          format: uuid
          description: This is a temporary and optional field just for dual write purpose during the data migration.
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        userId:
          $ref: '#/components/schemas/UserId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
    PermissionDeleteUserFromWorkspaceRequestBody:
      type: object
      required:
        - userIdToRemove
        - workspaceId
      properties:
        userIdToRemove:
          type: string
          format: uuid
          description: The user ID for which to remove workspace permissions
        workspaceId:
          type: string
          format: uuid
          description: The workspace ID from which to remove all workspace-level permissions for the indicated user
    PermissionRead:
      type: object
      required:
        - permissionId
        - permissionType
        - userId
      properties:
        permissionId:
          type: string
          format: uuid
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        userId:
          $ref: '#/components/schemas/UserId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
    PermissionReadList:
      type: object
      required:
        - permissions
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionRead'
    PermissionUpdate:
      type: object
      required:
        - permissionId
      properties:
        permissionId:
          type: string
          format: uuid
        permissionType:
          $ref: '#/components/schemas/PermissionType'
    PermissionType:
      type: string
      description: Describes what actions/endpoints the permission entitles to
      enum:
        - instance_admin # Permission to do anything (all permissions below)
        - organization_admin # Permission to update organization settings and manage user roles in an organization and all permissions below
        - organization_editor # Permission to create, read, delete, and edit all workspaces within an organization
        - organization_reader # Permission to read all workspaces within an organization
        - organization_member # Permission to read organization basic information, not having permissions to any workspaces within an organization
        - workspace_owner # TODO: remove this old enum. It is equivalent to `workspace_admin`.
        - workspace_admin # Permission to create, read, delete, and edit a specific workspace, and also can grant other users permissions to this workspace
        - workspace_editor # Permission to create and edit connections within the workspace, but cannot update workspace name or delete the workspace
        - workspace_reader # Permission to read connections, sync details, logs within the workspace, but cannot modify anything
      x-sdk-component: true
    PublicPermissionType:
      type: string
      description: Subset of `PermissionType` (removing `instance_admin`), could be used in public-api.
      enum:
        - organization_admin # Permission to update organization settings and manage user roles in an organization and all permissions below
        - organization_editor # Permission to create, read, delete, and edit all workspaces within an organization
        - organization_reader # Permission to read all workspaces within an organization
        - organization_member # Permission to read organization basic information, not having permissions to any workspaces within an organization
        - workspace_admin # Permission to create, read, delete, and edit a specific workspace, and also can grant other users permissions to this workspace
        - workspace_editor # Permission to create and edit connections within the workspace, but cannot update workspace name or delete the workspace
        - workspace_reader # Permission to read connections, sync details, logs within the workspace, but cannot modify anything
      x-sdk-component: true
    PermissionCheckRequest:
      type: object
      required:
        - permissionType
        - userId
      properties:
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        userId:
          $ref: '#/components/schemas/UserId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
    PermissionsCheckMultipleWorkspacesRequest:
      type: object
      required:
        - permissionType
        - userId
      properties:
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        userId:
          $ref: '#/components/schemas/UserId'
        workspaceIds:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceId'
    PermissionCheckRead:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - succeeded
            - failed
        message:
          type: string

    # USERS
    UserId:
      type: string
      description: Internal Airbyte user ID
      format: uuid
      x-sdk-component: true

    UserIdRequestBody:
      type: object
      required:
        - userId
      properties:
        userId:
          $ref: '#/components/schemas/UserId'

    AuthProvider:
      type: string
      description: Auth Provider
      default: airbyte
      enum:
        - airbyte
        - google_identity_platform
        - keycloak
      x-sdk-component: true

    UserStatus:
      type: string
      description: user status
      enum:
        - invited # To use when a registered user invites someone by email to join
        - registered
        - disabled
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true

    UserRead:
      type: object
      required:
        - userId
        - authUserId
        - authProvider
        - email
        - metadata
      properties:
        name:
          description: Caption name for the user
          type: string
        userId:
          $ref: '#/components/schemas/UserId'
        authUserId:
          description: The userId from the Auth provider
          type: string
        authProvider:
          $ref: '#/components/schemas/AuthProvider'
        defaultWorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        status:
          $ref: '#/components/schemas/UserStatus'
        companyName:
          type: string
        email:
          type: string
          format: email
        news:
          type: boolean
        metadata:
          type: object
          description: UI metadata required by frontend

    UserUpdate:
      type: object
      required:
        - userId
      properties:
        name:
          description: Caption name for the user
          type: string
        userId:
          $ref: '#/components/schemas/UserId'
        authUserId:
          description: The userId from the Auth provider
          type: string
        authProvider:
          $ref: '#/components/schemas/AuthProvider'
        defaultWorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        status:
          $ref: '#/components/schemas/UserStatus'
        companyName:
          type: string
        news:
          type: boolean
        metadata:
          type: object
          description: UI metadata used in frontend

    UserAuthIdRequestBody:
      type: object
      required:
        - authUserId
      properties:
        authUserId:
          type: string

    UserEmailRequestBody:
      type: object
      required:
        - email
      properties:
        email:
          type: string

    UserCreate:
      type: object
      required:
        - name
        - authUserId
        - authProvider
        - email
      properties:
        userId:
          description: User ID. This is a temporary and optional field just for dual write purpose during the data migration.
          type: string
          format: uuid
        name:
          description: Caption name for the user
          type: string
        authUserId:
          description: The userId from the Auth provider
          type: string
        authProvider:
          $ref: '#/components/schemas/AuthProvider'
        status:
          $ref: '#/components/schemas/UserStatus'
        companyName:
          type: string
        email:
          type: string
          format: email
        news:
          type: boolean
          default: false

    UserGetOrCreateByAuthIdResponse:
      type: object
      required:
        - userRead
      properties:
        userRead:
          $ref: '#/components/schemas/UserRead'
        newUserCreated:
          type: boolean
          default: false

    # LOGS
    LogType:
      type: string
      description: type/source of logs produced
      enum:
        - server
        - scheduler
    LogsRequestBody:
      type: object
      required:
        - logType
      properties:
        logType:
          $ref: '#/components/schemas/LogType'
    # ACTOR CATALOG
    ActorCatalogWithUpdatedAt:
      description: A source actor catalog with the timestamp it was mostly recently updated
      type: object
      properties:
        updatedAt:
          type: integer
          format: int64
        catalog:
          type: object
    # SCHEMA CATALOG
    AirbyteCatalog:
      description: describes the available schema (catalog).
      type: object
      required:
        - streams
      properties:
        streams:
          type: array
          items:
            $ref: '#/components/schemas/AirbyteStreamAndConfiguration'
    AirbyteStreamAndConfiguration:
      description: each stream is split in two parts; the immutable schema from source and mutable configuration for destination
      type: object
      additionalProperties: false
      properties:
        stream:
          $ref: '#/components/schemas/AirbyteStream'
        config:
          $ref: '#/components/schemas/AirbyteStreamConfiguration'
    AirbyteStream:
      description: the immutable schema defined by the source
      type: object
      additionalProperties: false
      required:
        - name
        - json_schema
        # todo (cgardens) - make required once sources are migrated
        # - supported_sync_modes
      properties:
        name:
          type: string
          description: Stream's name.
        jsonSchema:
          $ref: '#/components/schemas/StreamJsonSchema'
        supportedSyncModes:
          type: array
          items:
            $ref: '#/components/schemas/SyncMode'
        sourceDefinedCursor:
          description: If the source defines the cursor field, then any other cursor field inputs will be ignored. If it does not, either the user_provided one is used, or the default one is used as a backup.
          type: boolean
        defaultCursorField:
          description: Path to the field that will be used to determine if a record is new or modified since the last sync. If not provided by the source, the end user will have to specify the comparable themselves.
          type: array
          items:
            type: string
        sourceDefinedPrimaryKey:
          description: If the source defines the primary key, paths to the fields that will be used as a primary key. If not provided by the source, the end user will have to specify the primary key themselves.
          type: array
          items:
            type: array
            items:
              type: string
        namespace:
          type: string
          description: Optional Source-defined namespace. Airbyte streams from the same sources should have the same namespace. Currently only used by JDBC destinations to determine what schema to write to.
        isResumable:
          type: boolean
    StreamJsonSchema:
      description: Stream schema using Json Schema specs.
      type: object
    AirbyteStreamConfiguration:
      description: the mutable part of the stream to configure the destination
      type: object
      additionalProperties: false
      required:
        - syncMode
        - destinationSyncMode
      properties:
        syncMode:
          $ref: '#/components/schemas/SyncMode'
        cursorField:
          description: Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental`. Otherwise it is ignored.
          type: array
          items:
            type: string
        destinationSyncMode:
          $ref: '#/components/schemas/DestinationSyncMode'
        primaryKey:
          description: Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it is ignored.
          type: array
          items:
            type: array
            items:
              type: string
        aliasName:
          description: Alias name to the stream to be used in the destination
          type: string
        selected:
          description: If this is true, the stream is selected with all of its properties. For new connections, this considers if the stream is suggested or not
          type: boolean
        suggested:
          description: Does the connector suggest that this stream be enabled by default?
          type: boolean
        fieldSelectionEnabled:
          description: Whether field selection should be enabled. If this is true, only the properties in `selectedFields` will be included.
          type: boolean
        selectedFields:
          description: This must be set if `fieldSelectedEnabled` is set. An empty list indicates that no properties will be included.
          $ref: '#/components/schemas/SelectedFields'
        minimumGenerationId:
          type: integer
          format: int64
          description: The minimum generation Id of the stream
        generationId:
          type: integer
          format: int64
          description: Generation Id of the stream
        syncId:
          type: integer
          format: int64
          description: Sync id of the stream.
    SelectedFieldInfo:
      type: object
      # TODO(mfsiega-airbyte): point to thorough documentation on nested fields and paths.
      description: Path to a field/column/property in a stream to be selected. For example, if the field to be selected is a database column called "foo", this will be ["foo"]. Use multiple path elements for nested schemas.
      properties:
        fieldPath:
          type: array
          items:
            type: string
      x-sdk-component: true
    SelectedFields:
      description: Paths to the fields that will be included in the configured catalog.
      type: array
      items:
        $ref: '#/components/schemas/SelectedFieldInfo'
      x-sdk-component: true
    DataType:
      type: string
      enum:
        - string
        - number
        - boolean
        - object
        - array
    # SCHEDULER
    JobId:
      type: integer
      format: int64
    JobConfigType:
      type: string
      enum:
        - check_connection_source
        - check_connection_destination
        - discover_schema
        - get_spec
        - sync
        - reset_connection
        - refresh
        - clear
    JobCreate:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
    JobListRequestBody:
      type: object
      required:
        - configTypes
      properties:
        configTypes:
          type: array
          items:
            $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        includingJobId:
          description: If the job with this ID exists for the specified connection, returns the number of pages of jobs necessary to include this job. Returns an empty list if this job is specified and cannot be found in this connection.
          $ref: '#/components/schemas/JobId'
        pagination:
          $ref: '#/components/schemas/Pagination'
        statuses:
          type: array
          description: The Job statuses you want to filter by
          items:
            $ref: '#/components/schemas/JobStatus'
        createdAtStart:
          description: The start datetime to filter by
          type: string
          format: date-time
        createdAtEnd:
          description: The end datetime to filter by
          type: string
          format: date-time
        updatedAtStart:
          description: The start datetime to filter by
          type: string
          format: date-time
        updatedAtEnd:
          description: The end datetime to filter by
          type: string
          format: date-time
        orderByField:
          description: The field to order by
          type: string
          enum:
            - createdAt
            - updatedAt
        orderByMethod:
          description: The order by method
          type: string
          enum:
            - ASC
            - DESC
    JobListForWorkspacesRequestBody:
      type: object
      required:
        - configTypes
      properties:
        configTypes:
          type: array
          items:
            $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        workspaceIds:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceId'
        pagination:
          $ref: '#/components/schemas/Pagination'
        statuses:
          type: array
          description: The Job statuses you want to filter by
          items:
            $ref: '#/components/schemas/JobStatus'
        createdAtStart:
          description: The start datetime to filter by
          type: string
          format: date-time
        createdAtEnd:
          description: The end datetime to filter by
          type: string
          format: date-time
        updatedAtStart:
          description: The start datetime to filter by
          type: string
          format: date-time
        updatedAtEnd:
          description: The end datetime to filter by
          type: string
          format: date-time
        orderByField:
          description: The field to order by
          type: string
          enum:
            - createdAt
            - updatedAt
        orderByMethod:
          description: The order by method
          type: string
          enum:
            - ASC
            - DESC
    JobIdRequestBody:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/JobId'
    JobRead:
      type: object
      required:
        - id
        - configType
        - configId
        - createdAt
        - updatedAt
        - status
      properties:
        id:
          $ref: '#/components/schemas/JobId'
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        enabledStreams:
          type: array
          items:
            $ref: '#/components/schemas/StreamDescriptor'
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        startedAt:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/JobStatus'
        resetConfig:
          $ref: '#/components/schemas/ResetConfig'
        refreshConfig:
          $ref: '#/components/schemas/JobRefreshConfig'
        aggregatedStats:
          $ref: '#/components/schemas/JobAggregatedStats'
        streamAggregatedStats:
          $ref: '#/components/schemas/StreamAggregatedStats'
    JobAggregatedStats:
      type: object
      required:
        - recordsEmitted
        - bytesEmitted
        - recordsCommitted
        - bytesCommitted
      properties:
        recordsEmitted:
          type: integer
          format: int64
        bytesEmitted:
          type: integer
          format: int64
        recordsCommitted:
          type: integer
          format: int64
        bytesCommitted:
          type: integer
          format: int64
    StreamAggregatedStats:
      type: array
      items:
        $ref: '#/components/schemas/StreamStats'
    StreamStats:
      type: object
      required:
        - streamName
        - recordsEmitted
        - bytesEmitted
        - recordsCommitted
        - bytesCommitted
      properties:
        streamName:
          type: string
        streamNamespace:
          type: string
        recordsEmitted:
          type: integer
          format: int64
        bytesEmitted:
          type: integer
          format: int64
        recordsCommitted:
          type: integer
          format: int64
        bytesCommitted:
          type: integer
          format: int64
        wasBackfilled:
          type: boolean
        wasResumed:
          type: boolean
    SyncInput:
      type: object
      required:
        - jobId
        - attemptNumber
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
    CheckInput:
      type: object
      required:
        - jobId
        - attemptNumber
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
    SyncJobInputRead:
      description: This return a json blob aimed to be used as a JobInput. It is serialized by the JobInput java class and should be deserialized into it.
    ResetConfig:
      type: object
      description: contains information about how a reset was configured. only populated if the job was a reset.
      properties:
        streamsToReset:
          type: array
          items:
            $ref: '#/components/schemas/StreamDescriptor'
    JobRefreshConfig:
      type: object
      description: contains information about how a refresh was configured. only populated if the job was a refresh.
      properties:
        streamsToRefresh:
          type: array
          items:
            $ref: '#/components/schemas/StreamDescriptor'
    StreamDescriptor:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        namespace:
          type: string
    JobDebugRead:
      type: object
      required:
        - id
        - configType
        - configId
        - status
        - airbyteVersion
        - sourceDefinition
        - destinationDefinition
      properties:
        id:
          $ref: '#/components/schemas/JobId'
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
        airbyteVersion:
          type: string
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionRead'
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionRead'
    WorkflowStateRead:
      type: object
      required:
        - running
      properties:
        running:
          type: boolean
    JobWithAttemptsRead:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/AttemptRead'
    JobCreatedAt:
      description: epoch time of the latest sync job. null if no sync job has taken place.
      type: integer
      format: int64
    JobStatus:
      type: string
      enum:
        - pending
        - running
        - incomplete
        - failed
        - succeeded
        - cancelled
    AttemptRead:
      type: object
      required:
        - id
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/AttemptStatus'
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        endedAt:
          type: integer
          format: int64
        bytesSynced:
          type: integer
          format: int64
        recordsSynced:
          type: integer
          format: int64
        totalStats:
          $ref: '#/components/schemas/AttemptStats'
        streamStats:
          type: array
          items:
            $ref: '#/components/schemas/AttemptStreamStats'
        failureSummary:
          $ref: '#/components/schemas/AttemptFailureSummary'
    AttemptStats:
      type: object
      properties:
        recordsEmitted:
          type: integer
          format: int64
        bytesEmitted:
          type: integer
          format: int64
        stateMessagesEmitted:
          type: integer
          format: int64
        bytesCommitted:
          type: integer
          format: int64
        recordsCommitted:
          type: integer
          format: int64
        estimatedRecords:
          type: integer
          format: int64
        estimatedBytes:
          type: integer
          format: int64
    AttemptStreamStats:
      type: object
      required:
        - streamName
        - stats
      properties:
        streamName:
          type: string
        streamNamespace:
          type: string
        stats:
          $ref: '#/components/schemas/AttemptStats'
    AttemptFailureSummary:
      type: object
      required:
        - failures
      properties:
        failures:
          type: array
          items:
            $ref: '#/components/schemas/FailureReason'
        partialSuccess:
          description: True if the number of committed records for this attempt was greater than 0. False if 0 records were committed. If not set, the number of committed records is unknown.
          type: boolean
    FailureReason:
      type: object
      required:
        - timestamp
      properties:
        failureOrigin:
          $ref: '#/components/schemas/FailureOrigin'
        failureType:
          $ref: '#/components/schemas/FailureType'
        externalMessage:
          type: string
        internalMessage:
          type: string
        stacktrace:
          type: string
        retryable:
          description: True if it is known that retrying may succeed, e.g. for a transient failure. False if it is known that a retry will not succeed, e.g. for a configuration issue. If not set, retryable status is not well known.
          type: boolean
        timestamp:
          type: integer
          format: int64
    FailureOrigin:
      description: Indicates where the error originated. If not set, the origin of error is not well known.
      type: string
      enum:
        - source
        - destination
        - replication
        - persistence
        - airbyte_platform
        - unknown
    FailureType:
      description: Categorizes well known errors into types for programmatic handling. If not set, the type of error is not well known.
      type: string
      enum:
        - config_error
        - system_error
        - manual_cancellation
        - refresh_schema
        - heartbeat_timeout
        - destination_timeout
        - transient_error
    AttemptStatus:
      type: string
      enum:
        - running
        - failed
        - succeeded
    JobReadList:
      type: object
      required:
        - jobs
        - totalJobCount
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobWithAttemptsRead'
        totalJobCount:
          description: the total count of jobs for the specified connection
          type: integer
          format: int64
    JobInfoRead:
      type: object
      required:
        - job
        - attempts
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
    JobInfoLightRead:
      type: object
      required:
        - job
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
    JobOptionalRead:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
    JobDebugInfoRead:
      type: object
      required:
        - job
        - attempts
      properties:
        job:
          $ref: '#/components/schemas/JobDebugRead'
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
        workflowState:
          $ref: '#/components/schemas/WorkflowStateRead'
    AttemptInfoRead:
      type: object
      required:
        - attempt
        - logs
      properties:
        attempt:
          $ref: '#/components/schemas/AttemptRead'
        logs:
          $ref: '#/components/schemas/LogRead'
    LogRead:
      type: object
      required:
        - logLines
      properties:
        logLines:
          type: array
          items:
            type: string
    SynchronousJobRead:
      type: object
      required:
        - id
        - configType
        - createdAt
        - endedAt
        - succeeded
      properties:
        id:
          type: string
          format: uuid
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          description: only present if a config id was provided.
          type: string
        createdAt:
          type: integer
          format: int64
        endedAt:
          type: integer
          format: int64
        succeeded:
          type: boolean
        connectorConfigurationUpdated:
          type: boolean
          default: false
        logs:
          $ref: '#/components/schemas/LogRead'
        failureReason:
          $ref: '#/components/schemas/FailureReason'
    Pagination:
      type: object
      properties:
        pageSize:
          type: integer
        rowOffset:
          type: integer
    # Health
    HealthCheckRead:
      type: object
      required:
        - available
      properties:
        available:
          type: boolean
    # General
    CheckConnectionRead:
      type: object
      required:
        - jobInfo
      properties:
        status:
          type: string
          enum:
            - succeeded
            - failed
        message:
          type: string
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
    ConnectionState:
      type: object
      description: Contains the state for a connection. The stateType field identifies what type of state it is. Only the field corresponding to that type will be set, the rest will be null. If stateType=not_set, then none of the fields will be set.
      required:
        - connectionId
        - stateType
      properties:
        stateType:
          $ref: '#/components/schemas/ConnectionStateType'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        state: # legacy state object
          $ref: '#/components/schemas/StateBlob'
        streamState:
          type: array
          items:
            $ref: '#/components/schemas/StreamState'
        globalState:
          $ref: '#/components/schemas/GlobalState'
    StateBlob:
      type: object
    StreamState:
      type: object
      required:
        - streamDescriptor
      properties:
        streamDescriptor:
          $ref: '#/components/schemas/StreamDescriptor'
        streamState:
          $ref: '#/components/schemas/StateBlob'
    GlobalState:
      type: object
      required:
        - streamStates
      properties:
        shared_state:
          $ref: '#/components/schemas/StateBlob'
        streamStates:
          type: array
          items:
            $ref: '#/components/schemas/StreamState'
    ConnectionStateType:
      type: string
      enum:
        - global
        - stream
        - legacy
        - not_set
    CatalogDiff:
      type: object
      description: Describes the difference between two Airbyte catalogs.
      required:
        - transforms
      properties:
        transforms:
          description: list of stream transformations. order does not matter.
          type: array
          items:
            $ref: '#/components/schemas/StreamTransform'
    StreamTransform:
      type: object
      required:
        - transformType
        - streamDescriptor
      properties:
        transformType:
          type: string
          enum:
            - add_stream
            - remove_stream
            - update_stream
        streamDescriptor:
          $ref: '#/components/schemas/StreamDescriptor'
        updateStream:
          type: object
          required:
            - fieldTransforms
            - streamAttributeTransforms
          properties:
            fieldTransforms:
              type: array
              description: list of field transformations. order does not matter.
              items:
                $ref: '#/components/schemas/FieldTransform'
            streamAttributeTransforms:
              type: array
              description: list of stream attribute transformations. order does not matter.
              items:
                $ref: '#/components/schemas/StreamAttributeTransform'
    FieldTransform:
      type: object
      description: 'Describes the difference in a field between two Streams.'
      required:
        - transformType
        - fieldName
        - breaking
      properties:
        transformType:
          type: string
          enum:
            - add_field
            - remove_field
            - update_field_schema
        fieldName:
          $ref: '#/components/schemas/FieldName'
        breaking:
          type: boolean
        addField:
          $ref: '#/components/schemas/FieldAdd'
        removeField:
          $ref: '#/components/schemas/FieldRemove'
        updateFieldSchema:
          $ref: '#/components/schemas/FieldSchemaUpdate'
    FieldAdd:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/FieldSchema'
    FieldRemove:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/FieldSchema'
    FieldSchemaUpdate:
      type: object
      required:
        - oldSchema
        - newSchema
      properties:
        oldSchema:
          $ref: '#/components/schemas/FieldSchema'
        newSchema:
          $ref: '#/components/schemas/FieldSchema'
    FieldName:
      description: A field name is a list of strings that form the path to the field.
      type: array
      items:
        type: string
    FieldSchema:
      description: JSONSchema representation of the field
      type: object
    StreamAttributeTransform:
      type: object
      description: 'Describes the difference in an attribute between two Streams.'
      required:
        - transformType
        - breaking
      properties:
        transformType:
          type: string
          enum:
            - update_primary_key
        breaking:
          type: boolean
        updatePrimaryKey:
          $ref: '#/components/schemas/StreamAttributePrimaryKeyUpdate'
    StreamAttributePrimaryKeyUpdate:
      type: object
      properties:
        oldPrimaryKey:
          type: array
          items:
            $ref: '#/components/schemas/FieldName'
        newPrimaryKey:
          type: array
          items:
            $ref: '#/components/schemas/FieldName'
    ActorDefinitionResourceRequirements:
      description: actor definition specific resource requirements. if default is set, these are the requirements that should be set for ALL jobs run for this actor definition. it is overriden by the job type specific configurations. if not set, the platform will use defaults. these values will be overriden by configuration at the connection level.
      type: object
      additionalProperties: false
      properties:
        default:
          '$ref': '#/components/schemas/ResourceRequirements'
        jobSpecific:
          type: array
          items:
            '$ref': '#/components/schemas/JobTypeResourceLimit'
    ActorDefinitionId:
      description: A unique identifier for an actor definition.
      type: string
      format: uuid
    ActorDefinitionRequestBody:
      type: object
      additionalProperties: false
      required:
        - actorDefinitionId
        - actorType
      properties:
        actorDefinitionId:
          $ref: '#/components/schemas/ActorDefinitionId'
        actorType:
          $ref: '#/components/schemas/ActorType'
    ActorId:
      description: A unique identifier for an actor.
      type: string
      format: uuid
    JobTypeResourceLimit:
      description: sets resource requirements for a specific job type for an actor definition. these values override the default, if both are set.
      type: object
      additionalProperties: false
      required:
        - jobType
        - resourceRequirements
      properties:
        jobType:
          '$ref': '#/components/schemas/JobType'
        resourceRequirements:
          '$ref': '#/components/schemas/ResourceRequirements'
    JobType:
      description: enum that describes the different types of jobs that the platform runs.
      type: string
      enum:
        - get_spec
        - check_connection
        - discover_schema
        - sync
        - reset_connection
        - connection_updater
        - replicate
    ResourceRequirements:
      description: optional resource requirements to run workers (blank for unbounded allocations)
      type: object
      properties:
        cpu_request:
          type: string
        cpu_limit:
          type: string
        memory_request:
          type: string
        memory_limit:
          type: string
    # DB Migration
    DbMigrationState:
      type: string
      # https://github.com/flyway/flyway/blob/master/flyway-core/src/main/java/org/flywaydb/core/api/MigrationState.java
      enum:
        - pending
        - above_target
        - below_baseline
        - baseline
        - ignored
        - missing_success
        - missing_failed
        - success
        - undone
        - available
        - failed
        - out_of_order
        - future_success
        - future_failed
        - outdated
        - superseded
        - deleted
    DbMigrationRead:
      type: object
      required:
        - migrationType
        - migrationVersion
        - migrationDescription
      properties:
        migrationType:
          type: string
        migrationVersion:
          type: string
        migrationDescription:
          type: string
        migrationState:
          $ref: '#/components/schemas/DbMigrationState'
        migratedBy:
          type: string
        migratedAt:
          type: integer
          format: int64
        migrationScript:
          type: string
    DbMigrationReadList:
      type: object
      properties:
        migrations:
          type: array
          items:
            $ref: '#/components/schemas/DbMigrationRead'
    DbMigrationExecutionRead:
      type: object
      properties:
        initialVersion:
          type: string
        targetVersion:
          type: string
        executedMigrations:
          type: array
          items:
            $ref: '#/components/schemas/DbMigrationRead'
    # OAuth
    OAuthConfiguration:
      description: The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema.
      x-sdk-component: true
    OAuthInputConfiguration:
      $ref: '#/components/schemas/OAuthConfiguration'
      x-sdk-component: true
    AdvancedAuth:
      type: object
      properties:
        authFlowType:
          type: string
          enum: ['oauth2.0', 'oauth1.0']
        predicateKey:
          description: Json Path to a field in the connectorSpecification that should exist for the advanced auth to be applicable.
          type: array
          items:
            type: string
        predicateValue:
          description: Value of the predicate_key fields for the advanced auth to be applicable.
          type: string
        oauthConfigSpecification:
          '$ref': '#/components/schemas/OAuthConfigSpecification'
    OAuthConfigSpecification:
      type: object
      properties:
        oauthUserInputFromConnectorConfigSpecification:
          description: |-
            OAuth specific blob. This is a Json Schema used to validate Json configurations used as input to OAuth.
            Must be a valid non-nested JSON that refers to properties from ConnectorSpecification.connectionSpecification
            using special annotation 'path_in_connector_config'.
            These are input values the user is entering through the UI to authenticate to the connector, that might also shared
            as inputs for syncing data via the connector.

            Examples:

            if no connector values is shared during oauth flow, oauth_user_input_from_connector_config_specification=[]
            if connector values such as 'app_id' inside the top level are used to generate the API url for the oauth flow,
              oauth_user_input_from_connector_config_specification={
                app_id: {
                  type: string
                  path_in_connector_config: ['app_id']
                }
              }
            if connector values such as 'info.app_id' nested inside another object are used to generate the API url for the oauth flow,
              oauth_user_input_from_connector_config_specification={
                app_id: {
                  type: string
                  path_in_connector_config: ['info', 'app_id']
                }
              }
          $ref: '#/components/schemas/OAuthConfiguration'
        completeOAuthOutputSpecification:
          description: |-
            OAuth specific blob. This is a Json Schema used to validate Json configurations produced by the OAuth flows as they are
            returned by the distant OAuth APIs.
            Must be a valid JSON describing the fields to merge back to `ConnectorSpecification.connectionSpecification`.
            For each field, a special annotation `path_in_connector_config` can be specified to determine where to merge it,

            Examples:

                complete_oauth_output_specification={
                  refresh_token: {
                    type: string,
                    path_in_connector_config: ['credentials', 'refresh_token']
                  }
                }
          $ref: '#/components/schemas/OAuthConfiguration'
        completeOAuthServerInputSpecification:
          description: |-
            OAuth specific blob. This is a Json Schema used to validate Json configurations persisted as Airbyte Server configurations.
            Must be a valid non-nested JSON describing additional fields configured by the Airbyte Instance or Workspace Admins to be used by the
            server when completing an OAuth flow (typically exchanging an auth code for refresh token).

            Examples:

                complete_oauth_server_input_specification={
                  client_id: {
                    type: string
                  },
                  client_secret: {
                    type: string
                  }
                }
          $ref: '#/components/schemas/OAuthConfiguration'
        completeOAuthServerOutputSpecification:
          description: |-
            OAuth specific blob. This is a Json Schema used to validate Json configurations persisted as Airbyte Server configurations that
            also need to be merged back into the connector configuration at runtime.
            This is a subset configuration of `complete_oauth_server_input_specification` that filters fields out to retain only the ones that
            are necessary for the connector to function with OAuth. (some fields could be used during oauth flows but not needed afterwards, therefore
            they would be listed in the `complete_oauth_server_input_specification` but not `complete_oauth_server_output_specification`)
            Must be a valid non-nested JSON describing additional fields configured by the Airbyte Instance or Workspace Admins to be used by the
            connector when using OAuth flow APIs.
            These fields are to be merged back to `ConnectorSpecification.connectionSpecification`.
            For each field, a special annotation `path_in_connector_config` can be specified to determine where to merge it,

            Examples:

                  complete_oauth_server_output_specification={
                    client_id: {
                      type: string,
                      path_in_connector_config: ['credentials', 'client_id']
                    },
                    client_secret: {
                      type: string,
                      path_in_connector_config: ['credentials', 'client_secret']
                    }
                  }
          $ref: '#/components/schemas/OAuthConfiguration'
    SourceOauthConsentRequest:
      type: object
      required:
        - sourceDefinitionId
        - workspaceId
        - redirectUrl
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        redirectUrl:
          description: The url to redirect to after getting the user consent
          type: string
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthInputConfiguration'
        sourceId:
          $ref: '#/components/schemas/SourceId'
    DestinationOauthConsentRequest:
      type: object
      required:
        - destinationDefinitionId
        - workspaceId
        - redirectUrl
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        redirectUrl:
          description: The url to redirect to after getting the user consent
          type: string
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthInputConfiguration'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
    OAuthConsentRead:
      type: object
      required:
        - consentUrl
      properties:
        consentUrl:
          type: string
    CompleteSourceOauthRequest:
      type: object
      required:
        - sourceDefinitionId
        - workspaceId
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        redirectUrl:
          description: When completing OAuth flow to gain an access token, some API sometimes requires to verify that the app re-send the redirectUrl that was used when consent was given.
          type: string
        queryParams:
          description: The query parameters present in the redirect URL after a user granted consent e.g auth code
          type: object
          additionalProperties: true # Oauth parameters like code, state, etc.. will be different per API so we don't specify them in advance
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthInputConfiguration'
        returnSecretCoordinate:
          type: boolean
          description: If set to true, returns a secret coordinate which references the stored tokens. By default, returns raw tokens.
          default: false
        sourceId:
          $ref: '#/components/schemas/SourceId'
    RevokeSourceOauthTokensRequest:
      type: object
      required:
        - sourceId
        - sourceDefinitionId
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        sourceId:
          $ref: '#/components/schemas/SourceId'
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
    CompleteDestinationOAuthRequest:
      type: object
      required:
        - destinationDefinitionId
        - workspaceId
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        redirectUrl:
          description: When completing OAuth flow to gain an access token, some API sometimes requires to verify that the app re-send the redirectUrl that was used when consent was given.
          type: string
        queryParams:
          description: The query parameters present in the redirect URL after a user granted consent e.g auth code
          type: object
          additionalProperties: true # Oauth parameters like code, state, etc.. will be different per API so we don't specify them in advance
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthInputConfiguration'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
    CompleteOAuthResponse:
      type: object
      required:
        - request_succeeded
        - auth_payload
      properties:
        request_succeeded:
          type: boolean
        request_error:
          type: string
        auth_payload:
          type: object
          additionalProperties: true # Oauth parameters like refresh/access token etc.. will be different per API, so we don't specify them in advance
    SetInstancewideSourceOauthParamsRequestBody:
      type: object
      required:
        - sourceDefinitionId
        - params
      properties:
        sourceDefinitionId:
          $ref: '#/components/schemas/SourceDefinitionId'
        params:
          type: object
          additionalProperties: true
    SetInstancewideDestinationOauthParamsRequestBody:
      type: object
      required:
        - destinationDefinitionId
        - params
      properties:
        destinationDefinitionId:
          $ref: '#/components/schemas/DestinationDefinitionId'
        params:
          type: object
          additionalProperties: true
    WorkspaceOverrideOauthParamsRequestBody:
      type: object
      required:
        - definitionId
        - params
        - workspaceId
        - actorType
      properties:
        definitionId:
          type: string
          format: uuid
        params:
          type: object
          additionalProperties: true
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        actorType:
          $ref: '#/components/schemas/ActorType'
    ActorType:
      enum:
        - source
        - destination
      type: string
    # Web Backend
    WebBackendCheckUpdatesRead:
      type: object
      description: Summary of source and destination definitions that could be updated
      required:
        - destinationDefinitions
        - sourceDefinitions
      properties:
        destinationDefinitions:
          type: integer
        sourceDefinitions:
          type: integer
    WebBackendConnectionListRequestBody:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        sourceId:
          type: array
          items:
            $ref: '#/components/schemas/SourceId'
        destinationId:
          type: array
          items:
            $ref: '#/components/schemas/DestinationId'
    WebBackendConnectionListItem:
      type: object
      description: Information about a connection that shows up in the connection list view.
      required:
        - connectionId
        - name
        - source
        - destination
        - status
        - isSyncing
        - schemaChange
        - sourceActorDefinitionVersion
        - destinationActorDefinitionVersion
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        name:
          type: string
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        source:
          $ref: '#/components/schemas/SourceSnippetRead'
        destination:
          $ref: '#/components/schemas/DestinationSnippetRead'
        latestSyncJobCreatedAt:
          $ref: '#/components/schemas/JobCreatedAt'
        latestSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        isSyncing:
          type: boolean
        schemaChange:
          $ref: '#/components/schemas/SchemaChange'
        sourceActorDefinitionVersion:
          $ref: '#/components/schemas/ActorDefinitionVersionRead'
        destinationActorDefinitionVersion:
          $ref: '#/components/schemas/ActorDefinitionVersionRead'
    WebBackendConnectionRead:
      type: object
      required:
        - connectionId
        - name
        - sourceId
        - destinationId
        - syncCatalog
        - status
        - source
        - destination
        - isSyncing
        - schemaChange
        - notifySchemaChanges
        - notifySchemaChangesByEmail
        - nonBreakingChangesPreference
        - sourceActorDefinitionVersion
        - destinationActorDefinitionVersion
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination.
        sourceId:
          $ref: '#/components/schemas/SourceId'
        destinationId:
          $ref: '#/components/schemas/DestinationId'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        operationIds:
          type: array
          items:
            $ref: '#/components/schemas/OperationId'
        source:
          $ref: '#/components/schemas/SourceRead'
        destination:
          $ref: '#/components/schemas/DestinationRead'
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OperationRead'
        latestSyncJobCreatedAt:
          $ref: '#/components/schemas/JobCreatedAt'
        latestSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        isSyncing:
          type: boolean
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        catalogId:
          type: string
          format: uuid
        catalogDiff:
          $ref: '#/components/schemas/CatalogDiff'
        geography:
          $ref: '#/components/schemas/Geography'
        schemaChange:
          $ref: '#/components/schemas/SchemaChange'
        notifySchemaChanges:
          type: boolean
        notifySchemaChangesByEmail:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        createdAt:
          type: integer
          format: int64
        backfillPreference:
          $ref: '#/components/schemas/SchemaChangeBackfillPreference'
        sourceActorDefinitionVersion:
          $ref: '#/components/schemas/ActorDefinitionVersionRead'
        destinationActorDefinitionVersion:
          $ref: '#/components/schemas/ActorDefinitionVersionRead'
    NonBreakingChangesPreference:
      enum:
        - ignore # do nothing if we detect a schema change
        - disable # disable the connection, pausing the sync
        - propagate_columns # automatically propagate the changes on selected streams and continue syncing
        - propagate_fully # automatically propagate the changes including new streams and continue syncing
      type: string
    SchemaChangeBackfillPreference:
      enum:
        - enabled # when a column is added or changed via auto-propagation, the stream will be backfilled
        - disabled # backfill will not run
      type: string
    WebBackendConnectionReadList:
      type: object
      required:
        - connections
      properties:
        connections:
          type: array
          items:
            $ref: '#/components/schemas/WebBackendConnectionListItem'
    SyncMode:
      type: string
      enum:
        - full_refresh
        - incremental
    DestinationSyncMode:
      type: string
      enum:
        - append
        - overwrite
        #- upsert_dedup # TODO chris: SCD Type 1 can be implemented later
        - append_dedup # SCD Type 1 & 2
        - overwrite_dedup
    AirbyteArchive:
      type: string
      format: binary
      description: Tarball Archive (.tar.gz) of Airbyte Configuration and Database
    ImportRead:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - succeeded
            - failed
        reason:
          type: string
    ResourceId:
      type: string
      format: uuid
    UploadRead:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - succeeded
            - failed
        resourceId:
          $ref: '#/components/schemas/ResourceId'
    ImportRequestBody:
      type: object
      required:
        - resourceId
        - workspaceId
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    AttemptNumber:
      type: integer
      format: int32
    WorkflowId:
      type: string
    SetWorkflowInAttemptRequestBody:
      type: object
      required:
        - jobId
        - attemptNumber
        - workflowId
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        processingTaskQueue:
          type: string
          default: ''
    SaveStatsRequestBody:
      type: object
      required:
        - jobId
        - attemptNumber
        - stats
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        stats:
          $ref: '#/components/schemas/AttemptStats'
        streamStats:
          type: array
          items:
            $ref: '#/components/schemas/AttemptStreamStats'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
    SaveStreamAttemptMetadataRequestBody:
      type: object
      required:
        - jobId
        - attemptNumber
        - stats
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        streamMetadata:
          type: array
          items:
            $ref: '#/components/schemas/StreamAttemptMetadata'
    StreamAttemptMetadata:
      type: object
      required:
        - streamName
        - wasBackfilled
        - wasResumed
      properties:
        streamName:
          type: string
        streamNamespace:
          type: string
        wasBackfilled:
          type: boolean
        wasResumed:
          type: boolean
    AttemptSyncConfig:
      type: object
      required:
        - sourceConfiguration
        - destinationConfiguration
      properties:
        sourceConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        destinationConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        state:
          $ref: '#/components/schemas/ConnectionState'
    SaveAttemptSyncConfigRequestBody:
      type: object
      required:
        - jobId
        - attemptNumber
        - syncConfig
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        syncConfig:
          $ref: '#/components/schemas/AttemptSyncConfig'
    GetAttemptStatsRequestBody:
      type: object
      required:
        - jobId
        - attemptNumber
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
    InternalOperationResult:
      type: object
      required:
        - succeeded
      properties:
        succeeded:
          type: boolean
    DiscoverCatalogResult:
      type: object
      required:
        - catalogId
      properties:
        catalogId:
          type: string
          format: uuid
    StreamStatusId:
      type: string
      format: uuid
    StreamStatusRunState:
      type: string
      description: >
        Values:
          * `PENDING` - The stream operation has been selected to run
          * `RUNNING` - The stream operation is running
          * `COMPLETE` - The stream operation ran successfully to completion
          * `INCOMPLETE` - The stream operation has terminated in an incomplete state.
          See StreamStatusIncompleteRunCause for more details.
          * `RATE_LIMITED` - The stream is rate limited because the source has run out of API quota.
      enum:
        - PENDING
        - RUNNING
        - COMPLETE
        - INCOMPLETE
        - RATE_LIMITED
    StreamStatusIncompleteRunCause:
      type: string
      description: >
        Values:
          * `FAILED` - A failure has occurred
          * `CANCELED` - The run has been canceled
      enum:
        - FAILED
        - CANCELED
    StreamStatusJobType:
      type: string
      enum:
        - SYNC
        - RESET
    StreamStatusRateLimitedMetadata:
      type: object
      properties:
        quotaReset:
          type: integer
          format: int64
    StreamStatusListRequestBody:
      type: object
      required:
        - pagination
        - workspaceId
      properties:
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        jobId:
          $ref: '#/components/schemas/JobId'
        jobType:
          $ref: '#/components/schemas/StreamStatusJobType'
        pagination:
          $ref: '#/components/schemas/Pagination'
        streamName:
          type: string
        streamNamespace:
          type: string
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    StreamStatusCreateRequestBody:
      type: object
      required:
        - attemptNumber
        - connectionId
        - jobId
        - jobType
        - runState
        - streamName
        - transitionedAt
        - workspaceId
      properties:
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        jobId:
          $ref: '#/components/schemas/JobId'
        incompleteRunCause:
          $ref: '#/components/schemas/StreamStatusIncompleteRunCause'
        jobType:
          $ref: '#/components/schemas/StreamStatusJobType'
        runState:
          $ref: '#/components/schemas/StreamStatusRunState'
        streamName:
          type: string
        streamNamespace:
          type: string
        transitionedAt:
          type: integer
          format: int64
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        metadata:
          $ref: '#/components/schemas/StreamStatusRateLimitedMetadata'
    StreamStatusUpdateRequestBody:
      allOf:
        - $ref: '#/components/schemas/StreamStatusCreateRequestBody'
        - type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/StreamStatusId'
    AuthConfiguration:
      type: object
      required:
        - mode
      properties:
        mode:
          type: string
          enum:
            - none
            - simple
            - oidc
        clientId:
          type: string
          default: 'airbyte-webapp'
        defaultRealm:
          type: string
          default: 'airbyte'
    InstanceConfigurationResponse:
      type: object
      required:
        - airbyteUrl
        - auth
        - defaultOrganizationId
        - defaultOrganizationEmail
        - defaultUserId
        - defaultWorkspaceId
        - edition
        - initialSetupComplete
        - trackingStrategy
        - version
      properties:
        edition:
          type: string
          enum:
            - community
            - pro
        version:
          description: release version for the corresponding edition
          type: string
        licenseType:
          type: string
          enum:
            - pro
            - invalid
          nullable: true
        auth:
          $ref: '#/components/schemas/AuthConfiguration'
        airbyteUrl:
          type: string
        initialSetupComplete:
          type: boolean
        defaultUserId:
          type: string
          format: uuid
        defaultOrganizationId:
          type: string
          format: uuid
        defaultOrganizationEmail:
          type: string
          format: email
        defaultWorkspaceId:
          type: string
          format: uuid
        trackingStrategy:
          type: string
          enum:
            - logging
            - segment
    InstanceConfigurationSetupRequestBody:
      type: object
      required:
        - email
        - anonymousDataCollection
        - initialSetupComplete
        - displaySetupWizard
      properties:
        email:
          type: string
        anonymousDataCollection:
          type: boolean
        initialSetupComplete:
          type: boolean
        displaySetupWizard:
          type: boolean
        userName:
          description: Optional name of the user to create. Defaults to 'Default User' if not specified.
          type: string
        organizationName:
          description: Optional name of the organization to create. Defaults to 'Default Organization' if not specified.
          type: string
    StreamStatusRead:
      type: object
      required:
        - attemptNumber
        - connectionId
        - id
        - jobId
        - jobType
        - runState
        - streamName
        - transitionedAt
        - workspaceId
      properties:
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        id:
          $ref: '#/components/schemas/StreamStatusId'
        jobId:
          $ref: '#/components/schemas/JobId'
        incompleteRunCause:
          $ref: '#/components/schemas/StreamStatusIncompleteRunCause'
        jobType:
          $ref: '#/components/schemas/StreamStatusJobType'
        runState:
          $ref: '#/components/schemas/StreamStatusRunState'
        streamName:
          type: string
        streamNamespace:
          type: string
        transitionedAt:
          type: integer
          format: int64
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        metadata:
          $ref: '#/components/schemas/StreamStatusRateLimitedMetadata'
    StreamStatusReadList:
      type: object
      properties:
        streamStatuses:
          type: array
          items:
            $ref: '#/components/schemas/StreamStatusRead'
    NotificationWebhookConfigValidationRequestBody:
      type: object
      required:
        - NotificationTrigger
        - slackConfiguration
      properties:
        slackConfiguration:
          $ref: '#/components/schemas/SlackNotificationConfiguration'
        notificationTrigger:
          $ref: '#/components/schemas/NotificationTrigger'
    RetryStateRead:
      type: object
      required:
        - id
        - jobId
        - connectionId
        - successiveCompleteFailures
        - totalCompleteFailures
        - successivePartialFailures
        - totalPartialFailures
      properties:
        id:
          type: string
          format: uuid
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        jobId:
          $ref: '#/components/schemas/JobId'
        successiveCompleteFailures:
          type: integer
        totalCompleteFailures:
          type: integer
        successivePartialFailures:
          type: integer
        totalPartialFailures:
          type: integer
    JobRetryStateRequestBody:
      type: object
      required:
        - connectionId
        - jobId
        - successiveCompleteFailures
        - totalCompleteFailures
        - successivePartialFailures
        - totalPartialFailures
      properties:
        id:
          type: string
          format: uuid
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        jobId:
          $ref: '#/components/schemas/JobId'
        successiveCompleteFailures:
          type: integer
        totalCompleteFailures:
          type: integer
        successivePartialFailures:
          type: integer
        totalPartialFailures:
          type: integer
    ListWorkspacesInOrganizationRequestBody:
      type: object
      required:
        - organizationId
      properties:
        organizationId:
          type: string
          format: uuid
        pagination:
          $ref: '#/components/schemas/Pagination'
        nameContains:
          type: string
    ListWorkspacesByUserRequestBody:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          format: uuid
        pagination:
          $ref: '#/components/schemas/Pagination'
        nameContains:
          type: string
    WorkspaceUserRead:
      type: object
      required:
        - userId
        - email
        - permissionId
        - permissionType
        - workspaceId
      properties:
        name:
          description: Caption name for the user
          type: string
        userId:
          $ref: '#/components/schemas/UserId'
        isDefaultWorkspace:
          type: boolean
        email:
          type: string
          format: email
        permissionId:
          type: string
          format: uuid
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
    WorkspaceUserReadList:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUserRead'
    UserWithPermissionInfoReadList:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserWithPermissionInfoRead'
    UserWithPermissionInfoRead:
      type: object
      properties:
        name:
          description: Caption name for the user
          type: string
        userId:
          $ref: '#/components/schemas/UserId'
        email:
          type: string
          format: email
        permissionId:
          type: string
          format: uuid
    WorkspaceUserAccessInfoRead:
      description: |
        Information summarizing a user's access to a workspace. Includes the workspace-level and/or organization-level permission
        object that grants the user access to the workspace in question, as well as basic user information to facilitate access
        management of users in the workspace.
      type: object
      required:
        - userId
        - userEmail
        - userName
        - workspaceId
      properties:
        userId:
          $ref: '#/components/schemas/UserId'
        userEmail:
          type: string
          format: email
        userName:
          type: string
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        workspacePermission:
          $ref: '#/components/schemas/PermissionRead'
        organizationPermission:
          $ref: '#/components/schemas/PermissionRead'
    WorkspaceUserAccessInfoReadList:
      type: object
      required:
        - usersWithAccess
      properties:
        usersWithAccess:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUserAccessInfoRead'
    InvalidInputProperty:
      type: object
      required:
        - propertyPath
      properties:
        propertyPath:
          type: string
        invalidValue:
          type: string
        message:
          type: string
    DeploymentMetadataRead:
      type: object
      required:
        - environment
        - id
        - mode
        - version
      properties:
        environment:
          type: string
        id:
          type: string
          format: uuid
        mode:
          type: string
        version:
          type: string

    NotFoundKnownExceptionInfo:
      type: object
      required:
        - message
      properties:
        id:
          type: string
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          type: array
          items:
            type: string
        rootCauseExceptionClassName:
          type: string
        rootCauseExceptionStack:
          type: array
          items:
            type: string
    KnownExceptionInfo:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          type: array
          items:
            type: string
        rootCauseExceptionClassName:
          type: string
        rootCauseExceptionStack:
          type: array
          items:
            type: string
    InvalidInputExceptionInfo:
      type: object
      required:
        - message
        - validationErrors
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            $ref: '#/components/schemas/InvalidInputProperty'
    ConnectionJobRequestBody:
      type: object
      required:
        - connectionId
        - jobId
      properties:
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        jobId:
          $ref: '#/components/schemas/JobId'
    PersistCancelJobRequestBody:
      type: object
      required:
        - attemptFailureSummary
        - attemptNumber
        - connectionId
        - jobId
      properties:
        attemptFailureSummary:
          description: Attempt failure summary serialized as a raw object
          type: object
        attemptNumber:
          $ref: '#/components/schemas/AttemptNumber'
        connectionId:
          $ref: '#/components/schemas/ConnectionId'
        jobId:
          $ref: '#/components/schemas/JobId'
    BooleanRead:
      type: object
      required:
        - value
      properties:
        value:
          type: boolean
    TaskQueueNameRead:
      type: object
      required:
        - taskQueueName
      properties:
        taskQueueName:
          description: Name of the temporal task queue.
          type: string
    CreateOrUpdateSecretsPersistenceConfigRequestBody:
      description: Object representing a secret persistence configuration create/update request
      required:
        - secretPersistenceType
        - configuration
        - scope
        - scopeId
      properties:
        secretPersistenceType:
          $ref: '#/components/schemas/SecretPersistenceType'
        configuration:
          type: object
        scope:
          $ref: '#/components/schemas/ScopeType'
        scopeId:
          type: string
          format: uuid
    SecretPersistenceConfig:
      description: Object representing a secret persistence configuration
      required:
        - secretPersistenceType
        - configuration
        - scopeType
        - scopeId
      properties:
        secretPersistenceType:
          $ref: '#/components/schemas/SecretPersistenceType'
        configuration:
          $ref: '#/components/schemas/SecretPersistenceConfigurationJson'
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        scopeId:
          type: string
          format: uuid
    SecretPersistenceType:
      type: string
      enum:
        - testing
        - google
        - vault
        - aws
    SecretPersistenceConfigGetRequestBody:
      description: Request body for getting secret persistence config
      required:
        - scopeType
        - scopeId
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        scopeId:
          $ref: '#/components/schemas/ScopeId'
    SecretPersistenceConfigurationJson:
      type: object
    ApplicationCreate:
      required:
        - name
      type: object
      properties:
        name:
          type: string
      x-sdk-component: true
    ApplicationId:
      type: string
      format: uuid
    ApplicationIdRequestBody:
      type: object
      required:
        - applicationId
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        includeTombstone:
          type: boolean
    ApplicationReadList:
      required:
        - applications
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationRead'
      x-sdk-component: true
    ApplicationRead:
      required:
        - id
        - name
        - clientId
        - clientSecret
        - createdAt
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        createdAt:
          type: integer
          format: int64
      x-sdk-component: true
    ApplicationTokenRequest:
      required:
        - client_id
        - client_secret
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
    ApplicationTokenRequestWithGrant:
      required:
        - client_id
        - client_secret
        - grant_type
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        grant-type:
          enum: ['client_credentials']
      x-sdk-component: true
    AccessToken:
      required:
        - access_token
      type: object
      properties:
        access_token:
          type: string
    PublicAccessTokenResponse:
      required:
        - access_token
        - token_type
        - expires_in
      type: object
      properties:
        access_token:
          type: string
        token_type:
          enum: ['Bearer']
        expires_in:
          type: integer
          format: int64
      x-sdk-component: true
    UserInvitationCreateRequestBody:
      type: object
      required:
        - invitedEmail
        - permissionType
        - scopeType
        - scopeId
      properties:
        invitedEmail:
          type: string
          format: email
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        scopeId:
          type: string
          format: uuid
    UserInvitationCreateResponse:
      type: object
      properties:
        inviteCode:
          type: string
          description: The created invite code, if the request resulted in a new invitation being created.
        directlyAdded:
          type: boolean
          description: True if the request resulted in the user being directly added, without a created invitation.
    UserInvitationListRequestBody:
      type: object
      required:
        - scopeType
        - scopeId
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        scopeId:
          type: string
          format: uuid
    UserInvitationRead:
      type: object
      required:
        - id
        - inviteCode
        - inviterUserId
        - invitedEmail
        - scopeId
        - scopeType
        - permissionType
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
        inviteCode:
          type: string
        inviterUserId:
          type: string
          format: uuid
        invitedEmail:
          type: string
          format: email
        scopeId:
          type: string
          format: uuid
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        status:
          $ref: '#/components/schemas/UserInvitationStatus'
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
    UserInvitationStatus:
      type: string
      enum:
        - pending
        - accepted
        - cancelled
        - declined
    InviteCodeRequestBody:
      type: object
      required:
        - inviteCode
      properties:
        inviteCode:
          type: string

    # Airbyte API
    RedirectUrlResponse:
      title: Root Type for RedirectUrlResponse
      description: ''
      type: object
      properties:
        redirectUrl:
          format: url
          type: string
      example:
        redirectUrl: https://example.com
      x-sdk-component: true
    JobResponse:
      title: Root Type for JobResponse
      description: Provides details of a single job.
      required:
        - jobId
        - status
        - jobType
        - startTime
        - connectionId
      type: object
      properties:
        jobId:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/JobStatusEnum'
        jobType:
          $ref: '#/components/schemas/JobTypeEnum'
        startTime:
          type: string
        connectionId:
          format: UUID
          type: string
        lastUpdatedAt:
          type: string
        duration:
          description: 'Duration of a sync in ISO_8601 format'
          type: string
        bytesSynced:
          format: int64
          type: integer
        rowsSynced:
          format: int64
          type: integer
      example:
        id: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
        status: running
        jobType: sync
        startTime: 2023-03-25T01:30:50Z
        duration: PT8H6M12S
      x-sdk-component: true
    JobsResponse:
      title: Root Type for JobsResponse
      description: ''
      required:
        - data
      type: object
      properties:
        previous:
          type: string
        next:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobResponse'
      example:
        next: https://api.airbyte.com/v1/jobs?limit=5&offset=10
        previous: https://api.airbyte.com/v1/jobs?limit=5&offset=0
        data:
          - id: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
            status: running
            jobType: sync
            startTime: 2023-03-25T01:30:50Z
      x-sdk-component: true
    ConnectionCreateRequest:
      required:
        - sourceId
        - destinationId
      type: object
      properties:
        name:
          description: Optional name of the connection
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        configurations:
          $ref: '#/components/schemas/StreamConfigurations'
        schedule:
          $ref: '#/components/schemas/AirbyteApiConnectionSchedule'
        dataResidency:
          $ref: '#/components/schemas/GeographyEnum'
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionEnum'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_” causes “projects” => “airbyte_projects”).
        nonBreakingSchemaUpdatesBehavior:
          $ref: '#/components/schemas/NonBreakingSchemaUpdatesBehaviorEnum'
        status:
          $ref: '#/components/schemas/ConnectionStatusEnum'
      x-sdk-entity: Connection
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    ConnectionPatchRequest:
      type: object
      properties:
        name:
          description: Optional name of the connection
          type: string
        configurations:
          $ref: '#/components/schemas/StreamConfigurations'
        schedule:
          $ref: '#/components/schemas/AirbyteApiConnectionSchedule'
        dataResidency:
          $ref: '#/components/schemas/GeographyEnumNoDefault'
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionEnumNoDefault'
        namespaceFormat:
          type: string
          description: Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
          default: null
          example: '${SOURCE_NAMESPACE}'
        prefix:
          type: string
          description: Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_” causes “projects” => “airbyte_projects”).
        nonBreakingSchemaUpdatesBehavior:
          $ref: '#/components/schemas/NonBreakingSchemaUpdatesBehaviorEnumNoDefault'
        status:
          $ref: '#/components/schemas/ConnectionStatusEnum'
      x-sdk-entity: Connection
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    JobCreateRequest:
      title: Root Type for JobCreate
      description: Creates a new Job from the configuration provided in the request body.
      required:
        - jobType
        - connectionId
      type: object
      properties:
        connectionId:
          format: UUID
          type: string
        jobType:
          $ref: '#/components/schemas/JobTypeEnum'
      example:
        connectionId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
        jobType: sync
      x-sdk-component: true
    JobStatusEnum:
      enum:
        - pending
        - running
        - incomplete
        - failed
        - succeeded
        - cancelled
      type: string
      x-sdk-component: true
    JobTypeEnum:
      description: Enum that describes the different types of jobs that the platform runs.
      enum:
        - sync
        - reset
        - refresh
        - clear
      type: string
      x-sdk-component: true
    SourceCreateRequest:
      required:
        - name
        - workspaceId
        - configuration
      type: object
      properties:
        name:
          description: Name of the source e.g. dev-mysql-instance.
          type: string
        definitionId:
          description: The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided.
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        configuration:
          $ref: '#/components/schemas/SourceConfiguration'
        secretId:
          description: Optional secretID obtained through the  OAuth redirect flow.
          type: string
      x-implements: io.airbyte.api.common.ConfigurableActor
      x-sdk-entity: Source
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    SourcePutRequest:
      required:
        - name
        - configuration
      type: object
      properties:
        name:
          type: string
        configuration:
          $ref: '#/components/schemas/SourceConfiguration'
      x-implements: io.airbyte.api.common.ConfigurableActor
      x-sdk-entity: Source
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    SourcePatchRequest:
      type: object
      properties:
        name:
          type: string
          example: My source
        workspaceId:
          format: uuid
          type: string
        configuration:
          $ref: '#/components/schemas/SourceConfiguration'
        secretId:
          description: Optional secretID obtained through the  OAuth redirect flow.
          type: string
      x-implements: io.airbyte.api.common.ConfigurableActor
      x-sdk-entity: Source
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    InitiateOauthRequest:
      title: Root Type for initiate-oauth-post-body
      required:
        - redirectUrl
        - workspaceId
      type: object
      properties:
        name:
          description: The name of the source to authenticate to. Deprecated - use sourceType instead.
          type: string
        sourceType:
          description: The name of the source to authenticate to
          type: string
        redirectUrl:
          description: >-
            The URL to redirect the user to with the OAuth secret stored in the secret_id query
            string parameter after authentication is complete.
          type: string
        workspaceId:
          format: uuid
          description: The workspace to create the secret and eventually the full source.
          type: string
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthInputConfiguration'
          description: Input configuration for OAuth required by some sources.
      example:
        redirectUrl: 'https://cloud.airbyte.io/v1/api/oauth/callback'
        workspaceId: 871d9b60-11d1-44cb-8c92-c246d53bf87e
        destinationId: 3d93b16c-ff5f-421c-8908-5a3c82088f14
      x-sdk-component: true
    WorkspaceOAuthCredentialsRequest:
      title: Root Type for WorkspaceOAuthCredentials
      description: POST body for creating/updating workspace level OAuth credentials
      required:
        - actorType
        - name
        - configuration
      type: object
      properties:
        actorType:
          $ref: '#/components/schemas/ActorTypeEnum'
        name:
          type: string
          description: The name of the source i.e. google-ads
        configuration:
          $ref: '#/components/schemas/OAuthCredentialsConfiguration'
      x-sdk-component: true
    OAuthCredentialsConfiguration:
      description: The configuration for this source/destination based on the OAuth section of the relevant specification.
      type: object
      example:
        credentials:
          client_id: 871d9b60-11d1-44cb-8c92-c246d53bf87e
          client_secret: shhhhhh
      x-sdk-component: true
    ConnectionResponse:
      title: Root Type for ConnectionResponse
      description: Provides details of a single connection.
      type: object
      required:
        - connectionId
        - name
        - sourceId
        - destinationId
        - workspaceId
        - status
        - schedule
        - dataResidency
        - configurations
      properties:
        connectionId:
          format: UUID
          type: string
        name:
          type: string
        sourceId:
          format: UUID
          type: string
        destinationId:
          format: UUID
          type: string
        workspaceId:
          format: UUID
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatusEnum'
        schedule:
          $ref: '#/components/schemas/ConnectionScheduleResponse'
        dataResidency:
          $ref: '#/components/schemas/GeographyEnum'
        nonBreakingSchemaUpdatesBehavior:
          $ref: '#/components/schemas/NonBreakingSchemaUpdatesBehaviorEnum'
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionEnum'
        namespaceFormat:
          type: string
        prefix:
          type: string
        configurations:
          $ref: '#/components/schemas/StreamConfigurations'
      x-sdk-entity: Connection
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    AirbyteApiConnectionSchedule:
      description: schedule for when the the connection should run, per the schedule type
      type: object
      required:
        - scheduleType
      properties:
        scheduleType:
          $ref: '#/components/schemas/ScheduleTypeEnum'
        cronExpression:
          type: string
      x-sdk-component: true
    ScheduleTypeEnum:
      type: string
      enum:
        - manual
        - cron
      x-sdk-component: true
    ConnectionScheduleResponse:
      description: schedule for when the the connection should run, per the schedule type
      type: object
      required:
        - scheduleType
      properties:
        scheduleType:
          $ref: '#/components/schemas/ScheduleTypeWithBasicEnum'
        cronExpression:
          type: string
        basicTiming:
          type: string
      x-sdk-component: true
    ScheduleTypeWithBasicEnum:
      type: string
      enum:
        - manual
        - cron
        - basic
      x-sdk-component: true
    GeographyEnum:
      type: string
      enum:
        - auto
        - us
        - eu
      default: 'auto'
      x-sdk-component: true
    GeographyEnumNoDefault:
      type: string
      enum:
        - auto
        - us
        - eu
      x-sdk-component: true
    ConnectionStatusEnum:
      type: string
      enum:
        - active
        - inactive
        - deprecated
      x-sdk-component: true
    NamespaceDefinitionEnum:
      type: string
      description: Define the location where the data will be stored in the destination
      enum:
        - source
        - destination
        - custom_format
      default: 'destination'
      x-sdk-component: true
    NonBreakingSchemaUpdatesBehaviorEnum:
      type: string
      description: Set how Airbyte handles syncs when it detects a non-breaking schema change in the source
      enum:
        - ignore # do nothing if we detect a schema change
        - disable_connection # disable the connection, pausing the sync
        - propagate_columns # Auto propagate schema change for existing streams
        - propagate_fully # Auto propagate schema change for all streams including the new ones
      default: 'ignore'
      x-sdk-component: true
    NamespaceDefinitionEnumNoDefault:
      type: string
      description: Define the location where the data will be stored in the destination
      enum:
        - source
        - destination
        - custom_format
      x-sdk-component: true
    NonBreakingSchemaUpdatesBehaviorEnumNoDefault:
      type: string
      description: Set how Airbyte handles syncs when it detects a non-breaking schema change in the source
      enum:
        - ignore # do nothing if we detect a schema change
        - disable_connection # disable the connection, pausing the sync
        - propagate_columns # Auto propagate schema change for existing streams
        - propagate_fully # Auto propagate schema change for all streams including the new ones
      x-sdk-component: true
    DestinationResponse:
      title: Root Type for DestinationResponse
      description: Provides details of a single destination.
      type: object
      required:
        - destinationId
        - name
        - destinationType
        - workspaceId
        - configuration
      properties:
        destinationId:
          format: UUID
          type: string
        name:
          type: string
        destinationType:
          type: string
        workspaceId:
          format: UUID
          type: string
        configuration:
          $ref: '#/components/schemas/DestinationConfiguration'
      example:
        destinationId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
        name: Analytics Team Postgres
        destinationType: postgres
        workspaceId: 871d9b60-11d1-44cb-8c92-c246d53bf87e
      x-sdk-component: true
    SourceResponse:
      title: Root Type for SourceResponse
      description: Provides details of a single source.
      type: object
      required:
        - sourceId
        - name
        - sourceType
        - workspaceId
        - configuration
      properties:
        sourceId:
          format: UUID
          type: string
        name:
          type: string
        sourceType:
          type: string
        workspaceId:
          format: UUID
          type: string
        configuration:
          $ref: '#/components/schemas/SourceConfiguration'
      example:
        sourceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
        name: Analytics Team Postgres
        sourceType: postgres
        workspaceId: 871d9b60-11d1-44cb-8c92-c246d53bf87e
      x-sdk-component: true
    DestinationCreateRequest:
      required:
        - name
        - workspaceId
        - configuration
      type: object
      properties:
        name:
          description: Name of the destination e.g. dev-mysql-instance.
          type: string
        definitionId:
          description: The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided.
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        configuration:
          $ref: '#/components/schemas/DestinationConfiguration'
      x-implements: io.airbyte.api.common.ConfigurableActor
      x-sdk-entity: Destination
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    DestinationPatchRequest:
      type: object
      properties:
        name:
          type: string
        configuration:
          $ref: '#/components/schemas/DestinationConfiguration'
      x-implements: io.airbyte.api.common.ConfigurableActor
      x-sdk-entity: Destination
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    DestinationPutRequest:
      required:
        - name
        - configuration
      type: object
      properties:
        name:
          type: string
        configuration:
          $ref: '#/components/schemas/DestinationConfiguration'
      x-implements: io.airbyte.api.common.ConfigurableActor
      x-sdk-entity: Destination
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    WorkspaceCreateRequest:
      required:
        - name
      type: object
      properties:
        name:
          description: Name of the workspace
          type: string
        organizationId:
          description: ID of organization to add workspace to.
          format: uuid
          type: string
      x-sdk-entity: Workspace
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    WorkspaceUpdateRequest:
      required:
        - name
      type: object
      properties:
        name:
          description: Name of the workspace
          type: string
      x-sdk-entity: Workspace
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    WorkspaceResponse:
      title: Root Type for WorkspaceResponse
      description: Provides details of a single workspace.
      type: object
      required:
        - workspaceId
        - name
        - dataResidency
      properties:
        workspaceId:
          format: UUID
          type: string
        name:
          type: string
        dataResidency:
          $ref: '#/components/schemas/GeographyEnum'
      x-sdk-entity: Workspace
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true

    # Public APIs - Users
    UserResponse:
      title: Root Type for UserResponse
      description: Provides details of a single user in an organization.
      type: object
      required:
        - id
        - name
        - email
      properties:
        name:
          description: Name of the user
          type: string
        id:
          $ref: '#/components/schemas/UserId'
        email:
          type: string
          format: email
      x-sdk-entity: User
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true

    UsersResponse:
      title: Root Type for UsersResponse
      description: List/Array of multiple users in an organization
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
      x-sdk-component: true
      x-sdk-entity: User
      x-sdk-param-suppress-computed-diff: true

    # Public APIs - Permissions
    PermissionCreateRequest:
      required:
        - permissionType # which role will be given, e.g. workspace_admin, organization_editor, etc.
        - userId # which user will be given this permission
      type: object
      properties:
        permissionType:
          $ref: '#/components/schemas/PublicPermissionType'
        userId:
          $ref: '#/components/schemas/UserId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
      x-sdk-entity: Permission
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    PermissionUpdateRequest:
      required:
        - permissionType
      type: object
      properties:
        permissionType:
          $ref: '#/components/schemas/PermissionType'
      x-sdk-entity: Permission
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    PermissionResponse:
      title: Root Type for PermissionResponse
      description: Provides details of a single permission.
      type: object
      required:
        - permissionId
        - permissionType
        - userId
      properties:
        permissionId:
          type: string
          format: uuid
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        userId:
          $ref: '#/components/schemas/UserId'
        workspaceId:
          $ref: '#/components/schemas/WorkspaceId'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
      x-sdk-entity: Permission
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    PermissionScope:
      description: Scope of a single permission, e.g. workspace, organization
      type: string
      enum:
        - workspace
        - organization
        - none # this is for instance_admin type of permission
      x-sdk-component: true
    PermissionResponseRead:
      title: Root type for PermissionResponseRead
      description: Reformat PermissionResponse with permission scope
      type: object
      required:
        - permissionId
        - permissionType
        - userId
        - scope
        - scopeId
      properties:
        permissionId:
          type: string
          format: uuid
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        userId:
          $ref: '#/components/schemas/UserId'
        scopeId:
          type: string
          format: uuid
        scope:
          $ref: '#/components/schemas/PermissionScope'
      x-sdk-entity: Permission
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true
    PermissionsResponse:
      title: Root Type for PermissionsResponse
      description: List/Array of multiple permissions
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PermissionResponseRead'
      x-sdk-component: true

    # Public APIs - Organizations
    OrganizationResponse:
      title: Root Type for OrganizationResponse
      description: Provides details of a single organization for a user.
      type: object
      required:
        - organizationId
        - organizationName
        - email
      properties:
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
        organizationName:
          type: string
        email:
          type: string
          format: email
      x-sdk-param-suppress-computed-diff: true
      x-sdk-component: true

    OrganizationsResponse:
      title: Root Type for OrganizationsResponse
      description: List/Array of multiple organizations.
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResponse'
      x-sdk-component: true

    ConnectionsResponse:
      title: Root Type for ConnectionsResponse
      description: ''
      required:
        - data
      type: object
      properties:
        previous:
          type: string
        next:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionResponse'
          default: []
      example:
        next: 'https://api.airbyte.com/v1/connections?limit=5&offset=10'
        previous: 'https://api.airbyte.com/v1/connections?limit=5&offset=0'
        data:
          - name: 'test-connection'
          - connection_id: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
          - sourceId: 49237019-645d-47d4-b45b-5eddf97775ce
          - destinationId: al312fs-0ab1-4f72-9ed7-0b8fc27c5826
          - schedule:
              scheduleType: manual
          - status: active
          - dataResidency: auto
      x-sdk-component: true
    SourcesResponse:
      title: Root Type for SourcesResponse
      description: ''
      required:
        - data
      type: object
      properties:
        previous:
          type: string
        next:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/SourceResponse'
      example:
        next: 'https://api.airbyte.com/v1/sources?limit=5&offset=10'
        previous: 'https://api.airbyte.com/v1/sources?limit=5&offset=0'
        data:
          sourceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
          name: Analytics Team Postgres
          sourceType: postgres
          workspaceId: 871d9b60-11d1-44cb-8c92-c246d53bf87e
      x-sdk-component: true
    DestinationsResponse:
      title: Root Type for DestinationsResponse
      description: ''
      required:
        - data
      type: object
      properties:
        previous:
          type: string
        next:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/DestinationResponse'
      example:
        next: 'https://api.airbyte.com/v1/destinations?limit=5&offset=10'
        previous: 'https://api.airbyte.com/v1/destinations?limit=5&offset=0'
        data:
          destinationId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
          name: Analytics Team Postgres
          destinationType: postgres
          workspaceId: 871d9b60-11d1-44cb-8c92-c246d53bf87e
      x-sdk-component: true
    WorkspacesResponse:
      title: Root Type for WorkspacesResponse
      description: ''
      required:
        - data
      type: object
      properties:
        previous:
          type: string
        next:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceResponse'
      example:
        next: 'https://api.airbyte.com/v1/workspaces?limit=5&offset=10'
        previous: 'https://api.airbyte.com/v1/workspaces?limit=5&offset=0'
        data:
          workspaceId: 18dccc91-0ab1-4f72-9ed7-0b8fc27c5826
          name: Acme Company
          dataResidency: auto
      x-sdk-component: true
    StreamConfiguration:
      description: Configurations for a single stream.
      type: object
      required:
        - name
      properties:
        name:
          type: string
        syncMode:
          $ref: '#/components/schemas/ConnectionSyncModeEnum'
        cursorField:
          description: Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental` unless there is a default.
          type: array
          items:
            type: string
        primaryKey:
          description: Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup` unless it is already supplied by the source schema.
          type: array
          items:
            type: array
            items:
              type: string
        selectedFields:
          description: By default (if not provided in the request) all fields will be synced. Otherwise, only the fields in this list will be synced.
          $ref: '#/components/schemas/SelectedFields'
      x-sdk-component: true
    StreamConfigurations:
      description: A list of configured stream options for a connection.
      type: object
      properties:
        streams:
          type: array
          items:
            $ref: '#/components/schemas/StreamConfiguration'
      x-sdk-component: true
    StreamPropertiesResponse:
      description: A list of stream properties.
      type: array
      items:
        $ref: '#/components/schemas/StreamProperties'
      x-sdk-component: true
    StreamProperties:
      description: The stream properties associated with a connection.
      type: object
      properties:
        streamName:
          type: string
        syncModes:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionSyncModeEnum'
        defaultCursorField:
          type: array
          items:
            type: string
        sourceDefinedCursorField:
          type: boolean
        sourceDefinedPrimaryKey:
          type: array
          items:
            type: array
            items:
              type: string
        propertyFields:
          type: array
          items:
            type: array
            items:
              type: string
      x-sdk-component: true
    ConnectionSyncModeEnum:
      enum:
        - full_refresh_overwrite
        - full_refresh_append
        - incremental_append
        - incremental_deduped_history
      x-sdk-component: true
    ActorTypeEnum:
      description: Whether you're setting this override for a source or destination
      enum:
        - source
        - destination
      x-sdk-component: true

    ISO8601DateTime:
      type: string
      format: date-time
      x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonFormat(pattern="yyyy-MM-dd''T''HH:mm:ss.SSS''Z''")'

  responses:
    NotFoundResponse:
      description: Object with given id was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
    InvalidInputResponse:
      description: Input failed validation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidInputExceptionInfo'
    ForbiddenResponse:
      description: Operation forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnownExceptionInfo'
    ExceptionResponse:
      description: Exception occurred; see message for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnownExceptionInfo'
    InitiateOauthResponse:
      content:
        application/json: {}
      description: >-
        Response from the initiate OAuth call should be an object with a single property which will be
        the `redirect_url`. If a user is redirected to this URL, they'll be prompted by the identity
        provider to authenticate.
      x-sdk-component: true
security:
  - {}
