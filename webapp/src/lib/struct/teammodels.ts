interface Team {
	_id: string;
	ownerId: string;
	name: string;
	orgId: string;
	members: string[];
	dateCreated: string;
	permissions: Record<string, string>;
	llmModel: Model;
	embeddingModel: Model;
}

interface Model {
	_id: string;
	orgId: string;
	teamId: string;
	name: string;
	model: string;
	embeddingLength: number;
	modelType: string;
	type: string;
	config: {
		model: string;
		api_key: string;
		base_url: string;
		cohere_api_key: string;
		groq_api_key: string;
	};
}

interface Account {
	_id: string;
	name: string;
	email: string;
	orgs: Org[];
	currentOrg: string;
	currentTeam: string;
	stripe: Stripe;
	oauth: Record<string, unknown>;
	permissions: string;
	onboarded: boolean;
	_stripe: Stripe;
}

interface Org {
	id: string;
	name: string;
	ownerId: string;
	teams: TeamSummary[];
	permissions: Record<string, string>;
}

interface TeamSummary {
	id: string;
	name: string;
	ownerId: string;
	permissions: Record<string, string>;
}

interface Stripe {
	stripeCustomerId: string;
	stripePlan: string;
	stripeAddons: {
		users: number;
		storage: number;
	};
	stripeTrial: boolean;
	stripeEndsAt: number;
}

export interface TeamModelResponse {
	data: Team;
	csrf: string;
	account: Account;
}

/**
 * @openapi
 *  components:
 *   schemas:
 *    Model:
 *     type: object
 *     description: Represents an AI model used within a team or organization.
 *     required:
 *      - _id
 *      - orgId
 *      - teamId
 *      - name
 *      - model
 *      - embeddingLength
 *      - modelType
 *      - type
 *      - config
 *     properties:
 *      _id:
 *       description: Unique identifier for the model.
 *       type: string
 *      orgId:
 *       description: Identifier of the organization to which the model belongs.
 *       type: string
 *      teamId:
 *       description: Identifier of the team to which the model belongs.
 *       type: string
 *      name:
 *       description: The name of the model.
 *       type: string
 *      model:
 *       description: The specific AI model used.
 *       type: string
 *      embeddingLength:
 *       description: The length of the embeddings generated by the model.
 *       type: integer
 *      modelType:
 *       description: The type of the model.
 *       type: string
 *      type:
 *       description: The general type of the model (e.g., embedding, language model).
 *       type: string
 *      config:
 *       type: object
 *       description: Configuration settings for the model.
 *       required:
 *        - model
 *        - api_key
 *        - base_url
 *        - cohere_api_key
 *        - groq_api_key
 *       properties:
 *        model:
 *         description: The model configuration setting.
 *         type: string
 *        api_key:
 *         description: API key for accessing the model.
 *         type: string
 *        base_url:
 *         description: The base URL for the model's API.
 *         type: string
 *        cohere_api_key:
 *         description: API key for accessing Cohere services.
 *         type: string
 *        groq_api_key:
 *         description: API key for accessing Groq services.
 *         type: string
 *
 *    Team:
 *     type: object
 *     description: Represents a team within an organization, including members, models, and permissions.
 *     required:
 *      - _id
 *      - ownerId
 *      - name
 *      - orgId
 *      - members
 *      - dateCreated
 *      - permissions
 *      - llmModel
 *      - embeddingModel
 *     properties:
 *      _id:
 *       description: Unique identifier for the team.
 *       type: string
 *      ownerId:
 *       description: Identifier of the owner of the team.
 *       type: string
 *      name:
 *       description: The name of the team.
 *       type: string
 *      orgId:
 *       description: Identifier of the organization to which the team belongs.
 *       type: string
 *      members:
 *       description: List of member identifiers belonging to the team.
 *       type: array
 *       items:
 *        type: string
 *      dateCreated:
 *       description: The date when the team was created.
 *       type: string
 *       format: date-time
 *      permissions:
 *       description: A mapping of user, team, or org IDs to their permissions within the team.
 *       type: object
 *       additionalProperties:
 *        type: string
 *      llmModel:
 *       description: The large language model associated with the team.
 *       $ref: '#/components/schemas/Model'
 *      embeddingModel:
 *       description: The embedding model associated with the team.
 *       $ref: '#/components/schemas/Model'
 *
 *    TeamSummary:
 *     type: object
 *     description: A summary view of a team, typically used in an organization context.
 *     required:
 *      - id
 *      - name
 *      - ownerId
 *      - permissions
 *     properties:
 *      id:
 *       description: Unique identifier for the team summary.
 *       type: string
 *      name:
 *       description: The name of the team.
 *       type: string
 *      ownerId:
 *       description: Identifier of the owner of the team.
 *       type: string
 *      permissions:
 *       description: A mapping of user, team, or org IDs to their permissions within the team.
 *       type: object
 *       additionalProperties:
 *        type: string
 *
 *    Org:
 *     type: object
 *     description: Represents an organization, including its teams and permissions.
 *     required:
 *      - id
 *      - name
 *      - ownerId
 *      - teams
 *      - permissions
 *     properties:
 *      id:
 *       description: Unique identifier for the organization.
 *       type: string
 *      name:
 *       description: The name of the organization.
 *       type: string
 *      ownerId:
 *       description: Identifier of the owner of the organization.
 *       type: string
 *      teams:
 *       description: List of team summaries belonging to the organization.
 *       type: array
 *       items:
 *        $ref: '#/components/schemas/TeamSummary'
 *      permissions:
 *       description: A mapping of user, team, or org IDs to their permissions within the organization.
 *       type: object
 *       additionalProperties:
 *        type: string
 *
 *    Stripe:
 *     type: object
 *     description: Stripe-related information, including plan details and trial status.
 *     required:
 *      - stripeCustomerId
 *      - stripePlan
 *      - stripeAddons
 *      - stripeTrial
 *      - stripeEndsAt
 *     properties:
 *      stripeCustomerId:
 *       description: Stripe customer ID associated with the account.
 *       type: string
 *      stripePlan:
 *       description: The current Stripe plan of the account.
 *       type: string
 *      stripeAddons:
 *       type: object
 *       description: Additional Stripe features such as users and storage.
 *       required:
 *        - users
 *        - storage
 *       properties:
 *        users:
 *         description: Number of users included in the plan.
 *         type: integer
 *        storage:
 *         description: Amount of storage included in the plan.
 *         type: integer
 *      stripeTrial:
 *       description: Indicates whether the account is on a trial.
 *       type: boolean
 *      stripeEndsAt:
 *       description: The timestamp when the Stripe subscription ends.
 *       type: integer
 *
 *    Account:
 *     type: object
 *     description: Represents an account, including personal details, organizational affiliations, and payment information.
 *     required:
 *      - _id
 *      - name
 *      - email
 *      - orgs
 *      - currentOrg
 *      - currentTeam
 *      - stripe
 *      - oauth
 *      - permissions
 *      - onboarded
 *      - _stripe
 *     properties:
 *      _id:
 *       description: Unique identifier for the account.
 *       type: string
 *      name:
 *       description: The name of the account holder.
 *       type: string
 *      email:
 *       description: The email address associated with the account.
 *       type: string
 *      orgs:
 *       description: List of organizations the account is affiliated with.
 *       type: array
 *       items:
 *        $ref: '#/components/schemas/Org'
 *      currentOrg:
 *       description: The ID of the currently active organization.
 *       type: string
 *      currentTeam:
 *       description: The ID of the currently active team.
 *       type: string
 *      stripe:
 *       description: Stripe-related information for the account.
 *       $ref: '#/components/schemas/Stripe'
 *      oauth:
 *       description: OAuth-related information for the account.
 *       type: object
 *       additionalProperties: true
 *      permissions:
 *       description: Permissions granted to the account.
 *       type: string
 *      onboarded:
 *       description: Indicates whether the account holder has completed onboarding.
 *       type: boolean
 *      _stripe:
 *       description: Additional Stripe-related information for internal use.
 *       $ref: '#/components/schemas/Stripe'
 *
 *    TeamModelResponse:
 *     type: object
 *     description: Response object containing details about a team, along with associated account information.
 *     required:
 *      - data
 *      - csrf
 *      - account
 *     properties:
 *      data:
 *       description: The data containing the team details.
 *       $ref: '#/components/schemas/Team'
 *      csrf:
 *       description: CSRF token for security.
 *       type: string
 *      account:
 *       description: The account information associated with the team.
 *       $ref: '#/components/schemas/Account'
 */
